diff -rcN ./STM8L10x_StdPeriph_Lib/Doxyfile ./STM8L10x_StdPeriph_Lib_sdcc/Doxyfile
*** ./STM8L10x_StdPeriph_Lib/Doxyfile	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Doxyfile	2017-08-15 16:34:14.984371155 +0200
***************
*** 0 ****
--- 1,2382 ----
+ # Doxyfile 1.8.7
+    
+ # This file describes the settings to be used by the documentation system
+ # doxygen (www.doxygen.org) for a project.
+ #
+ # All text after a double hash (##) is considered a comment and is placed in
+ # front of the TAG it is preceding.
+ #
+ # All text after a single hash (#) is considered a comment and will be ignored.
+ # The format is:
+ # TAG = value [value, ...]
+ # For lists, items can also be appended using:
+ # TAG += value [value, ...]
+ # Values that contain spaces should be placed between quotes (\" \").
+ 
+ #---------------------------------------------------------------------------
+ # Project related configuration options
+ #---------------------------------------------------------------------------
+ 
+ # This tag specifies the encoding used for all characters in the config file
+ # that follow. The default is UTF-8 which is also the encoding used for all text
+ # before the first occurrence of this tag. Doxygen uses libiconv (or the iconv
+ # built into libc) for the transcoding. See http://www.gnu.org/software/libiconv
+ # for the list of possible encodings.
+ # The default value is: UTF-8.
+ 
+ DOXYFILE_ENCODING      = UTF-8
+ 
+ # The PROJECT_NAME tag is a single word (or a sequence of words surrounded by
+ # double-quotes, unless you are using Doxywizard) that should identify the
+ # project for which the documentation is generated. This name is used in the
+ # title of most generated pages and in a few other places.
+ # The default value is: My Project.
+ 
+ PROJECT_NAME           = "STML10x Standard Peripheral Libary"
+ 
+ # The PROJECT_NUMBER tag can be used to enter a project or revision number. This
+ # could be handy for archiving the generated documentation or if some version
+ # control system is used.
+ 
+ PROJECT_NUMBER         = 1.2.1
+ 
+ # Using the PROJECT_BRIEF tag one can provide an optional one line description
+ # for a project that appears at the top of each page and should give viewer a
+ # quick idea about the purpose of the project. Keep the description short.
+ 
+ PROJECT_BRIEF          = 
+ 
+ # With the PROJECT_LOGO tag one can specify an logo or icon that is included in
+ # the documentation. The maximum height of the logo should not exceed 55 pixels
+ # and the maximum width should not exceed 200 pixels. Doxygen will copy the logo
+ # to the output directory.
+ 
+ PROJECT_LOGO           = ./_htmresc/logo.bmp
+ 
+ # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path
+ # into which the generated documentation will be written. If a relative path is
+ # entered, it will be relative to the location where doxygen was started. If
+ # left blank the current directory will be used.
+ 
+ OUTPUT_DIRECTORY       = ./doxygen
+ 
+ # If the CREATE_SUBDIRS tag is set to YES, then doxygen will create 4096 sub-
+ # directories (in 2 levels) under the output directory of each output format and
+ # will distribute the generated files over these directories. Enabling this
+ # option can be useful when feeding doxygen a huge amount of source files, where
+ # putting all generated files in the same directory would otherwise causes
+ # performance problems for the file system.
+ # The default value is: NO.
+ 
+ CREATE_SUBDIRS         = YES
+ 
+ # If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII
+ # characters to appear in the names of generated files. If set to NO, non-ASCII
+ # characters will be escaped, for example _xE3_x81_x84 will be used for Unicode
+ # U+3044.
+ # The default value is: NO.
+ 
+ ALLOW_UNICODE_NAMES    = YES
+ 
+ # The OUTPUT_LANGUAGE tag is used to specify the language in which all
+ # documentation generated by doxygen is written. Doxygen will use this
+ # information to generate all constant output in the proper language.
+ # Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,
+ # Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),
+ # Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,
+ # Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),
+ # Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,
+ # Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,
+ # Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,
+ # Ukrainian and Vietnamese.
+ # The default value is: English.
+ 
+ OUTPUT_LANGUAGE        = English
+ 
+ # If the BRIEF_MEMBER_DESC tag is set to YES doxygen will include brief member
+ # descriptions after the members that are listed in the file and class
+ # documentation (similar to Javadoc). Set to NO to disable this.
+ # The default value is: YES.
+ 
+ BRIEF_MEMBER_DESC      = YES
+ 
+ # If the REPEAT_BRIEF tag is set to YES doxygen will prepend the brief
+ # description of a member or function before the detailed description
+ #
+ # Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
+ # brief descriptions will be completely suppressed.
+ # The default value is: YES.
+ 
+ REPEAT_BRIEF           = YES
+ 
+ # This tag implements a quasi-intelligent brief description abbreviator that is
+ # used to form the text in various listings. Each string in this list, if found
+ # as the leading text of the brief description, will be stripped from the text
+ # and the result, after processing the whole list, is used as the annotated
+ # text. Otherwise, the brief description is used as-is. If left blank, the
+ # following values are used ($name is automatically replaced with the name of
+ # the entity):The $name class, The $name widget, The $name file, is, provides,
+ # specifies, contains, represents, a, an and the.
+ 
+ ABBREVIATE_BRIEF       = "The $name class" \
+                          "The $name widget" \
+                          "The $name file" \
+                          is \
+                          provides \
+                          specifies \
+                          contains \
+                          represents \
+                          a \
+                          an \
+                          the
+ 
+ # If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
+ # doxygen will generate a detailed section even if there is only a brief
+ # description.
+ # The default value is: NO.
+ 
+ ALWAYS_DETAILED_SEC    = NO
+ 
+ # If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
+ # inherited members of a class in the documentation of that class as if those
+ # members were ordinary class members. Constructors, destructors and assignment
+ # operators of the base classes will not be shown.
+ # The default value is: NO.
+ 
+ INLINE_INHERITED_MEMB  = NO
+ 
+ # If the FULL_PATH_NAMES tag is set to YES doxygen will prepend the full path
+ # before files name in the file list and in the header files. If set to NO the
+ # shortest path that makes the file name unique will be used
+ # The default value is: YES.
+ 
+ FULL_PATH_NAMES        = YES
+ 
+ # The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.
+ # Stripping is only done if one of the specified strings matches the left-hand
+ # part of the path. The tag can be used to show relative paths in the file list.
+ # If left blank the directory from which doxygen is run is used as the path to
+ # strip.
+ #
+ # Note that you can specify absolute paths here, but also relative paths, which
+ # will be relative from the directory where doxygen is started.
+ # This tag requires that the tag FULL_PATH_NAMES is set to YES.
+ 
+ STRIP_FROM_PATH        = 
+ 
+ # The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the
+ # path mentioned in the documentation of a class, which tells the reader which
+ # header file to include in order to use a class. If left blank only the name of
+ # the header file containing the class definition is used. Otherwise one should
+ # specify the list of include paths that are normally passed to the compiler
+ # using the -I flag.
+ 
+ STRIP_FROM_INC_PATH    = 
+ 
+ # If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but
+ # less readable) file names. This can be useful is your file systems doesn't
+ # support long names like on DOS, Mac, or CD-ROM.
+ # The default value is: NO.
+ 
+ SHORT_NAMES            = NO
+ 
+ # If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the
+ # first line (until the first dot) of a Javadoc-style comment as the brief
+ # description. If set to NO, the Javadoc-style will behave just like regular Qt-
+ # style comments (thus requiring an explicit @brief command for a brief
+ # description.)
+ # The default value is: NO.
+ 
+ JAVADOC_AUTOBRIEF      = NO
+ 
+ # If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first
+ # line (until the first dot) of a Qt-style comment as the brief description. If
+ # set to NO, the Qt-style will behave just like regular Qt-style comments (thus
+ # requiring an explicit \brief command for a brief description.)
+ # The default value is: NO.
+ 
+ QT_AUTOBRIEF           = NO
+ 
+ # The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a
+ # multi-line C++ special comment block (i.e. a block of //! or /// comments) as
+ # a brief description. This used to be the default behavior. The new default is
+ # to treat a multi-line C++ comment block as a detailed description. Set this
+ # tag to YES if you prefer the old behavior instead.
+ #
+ # Note that setting this tag to YES also means that rational rose comments are
+ # not recognized any more.
+ # The default value is: NO.
+ 
+ MULTILINE_CPP_IS_BRIEF = NO
+ 
+ # If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the
+ # documentation from any documented member that it re-implements.
+ # The default value is: YES.
+ 
+ INHERIT_DOCS           = YES
+ 
+ # If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce a
+ # new page for each member. If set to NO, the documentation of a member will be
+ # part of the file/class/namespace that contains it.
+ # The default value is: NO.
+ 
+ SEPARATE_MEMBER_PAGES  = NO
+ 
+ # The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen
+ # uses this value to replace tabs by spaces in code fragments.
+ # Minimum value: 1, maximum value: 16, default value: 4.
+ 
+ TAB_SIZE               = 4
+ 
+ # This tag can be used to specify a number of aliases that act as commands in
+ # the documentation. An alias has the form:
+ # name=value
+ # For example adding
+ # "sideeffect=@par Side Effects:\n"
+ # will allow you to put the command \sideeffect (or @sideeffect) in the
+ # documentation, which will result in a user-defined paragraph with heading
+ # "Side Effects:". You can put \n's in the value part of an alias to insert
+ # newlines.
+ 
+ ALIASES                = 
+ 
+ # This tag can be used to specify a number of word-keyword mappings (TCL only).
+ # A mapping has the form "name=value". For example adding "class=itcl::class"
+ # will allow you to use the command class in the itcl::class meaning.
+ 
+ TCL_SUBST              = 
+ 
+ # Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources
+ # only. Doxygen will then generate output that is more tailored for C. For
+ # instance, some of the names that are used will be different. The list of all
+ # members will be omitted, etc.
+ # The default value is: NO.
+ 
+ OPTIMIZE_OUTPUT_FOR_C  = YES
+ 
+ # Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or
+ # Python sources only. Doxygen will then generate output that is more tailored
+ # for that language. For instance, namespaces will be presented as packages,
+ # qualified scopes will look different, etc.
+ # The default value is: NO.
+ 
+ OPTIMIZE_OUTPUT_JAVA   = NO
+ 
+ # Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
+ # sources. Doxygen will then generate output that is tailored for Fortran.
+ # The default value is: NO.
+ 
+ OPTIMIZE_FOR_FORTRAN   = NO
+ 
+ # Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
+ # sources. Doxygen will then generate output that is tailored for VHDL.
+ # The default value is: NO.
+ 
+ OPTIMIZE_OUTPUT_VHDL   = NO
+ 
+ # Doxygen selects the parser to use depending on the extension of the files it
+ # parses. With this tag you can assign which parser to use for a given
+ # extension. Doxygen has a built-in mapping, but you can override or extend it
+ # using this tag. The format is ext=language, where ext is a file extension, and
+ # language is one of the parsers supported by doxygen: IDL, Java, Javascript,
+ # C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:
+ # FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:
+ # Fortran. In the later case the parser tries to guess whether the code is fixed
+ # or free formatted code, this is the default for Fortran type files), VHDL. For
+ # instance to make doxygen treat .inc files as Fortran files (default is PHP),
+ # and .f files as C (default is Fortran), use: inc=Fortran f=C.
+ #
+ # Note For files without extension you can use no_extension as a placeholder.
+ #
+ # Note that for custom extensions you also need to set FILE_PATTERNS otherwise
+ # the files are not read by doxygen.
+ 
+ EXTENSION_MAPPING      = 
+ 
+ # If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments
+ # according to the Markdown format, which allows for more readable
+ # documentation. See http://daringfireball.net/projects/markdown/ for details.
+ # The output of markdown processing is further processed by doxygen, so you can
+ # mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in
+ # case of backward compatibilities issues.
+ # The default value is: YES.
+ 
+ MARKDOWN_SUPPORT       = YES
+ 
+ # When enabled doxygen tries to link words that correspond to documented
+ # classes, or namespaces to their corresponding documentation. Such a link can
+ # be prevented in individual cases by by putting a % sign in front of the word
+ # or globally by setting AUTOLINK_SUPPORT to NO.
+ # The default value is: YES.
+ 
+ AUTOLINK_SUPPORT       = YES
+ 
+ # If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
+ # to include (a tag file for) the STL sources as input, then you should set this
+ # tag to YES in order to let doxygen match functions declarations and
+ # definitions whose arguments contain STL classes (e.g. func(std::string);
+ # versus func(std::string) {}). This also make the inheritance and collaboration
+ # diagrams that involve STL classes more complete and accurate.
+ # The default value is: NO.
+ 
+ BUILTIN_STL_SUPPORT    = NO
+ 
+ # If you use Microsoft's C++/CLI language, you should set this option to YES to
+ # enable parsing support.
+ # The default value is: NO.
+ 
+ CPP_CLI_SUPPORT        = NO
+ 
+ # Set the SIP_SUPPORT tag to YES if your project consists of sip (see:
+ # http://www.riverbankcomputing.co.uk/software/sip/intro) sources only. Doxygen
+ # will parse them like normal C++ but will assume all classes use public instead
+ # of private inheritance when no explicit protection keyword is present.
+ # The default value is: NO.
+ 
+ SIP_SUPPORT            = NO
+ 
+ # For Microsoft's IDL there are propget and propput attributes to indicate
+ # getter and setter methods for a property. Setting this option to YES will make
+ # doxygen to replace the get and set methods by a property in the documentation.
+ # This will only work if the methods are indeed getting or setting a simple
+ # type. If this is not the case, or you want to show the methods anyway, you
+ # should set this option to NO.
+ # The default value is: YES.
+ 
+ IDL_PROPERTY_SUPPORT   = YES
+ 
+ # If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
+ # tag is set to YES, then doxygen will reuse the documentation of the first
+ # member in the group (if any) for the other members of the group. By default
+ # all members of a group must be documented explicitly.
+ # The default value is: NO.
+ 
+ DISTRIBUTE_GROUP_DOC   = NO
+ 
+ # Set the SUBGROUPING tag to YES to allow class member groups of the same type
+ # (for instance a group of public functions) to be put as a subgroup of that
+ # type (e.g. under the Public Functions section). Set it to NO to prevent
+ # subgrouping. Alternatively, this can be done per class using the
+ # \nosubgrouping command.
+ # The default value is: YES.
+ 
+ SUBGROUPING            = YES
+ 
+ # When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions
+ # are shown inside the group in which they are included (e.g. using \ingroup)
+ # instead of on a separate page (for HTML and Man pages) or section (for LaTeX
+ # and RTF).
+ #
+ # Note that this feature does not work in combination with
+ # SEPARATE_MEMBER_PAGES.
+ # The default value is: NO.
+ 
+ INLINE_GROUPED_CLASSES = NO
+ 
+ # When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions
+ # with only public data fields or simple typedef fields will be shown inline in
+ # the documentation of the scope in which they are defined (i.e. file,
+ # namespace, or group documentation), provided this scope is documented. If set
+ # to NO, structs, classes, and unions are shown on a separate page (for HTML and
+ # Man pages) or section (for LaTeX and RTF).
+ # The default value is: NO.
+ 
+ INLINE_SIMPLE_STRUCTS  = NO
+ 
+ # When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or
+ # enum is documented as struct, union, or enum with the name of the typedef. So
+ # typedef struct TypeS {} TypeT, will appear in the documentation as a struct
+ # with name TypeT. When disabled the typedef will appear as a member of a file,
+ # namespace, or class. And the struct will be named TypeS. This can typically be
+ # useful for C code in case the coding convention dictates that all compound
+ # types are typedef'ed and only the typedef is referenced, never the tag name.
+ # The default value is: NO.
+ 
+ TYPEDEF_HIDES_STRUCT   = NO
+ 
+ # The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This
+ # cache is used to resolve symbols given their name and scope. Since this can be
+ # an expensive process and often the same symbol appears multiple times in the
+ # code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small
+ # doxygen will become slower. If the cache is too large, memory is wasted. The
+ # cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range
+ # is 0..9, the default is 0, corresponding to a cache size of 2^16=65536
+ # symbols. At the end of a run doxygen will report the cache usage and suggest
+ # the optimal cache size from a speed point of view.
+ # Minimum value: 0, maximum value: 9, default value: 0.
+ 
+ LOOKUP_CACHE_SIZE      = 0
+ 
+ #---------------------------------------------------------------------------
+ # Build related configuration options
+ #---------------------------------------------------------------------------
+ 
+ # If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in
+ # documentation are documented, even if no documentation was available. Private
+ # class members and static file members will be hidden unless the
+ # EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.
+ # Note: This will also disable the warnings about undocumented members that are
+ # normally produced when WARNINGS is set to YES.
+ # The default value is: NO.
+ 
+ EXTRACT_ALL            = NO
+ 
+ # If the EXTRACT_PRIVATE tag is set to YES all private members of a class will
+ # be included in the documentation.
+ # The default value is: NO.
+ 
+ EXTRACT_PRIVATE        = NO
+ 
+ # If the EXTRACT_PACKAGE tag is set to YES all members with package or internal
+ # scope will be included in the documentation.
+ # The default value is: NO.
+ 
+ EXTRACT_PACKAGE        = NO
+ 
+ # If the EXTRACT_STATIC tag is set to YES all static members of a file will be
+ # included in the documentation.
+ # The default value is: NO.
+ 
+ EXTRACT_STATIC         = NO
+ 
+ # If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) defined
+ # locally in source files will be included in the documentation. If set to NO
+ # only classes defined in header files are included. Does not have any effect
+ # for Java sources.
+ # The default value is: YES.
+ 
+ EXTRACT_LOCAL_CLASSES  = YES
+ 
+ # This flag is only useful for Objective-C code. When set to YES local methods,
+ # which are defined in the implementation section but not in the interface are
+ # included in the documentation. If set to NO only methods in the interface are
+ # included.
+ # The default value is: NO.
+ 
+ EXTRACT_LOCAL_METHODS  = NO
+ 
+ # If this flag is set to YES, the members of anonymous namespaces will be
+ # extracted and appear in the documentation as a namespace called
+ # 'anonymous_namespace{file}', where file will be replaced with the base name of
+ # the file that contains the anonymous namespace. By default anonymous namespace
+ # are hidden.
+ # The default value is: NO.
+ 
+ EXTRACT_ANON_NSPACES   = NO
+ 
+ # If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all
+ # undocumented members inside documented classes or files. If set to NO these
+ # members will be included in the various overviews, but no documentation
+ # section is generated. This option has no effect if EXTRACT_ALL is enabled.
+ # The default value is: NO.
+ 
+ HIDE_UNDOC_MEMBERS     = NO
+ 
+ # If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all
+ # undocumented classes that are normally visible in the class hierarchy. If set
+ # to NO these classes will be included in the various overviews. This option has
+ # no effect if EXTRACT_ALL is enabled.
+ # The default value is: NO.
+ 
+ HIDE_UNDOC_CLASSES     = NO
+ 
+ # If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend
+ # (class|struct|union) declarations. If set to NO these declarations will be
+ # included in the documentation.
+ # The default value is: NO.
+ 
+ HIDE_FRIEND_COMPOUNDS  = NO
+ 
+ # If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any
+ # documentation blocks found inside the body of a function. If set to NO these
+ # blocks will be appended to the function's detailed documentation block.
+ # The default value is: NO.
+ 
+ HIDE_IN_BODY_DOCS      = NO
+ 
+ # The INTERNAL_DOCS tag determines if documentation that is typed after a
+ # \internal command is included. If the tag is set to NO then the documentation
+ # will be excluded. Set it to YES to include the internal documentation.
+ # The default value is: NO.
+ 
+ INTERNAL_DOCS          = NO
+ 
+ # If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file
+ # names in lower-case letters. If set to YES upper-case letters are also
+ # allowed. This is useful if you have classes or files whose names only differ
+ # in case and if your file system supports case sensitive file names. Windows
+ # and Mac users are advised to set this option to NO.
+ # The default value is: system dependent.
+ 
+ CASE_SENSE_NAMES       = NO
+ 
+ # If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with
+ # their full class and namespace scopes in the documentation. If set to YES the
+ # scope will be hidden.
+ # The default value is: NO.
+ 
+ HIDE_SCOPE_NAMES       = YES
+ 
+ # If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of
+ # the files that are included by a file in the documentation of that file.
+ # The default value is: YES.
+ 
+ SHOW_INCLUDE_FILES     = YES
+ 
+ # If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each
+ # grouped member an include statement to the documentation, telling the reader
+ # which file to include in order to use the member.
+ # The default value is: NO.
+ 
+ SHOW_GROUPED_MEMB_INC  = NO
+ 
+ # If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include
+ # files with double quotes in the documentation rather than with sharp brackets.
+ # The default value is: NO.
+ 
+ FORCE_LOCAL_INCLUDES   = NO
+ 
+ # If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the
+ # documentation for inline members.
+ # The default value is: YES.
+ 
+ INLINE_INFO            = YES
+ 
+ # If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the
+ # (detailed) documentation of file and class members alphabetically by member
+ # name. If set to NO the members will appear in declaration order.
+ # The default value is: YES.
+ 
+ SORT_MEMBER_DOCS       = YES
+ 
+ # If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief
+ # descriptions of file, namespace and class members alphabetically by member
+ # name. If set to NO the members will appear in declaration order. Note that
+ # this will also influence the order of the classes in the class list.
+ # The default value is: NO.
+ 
+ SORT_BRIEF_DOCS        = NO
+ 
+ # If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the
+ # (brief and detailed) documentation of class members so that constructors and
+ # destructors are listed first. If set to NO the constructors will appear in the
+ # respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.
+ # Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief
+ # member documentation.
+ # Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting
+ # detailed member documentation.
+ # The default value is: NO.
+ 
+ SORT_MEMBERS_CTORS_1ST = NO
+ 
+ # If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy
+ # of group names into alphabetical order. If set to NO the group names will
+ # appear in their defined order.
+ # The default value is: NO.
+ 
+ SORT_GROUP_NAMES       = NO
+ 
+ # If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by
+ # fully-qualified names, including namespaces. If set to NO, the class list will
+ # be sorted only by class name, not including the namespace part.
+ # Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
+ # Note: This option applies only to the class list, not to the alphabetical
+ # list.
+ # The default value is: NO.
+ 
+ SORT_BY_SCOPE_NAME     = NO
+ 
+ # If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper
+ # type resolution of all parameters of a function it will reject a match between
+ # the prototype and the implementation of a member function even if there is
+ # only one candidate or it is obvious which candidate to choose by doing a
+ # simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still
+ # accept a match between prototype and implementation in such cases.
+ # The default value is: NO.
+ 
+ STRICT_PROTO_MATCHING  = NO
+ 
+ # The GENERATE_TODOLIST tag can be used to enable ( YES) or disable ( NO) the
+ # todo list. This list is created by putting \todo commands in the
+ # documentation.
+ # The default value is: YES.
+ 
+ GENERATE_TODOLIST      = YES
+ 
+ # The GENERATE_TESTLIST tag can be used to enable ( YES) or disable ( NO) the
+ # test list. This list is created by putting \test commands in the
+ # documentation.
+ # The default value is: YES.
+ 
+ GENERATE_TESTLIST      = YES
+ 
+ # The GENERATE_BUGLIST tag can be used to enable ( YES) or disable ( NO) the bug
+ # list. This list is created by putting \bug commands in the documentation.
+ # The default value is: YES.
+ 
+ GENERATE_BUGLIST       = YES
+ 
+ # The GENERATE_DEPRECATEDLIST tag can be used to enable ( YES) or disable ( NO)
+ # the deprecated list. This list is created by putting \deprecated commands in
+ # the documentation.
+ # The default value is: YES.
+ 
+ GENERATE_DEPRECATEDLIST= YES
+ 
+ # The ENABLED_SECTIONS tag can be used to enable conditional documentation
+ # sections, marked by \if <section_label> ... \endif and \cond <section_label>
+ # ... \endcond blocks.
+ 
+ ENABLED_SECTIONS       = 
+ 
+ # The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the
+ # initial value of a variable or macro / define can have for it to appear in the
+ # documentation. If the initializer consists of more lines than specified here
+ # it will be hidden. Use a value of 0 to hide initializers completely. The
+ # appearance of the value of individual variables and macros / defines can be
+ # controlled using \showinitializer or \hideinitializer command in the
+ # documentation regardless of this setting.
+ # Minimum value: 0, maximum value: 10000, default value: 30.
+ 
+ MAX_INITIALIZER_LINES  = 30
+ 
+ # Set the SHOW_USED_FILES tag to NO to disable the list of files generated at
+ # the bottom of the documentation of classes and structs. If set to YES the list
+ # will mention the files that were used to generate the documentation.
+ # The default value is: YES.
+ 
+ SHOW_USED_FILES        = YES
+ 
+ # Set the SHOW_FILES tag to NO to disable the generation of the Files page. This
+ # will remove the Files entry from the Quick Index and from the Folder Tree View
+ # (if specified).
+ # The default value is: YES.
+ 
+ SHOW_FILES             = YES
+ 
+ # Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces
+ # page. This will remove the Namespaces entry from the Quick Index and from the
+ # Folder Tree View (if specified).
+ # The default value is: YES.
+ 
+ SHOW_NAMESPACES        = YES
+ 
+ # The FILE_VERSION_FILTER tag can be used to specify a program or script that
+ # doxygen should invoke to get the current version for each file (typically from
+ # the version control system). Doxygen will invoke the program by executing (via
+ # popen()) the command command input-file, where command is the value of the
+ # FILE_VERSION_FILTER tag, and input-file is the name of an input file provided
+ # by doxygen. Whatever the program writes to standard output is used as the file
+ # version. For an example see the documentation.
+ 
+ FILE_VERSION_FILTER    = 
+ 
+ # The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
+ # by doxygen. The layout file controls the global structure of the generated
+ # output files in an output format independent way. To create the layout file
+ # that represents doxygen's defaults, run doxygen with the -l option. You can
+ # optionally specify a file name after the option, if omitted DoxygenLayout.xml
+ # will be used as the name of the layout file.
+ #
+ # Note that if you run doxygen from a directory containing a file called
+ # DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE
+ # tag is left empty.
+ 
+ LAYOUT_FILE            = 
+ 
+ # The CITE_BIB_FILES tag can be used to specify one or more bib files containing
+ # the reference definitions. This must be a list of .bib files. The .bib
+ # extension is automatically appended if omitted. This requires the bibtex tool
+ # to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.
+ # For LaTeX the style of the bibliography can be controlled using
+ # LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the
+ # search path. Do not use file names with spaces, bibtex cannot handle them. See
+ # also \cite for info how to create references.
+ 
+ CITE_BIB_FILES         = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to warning and progress messages
+ #---------------------------------------------------------------------------
+ 
+ # The QUIET tag can be used to turn on/off the messages that are generated to
+ # standard output by doxygen. If QUIET is set to YES this implies that the
+ # messages are off.
+ # The default value is: NO.
+ 
+ QUIET                  = NO
+ 
+ # The WARNINGS tag can be used to turn on/off the warning messages that are
+ # generated to standard error ( stderr) by doxygen. If WARNINGS is set to YES
+ # this implies that the warnings are on.
+ #
+ # Tip: Turn warnings on while writing the documentation.
+ # The default value is: YES.
+ 
+ WARNINGS               = YES
+ 
+ # If the WARN_IF_UNDOCUMENTED tag is set to YES, then doxygen will generate
+ # warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag
+ # will automatically be disabled.
+ # The default value is: YES.
+ 
+ WARN_IF_UNDOCUMENTED   = YES
+ 
+ # If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for
+ # potential errors in the documentation, such as not documenting some parameters
+ # in a documented function, or documenting parameters that don't exist or using
+ # markup commands wrongly.
+ # The default value is: YES.
+ 
+ WARN_IF_DOC_ERROR      = YES
+ 
+ # This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that
+ # are documented, but have no documentation for their parameters or return
+ # value. If set to NO doxygen will only warn about wrong or incomplete parameter
+ # documentation, but not about the absence of documentation.
+ # The default value is: NO.
+ 
+ WARN_NO_PARAMDOC       = NO
+ 
+ # The WARN_FORMAT tag determines the format of the warning messages that doxygen
+ # can produce. The string should contain the $file, $line, and $text tags, which
+ # will be replaced by the file and line number from which the warning originated
+ # and the warning text. Optionally the format may contain $version, which will
+ # be replaced by the version of the file (if it could be obtained via
+ # FILE_VERSION_FILTER)
+ # The default value is: $file:$line: $text.
+ 
+ WARN_FORMAT            = "$file:$line: $text"
+ 
+ # The WARN_LOGFILE tag can be used to specify a file to which warning and error
+ # messages should be written. If left blank the output is written to standard
+ # error (stderr).
+ 
+ WARN_LOGFILE           = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the input files
+ #---------------------------------------------------------------------------
+ 
+ # The INPUT tag is used to specify the files and/or directories that contain
+ # documented source files. You may enter file names like myfile.cpp or
+ # directories like /usr/src/myproject. Separate the files or directories with
+ # spaces.
+ # Note: If this tag is empty the current directory is searched.
+ 
+ INPUT                  = ./Libraries \
+                          ./Utilities
+ 
+ # This tag can be used to specify the character encoding of the source files
+ # that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses
+ # libiconv (or the iconv built into libc) for the transcoding. See the libiconv
+ # documentation (see: http://www.gnu.org/software/libiconv) for the list of
+ # possible encodings.
+ # The default value is: UTF-8.
+ 
+ INPUT_ENCODING         = UTF-8
+ 
+ # If the value of the INPUT tag contains directories, you can use the
+ # FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and
+ # *.h) to filter out the source-files in the directories. If left blank the
+ # following patterns are tested:*.c, *.cc, *.cxx, *.cpp, *.c++, *.java, *.ii,
+ # *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h, *.hh, *.hxx, *.hpp,
+ # *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc, *.m, *.markdown,
+ # *.md, *.mm, *.dox, *.py, *.f90, *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf,
+ # *.qsf, *.as and *.js.
+ 
+ FILE_PATTERNS          = *.c \
+                          *.cc \
+                          *.cxx \
+                          *.cpp \
+                          *.c++ \
+                          *.java \
+                          *.ii \
+                          *.ixx \
+                          *.ipp \
+                          *.i++ \
+                          *.inl \
+                          *.idl \
+                          *.ddl \
+                          *.odl \
+                          *.h \
+                          *.hh \
+                          *.hxx \
+                          *.hpp \
+                          *.h++ \
+                          *.cs \
+                          *.d \
+                          *.php \
+                          *.php4 \
+                          *.php5 \
+                          *.phtml \
+                          *.inc \
+                          *.m \
+                          *.markdown \
+                          *.md \
+                          *.mm \
+                          *.dox \
+                          *.py \
+                          *.f90 \
+                          *.f \
+                          *.for \
+                          *.tcl \
+                          *.vhd \
+                          *.vhdl \
+                          *.ucf \
+                          *.qsf \
+                          *.as \
+                          *.js
+ 
+ # The RECURSIVE tag can be used to specify whether or not subdirectories should
+ # be searched for input files as well.
+ # The default value is: NO.
+ 
+ RECURSIVE              = YES
+ 
+ # The EXCLUDE tag can be used to specify files and/or directories that should be
+ # excluded from the INPUT source files. This way you can easily exclude a
+ # subdirectory from a directory tree whose root is specified with the INPUT tag.
+ #
+ # Note that relative paths are relative to the directory from which doxygen is
+ # run.
+ 
+ EXCLUDE                = 
+ 
+ # The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
+ # directories that are symbolic links (a Unix file system feature) are excluded
+ # from the input.
+ # The default value is: NO.
+ 
+ EXCLUDE_SYMLINKS       = NO
+ 
+ # If the value of the INPUT tag contains directories, you can use the
+ # EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
+ # certain files from those directories.
+ #
+ # Note that the wildcards are matched against the file with absolute path, so to
+ # exclude all test directories for example use the pattern */test/*
+ 
+ EXCLUDE_PATTERNS       = 
+ 
+ # The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
+ # (namespaces, classes, functions, etc.) that should be excluded from the
+ # output. The symbol name can be a fully qualified name, a word, or if the
+ # wildcard * is used, a substring. Examples: ANamespace, AClass,
+ # AClass::ANamespace, ANamespace::*Test
+ #
+ # Note that the wildcards are matched against the file with absolute path, so to
+ # exclude all test directories use the pattern */test/*
+ 
+ EXCLUDE_SYMBOLS        = 
+ 
+ # The EXAMPLE_PATH tag can be used to specify one or more files or directories
+ # that contain example code fragments that are included (see the \include
+ # command).
+ 
+ EXAMPLE_PATH           = 
+ 
+ # If the value of the EXAMPLE_PATH tag contains directories, you can use the
+ # EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and
+ # *.h) to filter out the source-files in the directories. If left blank all
+ # files are included.
+ 
+ EXAMPLE_PATTERNS       = *
+ 
+ # If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
+ # searched for input files to be used with the \include or \dontinclude commands
+ # irrespective of the value of the RECURSIVE tag.
+ # The default value is: NO.
+ 
+ EXAMPLE_RECURSIVE      = NO
+ 
+ # The IMAGE_PATH tag can be used to specify one or more files or directories
+ # that contain images that are to be included in the documentation (see the
+ # \image command).
+ 
+ IMAGE_PATH             = 
+ 
+ # The INPUT_FILTER tag can be used to specify a program that doxygen should
+ # invoke to filter for each input file. Doxygen will invoke the filter program
+ # by executing (via popen()) the command:
+ #
+ # <filter> <input-file>
+ #
+ # where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the
+ # name of an input file. Doxygen will then use the output that the filter
+ # program writes to standard output. If FILTER_PATTERNS is specified, this tag
+ # will be ignored.
+ #
+ # Note that the filter must not add or remove lines; it is applied before the
+ # code is scanned, but not when the output code is generated. If lines are added
+ # or removed, the anchors will not be placed correctly.
+ 
+ INPUT_FILTER           = 
+ 
+ # The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
+ # basis. Doxygen will compare the file name with each pattern and apply the
+ # filter if there is a match. The filters are a list of the form: pattern=filter
+ # (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how
+ # filters are used. If the FILTER_PATTERNS tag is empty or if none of the
+ # patterns match the file name, INPUT_FILTER is applied.
+ 
+ FILTER_PATTERNS        = 
+ 
+ # If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
+ # INPUT_FILTER ) will also be used to filter the input files that are used for
+ # producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).
+ # The default value is: NO.
+ 
+ FILTER_SOURCE_FILES    = NO
+ 
+ # The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
+ # pattern. A pattern will override the setting for FILTER_PATTERN (if any) and
+ # it is also possible to disable source filtering for a specific pattern using
+ # *.ext= (so without naming a filter).
+ # This tag requires that the tag FILTER_SOURCE_FILES is set to YES.
+ 
+ FILTER_SOURCE_PATTERNS = 
+ 
+ # If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that
+ # is part of the input, its contents will be placed on the main page
+ # (index.html). This can be useful if you have a project on for instance GitHub
+ # and want to reuse the introduction page also for the doxygen output.
+ 
+ USE_MDFILE_AS_MAINPAGE = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to source browsing
+ #---------------------------------------------------------------------------
+ 
+ # If the SOURCE_BROWSER tag is set to YES then a list of source files will be
+ # generated. Documented entities will be cross-referenced with these sources.
+ #
+ # Note: To get rid of all source code in the generated output, make sure that
+ # also VERBATIM_HEADERS is set to NO.
+ # The default value is: NO.
+ 
+ SOURCE_BROWSER         = YES
+ 
+ # Setting the INLINE_SOURCES tag to YES will include the body of functions,
+ # classes and enums directly into the documentation.
+ # The default value is: NO.
+ 
+ INLINE_SOURCES         = YES
+ 
+ # Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any
+ # special comment blocks from generated source code fragments. Normal C, C++ and
+ # Fortran comments will always remain visible.
+ # The default value is: YES.
+ 
+ STRIP_CODE_COMMENTS    = YES
+ 
+ # If the REFERENCED_BY_RELATION tag is set to YES then for each documented
+ # function all documented functions referencing it will be listed.
+ # The default value is: NO.
+ 
+ REFERENCED_BY_RELATION = NO
+ 
+ # If the REFERENCES_RELATION tag is set to YES then for each documented function
+ # all documented entities called/used by that function will be listed.
+ # The default value is: NO.
+ 
+ REFERENCES_RELATION    = NO
+ 
+ # If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set
+ # to YES, then the hyperlinks from functions in REFERENCES_RELATION and
+ # REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will
+ # link to the documentation.
+ # The default value is: YES.
+ 
+ REFERENCES_LINK_SOURCE = YES
+ 
+ # If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the
+ # source code will show a tooltip with additional information such as prototype,
+ # brief description and links to the definition and documentation. Since this
+ # will make the HTML file larger and loading of large files a bit slower, you
+ # can opt to disable this feature.
+ # The default value is: YES.
+ # This tag requires that the tag SOURCE_BROWSER is set to YES.
+ 
+ SOURCE_TOOLTIPS        = YES
+ 
+ # If the USE_HTAGS tag is set to YES then the references to source code will
+ # point to the HTML generated by the htags(1) tool instead of doxygen built-in
+ # source browser. The htags tool is part of GNU's global source tagging system
+ # (see http://www.gnu.org/software/global/global.html). You will need version
+ # 4.8.6 or higher.
+ #
+ # To use it do the following:
+ # - Install the latest version of global
+ # - Enable SOURCE_BROWSER and USE_HTAGS in the config file
+ # - Make sure the INPUT points to the root of the source tree
+ # - Run doxygen as normal
+ #
+ # Doxygen will invoke htags (and that will in turn invoke gtags), so these
+ # tools must be available from the command line (i.e. in the search path).
+ #
+ # The result: instead of the source browser generated by doxygen, the links to
+ # source code will now point to the output of htags.
+ # The default value is: NO.
+ # This tag requires that the tag SOURCE_BROWSER is set to YES.
+ 
+ USE_HTAGS              = NO
+ 
+ # If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a
+ # verbatim copy of the header file for each class for which an include is
+ # specified. Set to NO to disable this.
+ # See also: Section \class.
+ # The default value is: YES.
+ 
+ VERBATIM_HEADERS       = YES
+ 
+ # If the CLANG_ASSISTED_PARSING tag is set to YES, then doxygen will use the
+ # clang parser (see: http://clang.llvm.org/) for more accurate parsing at the
+ # cost of reduced performance. This can be particularly helpful with template
+ # rich C++ code for which doxygen's built-in parser lacks the necessary type
+ # information.
+ # Note: The availability of this option depends on whether or not doxygen was
+ # compiled with the --with-libclang option.
+ # The default value is: NO.
+ 
+ CLANG_ASSISTED_PARSING = NO
+ 
+ # If clang assisted parsing is enabled you can provide the compiler with command
+ # line options that you would normally use when invoking the compiler. Note that
+ # the include paths will already be set by doxygen for the files and directories
+ # specified with INPUT and INCLUDE_PATH.
+ # This tag requires that the tag CLANG_ASSISTED_PARSING is set to YES.
+ 
+ CLANG_OPTIONS          = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the alphabetical class index
+ #---------------------------------------------------------------------------
+ 
+ # If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all
+ # compounds will be generated. Enable this if the project contains a lot of
+ # classes, structs, unions or interfaces.
+ # The default value is: YES.
+ 
+ ALPHABETICAL_INDEX     = YES
+ 
+ # The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in
+ # which the alphabetical index list will be split.
+ # Minimum value: 1, maximum value: 20, default value: 5.
+ # This tag requires that the tag ALPHABETICAL_INDEX is set to YES.
+ 
+ COLS_IN_ALPHA_INDEX    = 5
+ 
+ # In case all classes in a project start with a common prefix, all classes will
+ # be put under the same header in the alphabetical index. The IGNORE_PREFIX tag
+ # can be used to specify a prefix (or a list of prefixes) that should be ignored
+ # while generating the index headers.
+ # This tag requires that the tag ALPHABETICAL_INDEX is set to YES.
+ 
+ IGNORE_PREFIX          = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the HTML output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_HTML tag is set to YES doxygen will generate HTML output
+ # The default value is: YES.
+ 
+ GENERATE_HTML          = YES
+ 
+ # The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a
+ # relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+ # it.
+ # The default directory is: html.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_OUTPUT            = html
+ 
+ # The HTML_FILE_EXTENSION tag can be used to specify the file extension for each
+ # generated HTML page (for example: .htm, .php, .asp).
+ # The default value is: .html.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_FILE_EXTENSION    = .html
+ 
+ # The HTML_HEADER tag can be used to specify a user-defined HTML header file for
+ # each generated HTML page. If the tag is left blank doxygen will generate a
+ # standard header.
+ #
+ # To get valid HTML the header file that includes any scripts and style sheets
+ # that doxygen needs, which is dependent on the configuration options used (e.g.
+ # the setting GENERATE_TREEVIEW). It is highly recommended to start with a
+ # default header using
+ # doxygen -w html new_header.html new_footer.html new_stylesheet.css
+ # YourConfigFile
+ # and then modify the file new_header.html. See also section "Doxygen usage"
+ # for information on how to generate the default header that doxygen normally
+ # uses.
+ # Note: The header is subject to change so you typically have to regenerate the
+ # default header when upgrading to a newer version of doxygen. For a description
+ # of the possible markers and block names see the documentation.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_HEADER            = 
+ 
+ # The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each
+ # generated HTML page. If the tag is left blank doxygen will generate a standard
+ # footer. See HTML_HEADER for more information on how to generate a default
+ # footer and what special commands can be used inside the footer. See also
+ # section "Doxygen usage" for information on how to generate the default footer
+ # that doxygen normally uses.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_FOOTER            = 
+ 
+ # The HTML_STYLESHEET tag can be used to specify a user-defined cascading style
+ # sheet that is used by each HTML page. It can be used to fine-tune the look of
+ # the HTML output. If left blank doxygen will generate a default style sheet.
+ # See also section "Doxygen usage" for information on how to generate the style
+ # sheet that doxygen normally uses.
+ # Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as
+ # it is more robust and this tag (HTML_STYLESHEET) will in the future become
+ # obsolete.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_STYLESHEET        = 
+ 
+ # The HTML_EXTRA_STYLESHEET tag can be used to specify an additional user-
+ # defined cascading style sheet that is included after the standard style sheets
+ # created by doxygen. Using this option one can overrule certain style aspects.
+ # This is preferred over using HTML_STYLESHEET since it does not replace the
+ # standard style sheet and is therefor more robust against future updates.
+ # Doxygen will copy the style sheet file to the output directory. For an example
+ # see the documentation.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_EXTRA_STYLESHEET  = 
+ 
+ # The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
+ # other source files which should be copied to the HTML output directory. Note
+ # that these files will be copied to the base HTML output directory. Use the
+ # $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
+ # files. In the HTML_STYLESHEET file, use the file name only. Also note that the
+ # files will be copied as-is; there are no commands or markers available.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_EXTRA_FILES       = 
+ 
+ # The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen
+ # will adjust the colors in the stylesheet and background images according to
+ # this color. Hue is specified as an angle on a colorwheel, see
+ # http://en.wikipedia.org/wiki/Hue for more information. For instance the value
+ # 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300
+ # purple, and 360 is red again.
+ # Minimum value: 0, maximum value: 359, default value: 220.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_COLORSTYLE_HUE    = 220
+ 
+ # The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors
+ # in the HTML output. For a value of 0 the output will use grayscales only. A
+ # value of 255 will produce the most vivid colors.
+ # Minimum value: 0, maximum value: 255, default value: 100.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_COLORSTYLE_SAT    = 100
+ 
+ # The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the
+ # luminance component of the colors in the HTML output. Values below 100
+ # gradually make the output lighter, whereas values above 100 make the output
+ # darker. The value divided by 100 is the actual gamma applied, so 80 represents
+ # a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not
+ # change the gamma.
+ # Minimum value: 40, maximum value: 240, default value: 80.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_COLORSTYLE_GAMMA  = 80
+ 
+ # If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
+ # page will contain the date and time when the page was generated. Setting this
+ # to NO can help when comparing the output of multiple runs.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_TIMESTAMP         = YES
+ 
+ # If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
+ # documentation will contain sections that can be hidden and shown after the
+ # page has loaded.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_DYNAMIC_SECTIONS  = NO
+ 
+ # With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries
+ # shown in the various tree structured indices initially; the user can expand
+ # and collapse entries dynamically later on. Doxygen will expand the tree to
+ # such a level that at most the specified number of entries are visible (unless
+ # a fully collapsed tree already exceeds this amount). So setting the number of
+ # entries 1 will produce a full collapsed tree by default. 0 is a special value
+ # representing an infinite number of entries and will result in a full expanded
+ # tree by default.
+ # Minimum value: 0, maximum value: 9999, default value: 100.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ HTML_INDEX_NUM_ENTRIES = 100
+ 
+ # If the GENERATE_DOCSET tag is set to YES, additional index files will be
+ # generated that can be used as input for Apple's Xcode 3 integrated development
+ # environment (see: http://developer.apple.com/tools/xcode/), introduced with
+ # OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a
+ # Makefile in the HTML output directory. Running make will produce the docset in
+ # that directory and running make install will install the docset in
+ # ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at
+ # startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html
+ # for more information.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ GENERATE_DOCSET        = NO
+ 
+ # This tag determines the name of the docset feed. A documentation feed provides
+ # an umbrella under which multiple documentation sets from a single provider
+ # (such as a company or product suite) can be grouped.
+ # The default value is: Doxygen generated docs.
+ # This tag requires that the tag GENERATE_DOCSET is set to YES.
+ 
+ DOCSET_FEEDNAME        = "Doxygen generated docs"
+ 
+ # This tag specifies a string that should uniquely identify the documentation
+ # set bundle. This should be a reverse domain-name style string, e.g.
+ # com.mycompany.MyDocSet. Doxygen will append .docset to the name.
+ # The default value is: org.doxygen.Project.
+ # This tag requires that the tag GENERATE_DOCSET is set to YES.
+ 
+ DOCSET_BUNDLE_ID       = org.doxygen.Project
+ 
+ # The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify
+ # the documentation publisher. This should be a reverse domain-name style
+ # string, e.g. com.mycompany.MyDocSet.documentation.
+ # The default value is: org.doxygen.Publisher.
+ # This tag requires that the tag GENERATE_DOCSET is set to YES.
+ 
+ DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
+ 
+ # The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.
+ # The default value is: Publisher.
+ # This tag requires that the tag GENERATE_DOCSET is set to YES.
+ 
+ DOCSET_PUBLISHER_NAME  = Publisher
+ 
+ # If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three
+ # additional HTML index files: index.hhp, index.hhc, and index.hhk. The
+ # index.hhp is a project file that can be read by Microsoft's HTML Help Workshop
+ # (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on
+ # Windows.
+ #
+ # The HTML Help Workshop contains a compiler that can convert all HTML output
+ # generated by doxygen into a single compiled HTML file (.chm). Compiled HTML
+ # files are now used as the Windows 98 help format, and will replace the old
+ # Windows help format (.hlp) on all Windows platforms in the future. Compressed
+ # HTML files also contain an index, a table of contents, and you can search for
+ # words in the documentation. The HTML workshop also contains a viewer for
+ # compressed HTML files.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ GENERATE_HTMLHELP      = NO
+ 
+ # The CHM_FILE tag can be used to specify the file name of the resulting .chm
+ # file. You can add a path in front of the file if the result should not be
+ # written to the html output directory.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ CHM_FILE               = 
+ 
+ # The HHC_LOCATION tag can be used to specify the location (absolute path
+ # including file name) of the HTML help compiler ( hhc.exe). If non-empty
+ # doxygen will try to run the HTML help compiler on the generated index.hhp.
+ # The file has to be specified with full path.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ HHC_LOCATION           = 
+ 
+ # The GENERATE_CHI flag controls if a separate .chi index file is generated (
+ # YES) or that it should be included in the master .chm file ( NO).
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ GENERATE_CHI           = NO
+ 
+ # The CHM_INDEX_ENCODING is used to encode HtmlHelp index ( hhk), content ( hhc)
+ # and project file content.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ CHM_INDEX_ENCODING     = 
+ 
+ # The BINARY_TOC flag controls whether a binary table of contents is generated (
+ # YES) or a normal table of contents ( NO) in the .chm file. Furthermore it
+ # enables the Previous and Next buttons.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ BINARY_TOC             = NO
+ 
+ # The TOC_EXPAND flag can be set to YES to add extra items for group members to
+ # the table of contents of the HTML help documentation and to the tree view.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+ 
+ TOC_EXPAND             = NO
+ 
+ # If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
+ # QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that
+ # can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help
+ # (.qch) of the generated HTML documentation.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ GENERATE_QHP           = NO
+ 
+ # If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify
+ # the file name of the resulting .qch file. The path specified is relative to
+ # the HTML output folder.
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QCH_FILE               = 
+ 
+ # The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help
+ # Project output. For more information please see Qt Help Project / Namespace
+ # (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#namespace).
+ # The default value is: org.doxygen.Project.
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHP_NAMESPACE          = org.doxygen.Project
+ 
+ # The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt
+ # Help Project output. For more information please see Qt Help Project / Virtual
+ # Folders (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#virtual-
+ # folders).
+ # The default value is: doc.
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHP_VIRTUAL_FOLDER     = doc
+ 
+ # If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom
+ # filter to add. For more information please see Qt Help Project / Custom
+ # Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-
+ # filters).
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHP_CUST_FILTER_NAME   = 
+ 
+ # The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the
+ # custom filter to add. For more information please see Qt Help Project / Custom
+ # Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-
+ # filters).
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHP_CUST_FILTER_ATTRS  = 
+ 
+ # The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
+ # project's filter section matches. Qt Help Project / Filter Attributes (see:
+ # http://qt-project.org/doc/qt-4.8/qthelpproject.html#filter-attributes).
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHP_SECT_FILTER_ATTRS  = 
+ 
+ # The QHG_LOCATION tag can be used to specify the location of Qt's
+ # qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the
+ # generated .qhp file.
+ # This tag requires that the tag GENERATE_QHP is set to YES.
+ 
+ QHG_LOCATION           = 
+ 
+ # If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be
+ # generated, together with the HTML files, they form an Eclipse help plugin. To
+ # install this plugin and make it available under the help contents menu in
+ # Eclipse, the contents of the directory containing the HTML and XML files needs
+ # to be copied into the plugins directory of eclipse. The name of the directory
+ # within the plugins directory should be the same as the ECLIPSE_DOC_ID value.
+ # After copying Eclipse needs to be restarted before the help appears.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ GENERATE_ECLIPSEHELP   = NO
+ 
+ # A unique identifier for the Eclipse help plugin. When installing the plugin
+ # the directory name containing the HTML and XML files should also have this
+ # name. Each documentation set should have its own identifier.
+ # The default value is: org.doxygen.Project.
+ # This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.
+ 
+ ECLIPSE_DOC_ID         = org.doxygen.Project
+ 
+ # If you want full control over the layout of the generated HTML pages it might
+ # be necessary to disable the index and replace it with your own. The
+ # DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top
+ # of each HTML page. A value of NO enables the index and the value YES disables
+ # it. Since the tabs in the index contain the same information as the navigation
+ # tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ DISABLE_INDEX          = NO
+ 
+ # The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
+ # structure should be generated to display hierarchical information. If the tag
+ # value is set to YES, a side panel will be generated containing a tree-like
+ # index structure (just like the one that is generated for HTML Help). For this
+ # to work a browser that supports JavaScript, DHTML, CSS and frames is required
+ # (i.e. any modern browser). Windows users are probably better off using the
+ # HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can
+ # further fine-tune the look of the index. As an example, the default style
+ # sheet generated by doxygen has an example that shows how to put an image at
+ # the root of the tree instead of the PROJECT_NAME. Since the tree basically has
+ # the same information as the tab index, you could consider setting
+ # DISABLE_INDEX to YES when enabling this option.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ GENERATE_TREEVIEW      = YES
+ 
+ # The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that
+ # doxygen will group on one line in the generated HTML documentation.
+ #
+ # Note that a value of 0 will completely suppress the enum values from appearing
+ # in the overview section.
+ # Minimum value: 0, maximum value: 20, default value: 4.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ ENUM_VALUES_PER_LINE   = 4
+ 
+ # If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used
+ # to set the initial width (in pixels) of the frame in which the tree is shown.
+ # Minimum value: 0, maximum value: 1500, default value: 250.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ TREEVIEW_WIDTH         = 250
+ 
+ # When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open links to
+ # external symbols imported via tag files in a separate window.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ EXT_LINKS_IN_WINDOW    = NO
+ 
+ # Use this tag to change the font size of LaTeX formulas included as images in
+ # the HTML documentation. When you change the font size after a successful
+ # doxygen run you need to manually remove any form_*.png images from the HTML
+ # output directory to force them to be regenerated.
+ # Minimum value: 8, maximum value: 50, default value: 10.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ FORMULA_FONTSIZE       = 10
+ 
+ # Use the FORMULA_TRANPARENT tag to determine whether or not the images
+ # generated for formulas are transparent PNGs. Transparent PNGs are not
+ # supported properly for IE 6.0, but are supported on all modern browsers.
+ #
+ # Note that when changing this option you need to delete any form_*.png files in
+ # the HTML output directory before the changes have effect.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ FORMULA_TRANSPARENT    = YES
+ 
+ # Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see
+ # http://www.mathjax.org) which uses client side Javascript for the rendering
+ # instead of using prerendered bitmaps. Use this if you do not have LaTeX
+ # installed or if you want to formulas look prettier in the HTML output. When
+ # enabled you may also need to install MathJax separately and configure the path
+ # to it using the MATHJAX_RELPATH option.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ USE_MATHJAX            = NO
+ 
+ # When MathJax is enabled you can set the default output format to be used for
+ # the MathJax output. See the MathJax site (see:
+ # http://docs.mathjax.org/en/latest/output.html) for more details.
+ # Possible values are: HTML-CSS (which is slower, but has the best
+ # compatibility), NativeMML (i.e. MathML) and SVG.
+ # The default value is: HTML-CSS.
+ # This tag requires that the tag USE_MATHJAX is set to YES.
+ 
+ MATHJAX_FORMAT         = HTML-CSS
+ 
+ # When MathJax is enabled you need to specify the location relative to the HTML
+ # output directory using the MATHJAX_RELPATH option. The destination directory
+ # should contain the MathJax.js script. For instance, if the mathjax directory
+ # is located at the same level as the HTML output directory, then
+ # MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax
+ # Content Delivery Network so you can quickly see the result without installing
+ # MathJax. However, it is strongly recommended to install a local copy of
+ # MathJax from http://www.mathjax.org before deployment.
+ # The default value is: http://cdn.mathjax.org/mathjax/latest.
+ # This tag requires that the tag USE_MATHJAX is set to YES.
+ 
+ MATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest
+ 
+ # The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax
+ # extension names that should be enabled during MathJax rendering. For example
+ # MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols
+ # This tag requires that the tag USE_MATHJAX is set to YES.
+ 
+ MATHJAX_EXTENSIONS     = 
+ 
+ # The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces
+ # of code that will be used on startup of the MathJax code. See the MathJax site
+ # (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an
+ # example see the documentation.
+ # This tag requires that the tag USE_MATHJAX is set to YES.
+ 
+ MATHJAX_CODEFILE       = 
+ 
+ # When the SEARCHENGINE tag is enabled doxygen will generate a search box for
+ # the HTML output. The underlying search engine uses javascript and DHTML and
+ # should work on any modern browser. Note that when using HTML help
+ # (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)
+ # there is already a search function so this one should typically be disabled.
+ # For large projects the javascript based search engine can be slow, then
+ # enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to
+ # search using the keyboard; to jump to the search box use <access key> + S
+ # (what the <access key> is depends on the OS and browser, but it is typically
+ # <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down
+ # key> to jump into the search results window, the results can be navigated
+ # using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel
+ # the search. The filter options can be selected when the cursor is inside the
+ # search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>
+ # to select a filter and <Enter> or <escape> to activate or cancel the filter
+ # option.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_HTML is set to YES.
+ 
+ SEARCHENGINE           = YES
+ 
+ # When the SERVER_BASED_SEARCH tag is enabled the search engine will be
+ # implemented using a web server instead of a web client using Javascript. There
+ # are two flavors of web server based searching depending on the EXTERNAL_SEARCH
+ # setting. When disabled, doxygen will generate a PHP script for searching and
+ # an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing
+ # and searching needs to be provided by external tools. See the section
+ # "External Indexing and Searching" for details.
+ # The default value is: NO.
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ SERVER_BASED_SEARCH    = NO
+ 
+ # When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP
+ # script for searching. Instead the search results are written to an XML file
+ # which needs to be processed by an external indexer. Doxygen will invoke an
+ # external search engine pointed to by the SEARCHENGINE_URL option to obtain the
+ # search results.
+ #
+ # Doxygen ships with an example indexer ( doxyindexer) and search engine
+ # (doxysearch.cgi) which are based on the open source search engine library
+ # Xapian (see: http://xapian.org/).
+ #
+ # See the section "External Indexing and Searching" for details.
+ # The default value is: NO.
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ EXTERNAL_SEARCH        = NO
+ 
+ # The SEARCHENGINE_URL should point to a search engine hosted by a web server
+ # which will return the search results when EXTERNAL_SEARCH is enabled.
+ #
+ # Doxygen ships with an example indexer ( doxyindexer) and search engine
+ # (doxysearch.cgi) which are based on the open source search engine library
+ # Xapian (see: http://xapian.org/). See the section "External Indexing and
+ # Searching" for details.
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ SEARCHENGINE_URL       = 
+ 
+ # When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed
+ # search data is written to a file for indexing by an external tool. With the
+ # SEARCHDATA_FILE tag the name of this file can be specified.
+ # The default file is: searchdata.xml.
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ SEARCHDATA_FILE        = searchdata.xml
+ 
+ # When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the
+ # EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is
+ # useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple
+ # projects and redirect the results back to the right project.
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ EXTERNAL_SEARCH_ID     = 
+ 
+ # The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen
+ # projects other than the one defined by this configuration file, but that are
+ # all added to the same external search index. Each project needs to have a
+ # unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of
+ # to a relative location where the documentation can be found. The format is:
+ # EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...
+ # This tag requires that the tag SEARCHENGINE is set to YES.
+ 
+ EXTRA_SEARCH_MAPPINGS  = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the LaTeX output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_LATEX tag is set to YES doxygen will generate LaTeX output.
+ # The default value is: YES.
+ 
+ GENERATE_LATEX         = NO
+ 
+ # The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a
+ # relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+ # it.
+ # The default directory is: latex.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_OUTPUT           = latex
+ 
+ # The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
+ # invoked.
+ #
+ # Note that when enabling USE_PDFLATEX this option is only used for generating
+ # bitmaps for formulas in the HTML output, but not in the Makefile that is
+ # written to the output directory.
+ # The default file is: latex.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_CMD_NAME         = latex
+ 
+ # The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate
+ # index for LaTeX.
+ # The default file is: makeindex.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ MAKEINDEX_CMD_NAME     = makeindex
+ 
+ # If the COMPACT_LATEX tag is set to YES doxygen generates more compact LaTeX
+ # documents. This may be useful for small projects and may help to save some
+ # trees in general.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ COMPACT_LATEX          = NO
+ 
+ # The PAPER_TYPE tag can be used to set the paper type that is used by the
+ # printer.
+ # Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x
+ # 14 inches) and executive (7.25 x 10.5 inches).
+ # The default value is: a4.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ PAPER_TYPE             = a4
+ 
+ # The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names
+ # that should be included in the LaTeX output. To get the times font for
+ # instance you can specify
+ # EXTRA_PACKAGES=times
+ # If left blank no extra packages will be included.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ EXTRA_PACKAGES         = 
+ 
+ # The LATEX_HEADER tag can be used to specify a personal LaTeX header for the
+ # generated LaTeX document. The header should contain everything until the first
+ # chapter. If it is left blank doxygen will generate a standard header. See
+ # section "Doxygen usage" for information on how to let doxygen write the
+ # default header to a separate file.
+ #
+ # Note: Only use a user-defined header if you know what you are doing! The
+ # following commands have a special meaning inside the header: $title,
+ # $datetime, $date, $doxygenversion, $projectname, $projectnumber. Doxygen will
+ # replace them by respectively the title of the page, the current date and time,
+ # only the current date, the version number of doxygen, the project name (see
+ # PROJECT_NAME), or the project number (see PROJECT_NUMBER).
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_HEADER           = 
+ 
+ # The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the
+ # generated LaTeX document. The footer should contain everything after the last
+ # chapter. If it is left blank doxygen will generate a standard footer.
+ #
+ # Note: Only use a user-defined footer if you know what you are doing!
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_FOOTER           = 
+ 
+ # The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or
+ # other source files which should be copied to the LATEX_OUTPUT output
+ # directory. Note that the files will be copied as-is; there are no commands or
+ # markers available.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_EXTRA_FILES      = 
+ 
+ # If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is
+ # prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will
+ # contain links (just like the HTML output) instead of page references. This
+ # makes the output suitable for online browsing using a PDF viewer.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ PDF_HYPERLINKS         = YES
+ 
+ # If the LATEX_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate
+ # the PDF file directly from the LaTeX files. Set this option to YES to get a
+ # higher quality PDF documentation.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ USE_PDFLATEX           = YES
+ 
+ # If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \batchmode
+ # command to the generated LaTeX files. This will instruct LaTeX to keep running
+ # if errors occur, instead of asking the user for help. This option is also used
+ # when generating formulas in HTML.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_BATCHMODE        = NO
+ 
+ # If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the
+ # index chapters (such as File Index, Compound Index, etc.) in the output.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_HIDE_INDICES     = NO
+ 
+ # If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source
+ # code with syntax highlighting in the LaTeX output.
+ #
+ # Note that which sources are shown also depends on other settings such as
+ # SOURCE_BROWSER.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_SOURCE_CODE      = NO
+ 
+ # The LATEX_BIB_STYLE tag can be used to specify the style to use for the
+ # bibliography, e.g. plainnat, or ieeetr. See
+ # http://en.wikipedia.org/wiki/BibTeX and \cite for more info.
+ # The default value is: plain.
+ # This tag requires that the tag GENERATE_LATEX is set to YES.
+ 
+ LATEX_BIB_STYLE        = plain
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the RTF output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_RTF tag is set to YES doxygen will generate RTF output. The
+ # RTF output is optimized for Word 97 and may not look too pretty with other RTF
+ # readers/editors.
+ # The default value is: NO.
+ 
+ GENERATE_RTF           = NO
+ 
+ # The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a
+ # relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+ # it.
+ # The default directory is: rtf.
+ # This tag requires that the tag GENERATE_RTF is set to YES.
+ 
+ RTF_OUTPUT             = rtf
+ 
+ # If the COMPACT_RTF tag is set to YES doxygen generates more compact RTF
+ # documents. This may be useful for small projects and may help to save some
+ # trees in general.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_RTF is set to YES.
+ 
+ COMPACT_RTF            = NO
+ 
+ # If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will
+ # contain hyperlink fields. The RTF file will contain links (just like the HTML
+ # output) instead of page references. This makes the output suitable for online
+ # browsing using Word or some other Word compatible readers that support those
+ # fields.
+ #
+ # Note: WordPad (write) and others do not support links.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_RTF is set to YES.
+ 
+ RTF_HYPERLINKS         = NO
+ 
+ # Load stylesheet definitions from file. Syntax is similar to doxygen's config
+ # file, i.e. a series of assignments. You only have to provide replacements,
+ # missing definitions are set to their default value.
+ #
+ # See also section "Doxygen usage" for information on how to generate the
+ # default style sheet that doxygen normally uses.
+ # This tag requires that the tag GENERATE_RTF is set to YES.
+ 
+ RTF_STYLESHEET_FILE    = 
+ 
+ # Set optional variables used in the generation of an RTF document. Syntax is
+ # similar to doxygen's config file. A template extensions file can be generated
+ # using doxygen -e rtf extensionFile.
+ # This tag requires that the tag GENERATE_RTF is set to YES.
+ 
+ RTF_EXTENSIONS_FILE    = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the man page output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_MAN tag is set to YES doxygen will generate man pages for
+ # classes and files.
+ # The default value is: NO.
+ 
+ GENERATE_MAN           = NO
+ 
+ # The MAN_OUTPUT tag is used to specify where the man pages will be put. If a
+ # relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+ # it. A directory man3 will be created inside the directory specified by
+ # MAN_OUTPUT.
+ # The default directory is: man.
+ # This tag requires that the tag GENERATE_MAN is set to YES.
+ 
+ MAN_OUTPUT             = man
+ 
+ # The MAN_EXTENSION tag determines the extension that is added to the generated
+ # man pages. In case the manual section does not start with a number, the number
+ # 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is
+ # optional.
+ # The default value is: .3.
+ # This tag requires that the tag GENERATE_MAN is set to YES.
+ 
+ MAN_EXTENSION          = .3
+ 
+ # The MAN_SUBDIR tag determines the name of the directory created within
+ # MAN_OUTPUT in which the man pages are placed. If defaults to man followed by
+ # MAN_EXTENSION with the initial . removed.
+ # This tag requires that the tag GENERATE_MAN is set to YES.
+ 
+ MAN_SUBDIR             = 
+ 
+ # If the MAN_LINKS tag is set to YES and doxygen generates man output, then it
+ # will generate one additional man file for each entity documented in the real
+ # man page(s). These additional files only source the real man page, but without
+ # them the man command would be unable to find the correct page.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_MAN is set to YES.
+ 
+ MAN_LINKS              = NO
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the XML output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_XML tag is set to YES doxygen will generate an XML file that
+ # captures the structure of the code including all documentation.
+ # The default value is: NO.
+ 
+ GENERATE_XML           = NO
+ 
+ # The XML_OUTPUT tag is used to specify where the XML pages will be put. If a
+ # relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+ # it.
+ # The default directory is: xml.
+ # This tag requires that the tag GENERATE_XML is set to YES.
+ 
+ XML_OUTPUT             = xml
+ 
+ # If the XML_PROGRAMLISTING tag is set to YES doxygen will dump the program
+ # listings (including syntax highlighting and cross-referencing information) to
+ # the XML output. Note that enabling this will significantly increase the size
+ # of the XML output.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_XML is set to YES.
+ 
+ XML_PROGRAMLISTING     = YES
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the DOCBOOK output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_DOCBOOK tag is set to YES doxygen will generate Docbook files
+ # that can be used to generate PDF.
+ # The default value is: NO.
+ 
+ GENERATE_DOCBOOK       = NO
+ 
+ # The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.
+ # If a relative path is entered the value of OUTPUT_DIRECTORY will be put in
+ # front of it.
+ # The default directory is: docbook.
+ # This tag requires that the tag GENERATE_DOCBOOK is set to YES.
+ 
+ DOCBOOK_OUTPUT         = docbook
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options for the AutoGen Definitions output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen
+ # Definitions (see http://autogen.sf.net) file that captures the structure of
+ # the code including all documentation. Note that this feature is still
+ # experimental and incomplete at the moment.
+ # The default value is: NO.
+ 
+ GENERATE_AUTOGEN_DEF   = NO
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the Perl module output
+ #---------------------------------------------------------------------------
+ 
+ # If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module
+ # file that captures the structure of the code including all documentation.
+ #
+ # Note that this feature is still experimental and incomplete at the moment.
+ # The default value is: NO.
+ 
+ GENERATE_PERLMOD       = NO
+ 
+ # If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary
+ # Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI
+ # output from the Perl module output.
+ # The default value is: NO.
+ # This tag requires that the tag GENERATE_PERLMOD is set to YES.
+ 
+ PERLMOD_LATEX          = NO
+ 
+ # If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely
+ # formatted so it can be parsed by a human reader. This is useful if you want to
+ # understand what is going on. On the other hand, if this tag is set to NO the
+ # size of the Perl module output will be much smaller and Perl will parse it
+ # just the same.
+ # The default value is: YES.
+ # This tag requires that the tag GENERATE_PERLMOD is set to YES.
+ 
+ PERLMOD_PRETTY         = YES
+ 
+ # The names of the make variables in the generated doxyrules.make file are
+ # prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful
+ # so different doxyrules.make files included by the same Makefile don't
+ # overwrite each other's variables.
+ # This tag requires that the tag GENERATE_PERLMOD is set to YES.
+ 
+ PERLMOD_MAKEVAR_PREFIX = 
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the preprocessor
+ #---------------------------------------------------------------------------
+ 
+ # If the ENABLE_PREPROCESSING tag is set to YES doxygen will evaluate all
+ # C-preprocessor directives found in the sources and include files.
+ # The default value is: YES.
+ 
+ ENABLE_PREPROCESSING   = YES
+ 
+ # If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names
+ # in the source code. If set to NO only conditional compilation will be
+ # performed. Macro expansion can be done in a controlled way by setting
+ # EXPAND_ONLY_PREDEF to YES.
+ # The default value is: NO.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ MACRO_EXPANSION        = NO
+ 
+ # If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then
+ # the macro expansion is limited to the macros specified with the PREDEFINED and
+ # EXPAND_AS_DEFINED tags.
+ # The default value is: NO.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ EXPAND_ONLY_PREDEF     = NO
+ 
+ # If the SEARCH_INCLUDES tag is set to YES the includes files in the
+ # INCLUDE_PATH will be searched if a #include is found.
+ # The default value is: YES.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ SEARCH_INCLUDES        = YES
+ 
+ # The INCLUDE_PATH tag can be used to specify one or more directories that
+ # contain include files that are not input files but should be processed by the
+ # preprocessor.
+ # This tag requires that the tag SEARCH_INCLUDES is set to YES.
+ 
+ INCLUDE_PATH           = 
+ 
+ # You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
+ # patterns (like *.h and *.hpp) to filter out the header-files in the
+ # directories. If left blank, the patterns specified with FILE_PATTERNS will be
+ # used.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ INCLUDE_FILE_PATTERNS  = 
+ 
+ # The PREDEFINED tag can be used to specify one or more macro names that are
+ # defined before the preprocessor is started (similar to the -D option of e.g.
+ # gcc). The argument of the tag is a list of macros of the form: name or
+ # name=definition (no spaces). If the definition and the "=" are omitted, "=1"
+ # is assumed. To prevent a macro definition from being undefined via #undef or
+ # recursively expanded use the := operator instead of the = operator.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ PREDEFINED             = 
+ 
+ # If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this
+ # tag can be used to specify a list of macro names that should be expanded. The
+ # macro definition that is found in the sources will be used. Use the PREDEFINED
+ # tag if you want to use a different macro definition that overrules the
+ # definition found in the source code.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ EXPAND_AS_DEFINED      = 
+ 
+ # If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will
+ # remove all references to function-like macros that are alone on a line, have
+ # an all uppercase name, and do not end with a semicolon. Such function macros
+ # are typically used for boiler-plate code, and will confuse the parser if not
+ # removed.
+ # The default value is: YES.
+ # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+ 
+ SKIP_FUNCTION_MACROS   = YES
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to external references
+ #---------------------------------------------------------------------------
+ 
+ # The TAGFILES tag can be used to specify one or more tag files. For each tag
+ # file the location of the external documentation should be added. The format of
+ # a tag file without this location is as follows:
+ # TAGFILES = file1 file2 ...
+ # Adding location for the tag files is done as follows:
+ # TAGFILES = file1=loc1 "file2 = loc2" ...
+ # where loc1 and loc2 can be relative or absolute paths or URLs. See the
+ # section "Linking to external documentation" for more information about the use
+ # of tag files.
+ # Note: Each tag file must have a unique name (where the name does NOT include
+ # the path). If a tag file is not located in the directory in which doxygen is
+ # run, you must also specify the path to the tagfile here.
+ 
+ TAGFILES               = 
+ 
+ # When a file name is specified after GENERATE_TAGFILE, doxygen will create a
+ # tag file that is based on the input files it reads. See section "Linking to
+ # external documentation" for more information about the usage of tag files.
+ 
+ GENERATE_TAGFILE       = 
+ 
+ # If the ALLEXTERNALS tag is set to YES all external class will be listed in the
+ # class index. If set to NO only the inherited external classes will be listed.
+ # The default value is: NO.
+ 
+ ALLEXTERNALS           = NO
+ 
+ # If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed in
+ # the modules index. If set to NO, only the current project's groups will be
+ # listed.
+ # The default value is: YES.
+ 
+ EXTERNAL_GROUPS        = YES
+ 
+ # If the EXTERNAL_PAGES tag is set to YES all external pages will be listed in
+ # the related pages index. If set to NO, only the current project's pages will
+ # be listed.
+ # The default value is: YES.
+ 
+ EXTERNAL_PAGES         = YES
+ 
+ # The PERL_PATH should be the absolute path and name of the perl script
+ # interpreter (i.e. the result of 'which perl').
+ # The default file (with absolute path) is: /usr/bin/perl.
+ 
+ PERL_PATH              = /usr/bin/perl
+ 
+ #---------------------------------------------------------------------------
+ # Configuration options related to the dot tool
+ #---------------------------------------------------------------------------
+ 
+ # If the CLASS_DIAGRAMS tag is set to YES doxygen will generate a class diagram
+ # (in HTML and LaTeX) for classes with base or super classes. Setting the tag to
+ # NO turns the diagrams off. Note that this option also works with HAVE_DOT
+ # disabled, but it is recommended to install and use dot, since it yields more
+ # powerful graphs.
+ # The default value is: YES.
+ 
+ CLASS_DIAGRAMS         = YES
+ 
+ # You can define message sequence charts within doxygen comments using the \msc
+ # command. Doxygen will then run the mscgen tool (see:
+ # http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the
+ # documentation. The MSCGEN_PATH tag allows you to specify the directory where
+ # the mscgen tool resides. If left empty the tool is assumed to be found in the
+ # default search path.
+ 
+ MSCGEN_PATH            = 
+ 
+ # You can include diagrams made with dia in doxygen documentation. Doxygen will
+ # then run dia to produce the diagram and insert it in the documentation. The
+ # DIA_PATH tag allows you to specify the directory where the dia binary resides.
+ # If left empty dia is assumed to be found in the default search path.
+ 
+ DIA_PATH               = 
+ 
+ # If set to YES, the inheritance and collaboration graphs will hide inheritance
+ # and usage relations if the target is undocumented or is not a class.
+ # The default value is: YES.
+ 
+ HIDE_UNDOC_RELATIONS   = YES
+ 
+ # If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
+ # available from the path. This tool is part of Graphviz (see:
+ # http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent
+ # Bell Labs. The other options in this section have no effect if this option is
+ # set to NO
+ # The default value is: NO.
+ 
+ HAVE_DOT               = NO
+ 
+ # The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed
+ # to run in parallel. When set to 0 doxygen will base this on the number of
+ # processors available in the system. You can set it explicitly to a value
+ # larger than 0 to get control over the balance between CPU load and processing
+ # speed.
+ # Minimum value: 0, maximum value: 32, default value: 0.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_NUM_THREADS        = 0
+ 
+ # When you want a differently looking font n the dot files that doxygen
+ # generates you can specify the font name using DOT_FONTNAME. You need to make
+ # sure dot is able to find the font, which can be done by putting it in a
+ # standard location or by setting the DOTFONTPATH environment variable or by
+ # setting DOT_FONTPATH to the directory containing the font.
+ # The default value is: Helvetica.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_FONTNAME           = Helvetica
+ 
+ # The DOT_FONTSIZE tag can be used to set the size (in points) of the font of
+ # dot graphs.
+ # Minimum value: 4, maximum value: 24, default value: 10.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_FONTSIZE           = 10
+ 
+ # By default doxygen will tell dot to use the default font as specified with
+ # DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set
+ # the path where dot can find it using this tag.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_FONTPATH           = 
+ 
+ # If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for
+ # each documented class showing the direct and indirect inheritance relations.
+ # Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ CLASS_GRAPH            = YES
+ 
+ # If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a
+ # graph for each documented class showing the direct and indirect implementation
+ # dependencies (inheritance, containment, and class references variables) of the
+ # class with other documented classes.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ COLLABORATION_GRAPH    = YES
+ 
+ # If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for
+ # groups, showing the direct groups dependencies.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ GROUP_GRAPHS           = YES
+ 
+ # If the UML_LOOK tag is set to YES doxygen will generate inheritance and
+ # collaboration diagrams in a style similar to the OMG's Unified Modeling
+ # Language.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ UML_LOOK               = NO
+ 
+ # If the UML_LOOK tag is enabled, the fields and methods are shown inside the
+ # class node. If there are many fields or methods and many nodes the graph may
+ # become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the
+ # number of items for each type to make the size more manageable. Set this to 0
+ # for no limit. Note that the threshold may be exceeded by 50% before the limit
+ # is enforced. So when you set the threshold to 10, up to 15 fields may appear,
+ # but if the number exceeds 15, the total amount of fields shown is limited to
+ # 10.
+ # Minimum value: 0, maximum value: 100, default value: 10.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ UML_LIMIT_NUM_FIELDS   = 10
+ 
+ # If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and
+ # collaboration graphs will show the relations between templates and their
+ # instances.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ TEMPLATE_RELATIONS     = NO
+ 
+ # If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to
+ # YES then doxygen will generate a graph for each documented file showing the
+ # direct and indirect include dependencies of the file with other documented
+ # files.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ INCLUDE_GRAPH          = YES
+ 
+ # If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are
+ # set to YES then doxygen will generate a graph for each documented file showing
+ # the direct and indirect include dependencies of the file with other documented
+ # files.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ INCLUDED_BY_GRAPH      = YES
+ 
+ # If the CALL_GRAPH tag is set to YES then doxygen will generate a call
+ # dependency graph for every global function or class method.
+ #
+ # Note that enabling this option will significantly increase the time of a run.
+ # So in most cases it will be better to enable call graphs for selected
+ # functions only using the \callgraph command.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ CALL_GRAPH             = YES
+ 
+ # If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller
+ # dependency graph for every global function or class method.
+ #
+ # Note that enabling this option will significantly increase the time of a run.
+ # So in most cases it will be better to enable caller graphs for selected
+ # functions only using the \callergraph command.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ CALLER_GRAPH           = YES
+ 
+ # If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical
+ # hierarchy of all classes instead of a textual one.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ GRAPHICAL_HIERARCHY    = YES
+ 
+ # If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the
+ # dependencies a directory has on other directories in a graphical way. The
+ # dependency relations are determined by the #include relations between the
+ # files in the directories.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DIRECTORY_GRAPH        = YES
+ 
+ # The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
+ # generated by dot.
+ # Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order
+ # to make the SVG files visible in IE 9+ (other browsers do not have this
+ # requirement).
+ # Possible values are: png, jpg, gif and svg.
+ # The default value is: png.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_IMAGE_FORMAT       = png
+ 
+ # If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
+ # enable generation of interactive SVG images that allow zooming and panning.
+ #
+ # Note that this requires a modern browser other than Internet Explorer. Tested
+ # and working are Firefox, Chrome, Safari, and Opera.
+ # Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make
+ # the SVG files visible. Older versions of IE do not have SVG support.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ INTERACTIVE_SVG        = NO
+ 
+ # The DOT_PATH tag can be used to specify the path where the dot tool can be
+ # found. If left blank, it is assumed the dot tool can be found in the path.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_PATH               = 
+ 
+ # The DOTFILE_DIRS tag can be used to specify one or more directories that
+ # contain dot files that are included in the documentation (see the \dotfile
+ # command).
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOTFILE_DIRS           = 
+ 
+ # The MSCFILE_DIRS tag can be used to specify one or more directories that
+ # contain msc files that are included in the documentation (see the \mscfile
+ # command).
+ 
+ MSCFILE_DIRS           = 
+ 
+ # The DIAFILE_DIRS tag can be used to specify one or more directories that
+ # contain dia files that are included in the documentation (see the \diafile
+ # command).
+ 
+ DIAFILE_DIRS           = 
+ 
+ # The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes
+ # that will be shown in the graph. If the number of nodes in a graph becomes
+ # larger than this value, doxygen will truncate the graph, which is visualized
+ # by representing a node as a red box. Note that doxygen if the number of direct
+ # children of the root node in a graph is already larger than
+ # DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that
+ # the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
+ # Minimum value: 0, maximum value: 10000, default value: 50.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_GRAPH_MAX_NODES    = 50
+ 
+ # The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs
+ # generated by dot. A depth value of 3 means that only nodes reachable from the
+ # root by following a path via at most 3 edges will be shown. Nodes that lay
+ # further from the root node will be omitted. Note that setting this option to 1
+ # or 2 may greatly reduce the computation time needed for large code bases. Also
+ # note that the size of a graph can be further restricted by
+ # DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
+ # Minimum value: 0, maximum value: 1000, default value: 0.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ MAX_DOT_GRAPH_DEPTH    = 0
+ 
+ # Set the DOT_TRANSPARENT tag to YES to generate images with a transparent
+ # background. This is disabled by default, because dot on Windows does not seem
+ # to support this out of the box.
+ #
+ # Warning: Depending on the platform used, enabling this option may lead to
+ # badly anti-aliased labels on the edges of a graph (i.e. they become hard to
+ # read).
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_TRANSPARENT        = NO
+ 
+ # Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output
+ # files in one run (i.e. multiple -o and -T options on the command line). This
+ # makes dot run faster, but since only newer versions of dot (>1.8.10) support
+ # this, this feature is disabled by default.
+ # The default value is: NO.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_MULTI_TARGETS      = NO
+ 
+ # If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page
+ # explaining the meaning of the various boxes and arrows in the dot generated
+ # graphs.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ GENERATE_LEGEND        = YES
+ 
+ # If the DOT_CLEANUP tag is set to YES doxygen will remove the intermediate dot
+ # files that are used to generate the various graphs.
+ # The default value is: YES.
+ # This tag requires that the tag HAVE_DOT is set to YES.
+ 
+ DOT_CLEANUP            = YES
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/inc/stm8l10x.h ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/inc/stm8l10x.h
*** ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	2014-10-21 14:13:34.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/inc/stm8l10x.h	2017-08-15 17:22:00.722471294 +0200
***************
*** 40,45 ****
--- 40,47 ----
   #define _RAISONANCE_
  #elif defined(__ICCSTM8__)
   #define _IAR_
+ #elif defined(__SDCC)                    /* SDCC patch: add SDCC compiler */
+  #define _SDCC_
  #else
   #error "Unsupported Compiler!"          /* Compiler defines not found */
  #endif
***************
*** 64,69 ****
--- 66,77 ----
   #define EEPROM eeprom
   #define CONST  code
   #define MEMCPY memcpy /*!< Used with memory Models for code less than 64K */
+ #elif defined (_SDCC_)                    /* SDCC patch: mostly not required / not supported */
+  #define FAR
+  #define NEAR
+  #define TINY
+  #define EEPROM
+  #define CONST  const
  #else /* _IAR_ */
   #define FAR  __far
   #define NEAR __near
***************
*** 93,99 ****
   #else /*_IAR_*/
    #define IN_RAM(a) __ramfunc a
   #endif /* _COSMIC_ */
! #else 
    #define IN_RAM(a) a
  #endif /* RAM_EXECUTION */
  
--- 101,109 ----
   #else /*_IAR_*/
    #define IN_RAM(a) __ramfunc a
   #endif /* _COSMIC_ */
!  #elif defined (_SDCC_)                    /* SDCC patch: code in RAM not yet patched */
!   #define IN_RAM(a) a
! #else /*_IAR_*/
    #define IN_RAM(a) a
  #endif /* RAM_EXECUTION */
  
***************
*** 1329,1334 ****
--- 1339,1353 ----
   #define wfi()               {_asm("wfi\n");}  /*!< Wait For Interrupt */
   #define wfe()               {_asm("wfe\n");}  /*!< Wait for event */
   #define halt()              {_asm("halt\n");} /*!< Halt */
+ #elif defined(_SDCC_)                    /* SDCC patch: standard inline asm macros */
+  #define enableInterrupts()    __asm__("rim")    /* enable interrupts */
+  #define disableInterrupts()   __asm__("sim")    /* disable interrupts */
+  #define rim()                 __asm__("rim")    /* enable interrupts */
+  #define sim()                 __asm__("sim")    /* disable interrupts */
+  #define nop()                 __asm__("nop")    /* No Operation */
+  #define trap()                __asm__("trap")   /* Trap (soft IT) */
+  #define wfi()                 __asm__("wfi")    /* Wait For Interrupt */
+  #define halt()                __asm__("halt")   /* Halt */
  #else /* _IAR */
   #include <intrinsics.h>
   #define enableInterrupts()  __enable_interrupt()   /*!< Enable interrupts */
***************
*** 1365,1370 ****
--- 1384,1405 ----
    __interrupt void (a) (void)
  #endif
  
+ /* SDCC patch: declare ISR handlers */
+ #ifdef _SDCC_
+  #define INTERRUPT_HANDLER(a,b) void a() __interrupt(b)
+ 
+  /* traps require >=v3.4.3 */
+  #define SDCC_VERSION (__SDCC_VERSION_MAJOR * 10000 \
+                      + __SDCC_VERSION_MINOR * 100 \
+                      + __SDCC_VERSION_PATCH)
+  #if SDCC_VERSION >= 30403
+    #define INTERRUPT_HANDLER_TRAP(a) void a() __trap 
+  #else
+    #error traps require SDCC >=3.4.3. Please update!
+  #endif 
+ 
+ #endif /* _SDCC_ */
+ 
  /*============================== Interrupt Handler declaration ========================*/
  
  #ifdef _COSMIC_
***************
*** 1375,1380 ****
--- 1410,1419 ----
  #define INTERRUPT __interrupt
  #endif
  
+ #if defined(_SDCC_)                      /* SDCC patch: doesn't work like that in SDCC -> skip */
+   #define INTERRUPT __interrupt
+   //#include "stm8l10x_it.h"               /* must be included in main.c! */
+ #endif
  
  /*============================== Handling bits ====================================*/
  /*-----------------------------------------------------------------------------
diff -rcN ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c
*** ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	2014-10-21 14:13:34.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_flash.c	2017-08-16 14:12:42.702293770 +0200
***************
*** 119,124 ****
--- 119,125 ----
  /* Private variables ---------------------------------------------------------*/
  /* Private Constants ---------------------------------------------------------*/
  /* Private function prototypes -----------------------------------------------*/
+ /* SDCC patch: STM8L10x has only <32kB flash -> no SDCC patch for far pointers required */
  /* Private functions ---------------------------------------------------------*/
  
  /** @defgroup FLASH_Private_Functions
***************
*** 708,711 ****
    * @}
    */ 
    
! /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
\ Kein Zeilenumbruch am Dateiende.
--- 709,712 ----
    * @}
    */ 
    
! /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
diff -rcN ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c
*** ./STM8L10x_StdPeriph_Lib/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	2014-10-21 14:13:34.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_itc.c	2017-08-16 14:30:29.570725254 +0200
***************
*** 62,67 ****
--- 62,70 ----
    return; /* Ignore compiler warning, the returned value is in A register */
  #elif defined _RAISONANCE_ /* _RAISONANCE_ */
    return _getCC_();
+ #elif defined(_SDCC_)                    /* SDCC patch: do same as IAR */
+   __asm__("push cc");
+   __asm__("pop a");
  #else /* _IAR_ */
    asm("push cc");
    asm("pop a"); /* Ignore compiler warning, the returned value is in A register */
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/AWU/AWU_ActiveHaltMode/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/AWU/AWU_ActiveHaltMode/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/AWU/AWU_ActiveHaltMode/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/AWU/AWU_ActiveHaltMode/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/BEEP/BEEP_3SignalsGeneration/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/BEEP/BEEP_3SignalsGeneration/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/BEEP/BEEP_3SignalsGeneration/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/BEEP/BEEP_3SignalsGeneration/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/CLK/CLK_MasterClock/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/CLK/CLK_MasterClock/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/CLK/CLK_MasterClock/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/CLK/CLK_MasterClock/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/COMP/COMP_Interrupt/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/COMP/COMP_Interrupt/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/COMP/COMP_Interrupt/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/COMP/COMP_Interrupt/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/EXTI/EXTI_IOControl/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/EXTI/EXTI_IOControl/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/EXTI/EXTI_IOControl/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/EXTI/EXTI_IOControl/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_ByteReadWriteOperation/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_ByteReadWriteOperation/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_ByteReadWriteOperation/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_ByteReadWriteOperation/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/main.c ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/main.c
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/main.c	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/main.c	2017-08-16 15:10:30.138299269 +0200
***************
*** 95,100 ****
--- 95,105 ----
           (int)&__size__FLASH_ProgramBlock);
  #endif /*_RAISONANCE_*/
  
+ /* SDCC patch: code execution from RAM not yet implemented for SDCC */
+ #ifdef _SDCC_
+   #error code execution from RAM not yet implemented for SDCC
+ #endif /*_SDCC_*/
+ 
    /* Initialize I/Os in Output Mode */
    STM_EVAL_LEDInit(LED2);
    STM_EVAL_LEDInit(LED3);
***************
*** 217,220 ****
  /**
    * @}
    */
! /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
\ Kein Zeilenumbruch am Dateiende.
--- 222,225 ----
  /**
    * @}
    */
! /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_DataProgram/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_WriteWordOperation/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_WriteWordOperation/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_WriteWordOperation/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/FLASH/FLASH_WriteWordOperation/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/GPIO/GPIO_IOToggle/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/GPIO/GPIO_IOToggle/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/GPIO/GPIO_IOToggle/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/GPIO/GPIO_IOToggle/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Master/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Master/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Master/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Master/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    I2C/I2C_DataExchange/Master/stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Slave/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Slave/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Slave/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_DataExchange/Slave/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    I2C/I2C_DataExchange/Slave/stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_EEPROM/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_EEPROM/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_EEPROM/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/I2C/I2C_EEPROM/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    I2C/I2C_EEPROM/stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/IRTIM/IR_SignalGeneration/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/IRTIM/IR_SignalGeneration/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/IRTIM/IR_SignalGeneration/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/IRTIM/IR_SignalGeneration/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/ITC/ITC_SoftwarePriority/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/ITC/ITC_SoftwarePriority/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/ITC/ITC_SoftwarePriority/stm8l10x_it.h	2014-10-21 14:13:22.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/ITC/ITC_SoftwarePriority/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/IWDG/IWDG_Example/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/IWDG/IWDG_Example/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/IWDG/IWDG_Example/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/IWDG/IWDG_Example/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/RST/RST_IllegalOpcode/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/RST/RST_IllegalOpcode/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/RST/RST_IllegalOpcode/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/RST/RST_IllegalOpcode/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_FullDuplexUSART/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_FullDuplexUSART/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_FullDuplexUSART/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_FullDuplexUSART/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_MSD/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_MSD/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_MSD/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_MSD/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_SimplexLCD/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_SimplexLCD/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_SimplexLCD/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/SPI/SPI_SimplexLCD/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_InputCapture/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_InputCapture/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_InputCapture/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_InputCapture/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCActiveMode/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCActiveMode/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCActiveMode/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCActiveMode/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCInactiveMode/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCInactiveMode/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCInactiveMode/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_OCInactiveMode/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_PWMDutyCycleConfiguration/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_PWMDutyCycleConfiguration/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_PWMDutyCycleConfiguration/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_PWMDutyCycleConfiguration/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_SinewaveGeneration/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_SinewaveGeneration/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_SinewaveGeneration/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM2/TIM2_SinewaveGeneration/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM3_SynchronisationWithTIM4/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM3_SynchronisationWithTIM4/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM3_SynchronisationWithTIM4/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM3_SynchronisationWithTIM4/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM4_TimeBase/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM4_TimeBase/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM4_TimeBase/stm8l10x_it.h	2014-10-21 14:13:28.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/TIM4/TIM4_TimeBase/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_HyperTerminalInterrupt/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_HyperTerminalInterrupt/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_HyperTerminalInterrupt/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_HyperTerminalInterrupt/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_MultiProcessor/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_MultiProcessor/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_MultiProcessor/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_MultiProcessor/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_Printf/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_Printf/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_Printf/stm8l10x_it.h	2014-10-21 14:13:24.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_Printf/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_Synchronous/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_Synchronous/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/USART/USART_Synchronous/stm8l10x_it.h	2014-10-21 14:13:26.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/USART/USART_Synchronous/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/WFE/WFE_WakeUp/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/WFE/WFE_WakeUp/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Examples/WFE/WFE_WakeUp/stm8l10x_it.h	2014-10-21 14:13:22.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Examples/WFE/WFE_WakeUp/stm8l10x_it.h	2017-08-16 16:22:44.917464000 +0200
***************
*** 1,10 ****
  /**
    ******************************************************************************
!   * @file    stm8l10x_it.h
!   * @author  MCD Application Team
!   * @version V1.2.1
!   * @date    30-September-2014
!   * @brief   This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
--- 1,10 ----
  /**
    ******************************************************************************
!   * @file     Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
!   * @author   MCD Application Team
!   * @version  V1.2.1
!   * @date     30-September-2014
!   * @brief    This file contains the external declarations of the interrupt routines.
    ******************************************************************************
    * @attention
    *
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/readme.txt ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/readme.txt
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/readme.txt	2014-10-21 14:13:30.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/readme.txt	2017-08-16 15:08:47.918655185 +0200
***************
*** 35,41 ****
  
  @par Directory contents 
  
! This folder contains standard template projects for EWSTM8, STVD with Cosmic, 
  STVD with raisonance and RIDE toolchains that compile the needed STM8L10x Standard
  Peripheral's drivers plus all the user-modifiable files that are necessary to 
  create a new project. 
--- 35,41 ----
  
  @par Directory contents 
  
! This folder contains standard template projects for EWSTM8, SDCC, STVD with Cosmic, 
  STVD with raisonance and RIDE toolchains that compile the needed STM8L10x Standard
  Peripheral's drivers plus all the user-modifiable files that are necessary to 
  create a new project. 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/Makefile ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/Makefile
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/Makefile	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/Makefile	2017-08-15 21:24:48.977932004 +0200
***************
*** 0 ****
--- 1,77 ----
+ #######
+ # makefile for STM8S_StdPeriph_Lib and SDCC compiler
+ #
+ # note: paths in this Makefile assume unmodified SPL folder structure
+ #
+ # usage:
+ #   1. if SDCC not in PATH set path -> CC_ROOT
+ #   2. set correct STM8 device -> DEVICE
+ #   3. set project paths -> PRJ_ROOT, PRJ_SRC_DIR, PRJ_INC_DIR
+ #   4. set SPL root path -> SPL_ROOT
+ #   5. include required SPL modules -> SPL_SOURCE
+ #   6. include required STM8S_EVAL modules -> EVAL_SOURCE, EVAL_128K_SOURCE, EVAL_COMM_SOURCE
+ #
+ #######
+ 
+ # STM8 device (doesn't matter here, just for Makefile)
+ DEVICE=STM8L10x
+ 
+ # set compiler path & parameters 
+ CC_ROOT =
+ CC      = sdcc
+ CFLAGS  = -mstm8 -lstm8 --opt-code-size
+ 
+ # required for some examples for STM8S EVAL board
+ CFLAGS += -DUSE_STM8_128_EVAL
+ 
+ # set output folder and target name
+ OUTPUT_DIR = ./$(DEVICE)
+ TARGET     = $(OUTPUT_DIR)/$(DEVICE).hex
+ 
+ # set project folder and files (all *.c)
+ PRJ_ROOT    = ..
+ PRJ_SRC_DIR = $(PRJ_ROOT)
+ PRJ_INC_DIR = $(PRJ_ROOT)
+ PRJ_SOURCE  = $(notdir $(wildcard $(PRJ_SRC_DIR)/*.c))
+ PRJ_OBJECTS := $(addprefix $(OUTPUT_DIR)/, $(PRJ_SOURCE:.c=.rel))
+ 
+ # set SPL paths
+ SPL_ROOT    = ../../..
+ SPL_SRC_DIR = $(SPL_ROOT)/Libraries/STM8L10x_StdPeriph_Driver/src
+ SPL_INC_DIR = $(SPL_ROOT)/Libraries/STM8L10x_StdPeriph_Driver/inc
+ SPL_SOURCE  = stm8l10x_gpio.c
+ SPL_OBJECTS := $(addprefix $(OUTPUT_DIR)/, $(SPL_SOURCE:.c=.rel))
+ 
+ # set STM8L101_EVAL Utilities paths
+ EVAL_DIR     = $(SPL_ROOT)/Utilities/STM8L101_EVAL
+ EVAL_SOURCE  = 
+ EVAL_OBJECTS := $(addprefix $(OUTPUT_DIR)/, $(EVAL_SOURCE:.c=.rel))
+ 
+ # set STM8L_EVAL Common paths
+ EVAL_COMM_DIR    = $(EVAL_DIR)/Common
+ EVAL_COMM_SOURCE  = 
+ EVAL_COMM_OBJECTS := $(addprefix $(OUTPUT_DIR)/, $(EVAL_COMM_SOURCE:.c=.rel))
+ 
+ 
+ # collect all include folders
+ INCLUDE = -I$(PRJ_SRC_DIR) -I$(SPL_INC_DIR) -I$(EVAL_DIR) -I$(EVAL_COMM_DIR)
+ 
+ # collect all source directories
+ VPATH=$(PRJ_SRC_DIR):$(SPL_SRC_DIR):$(EVAL_DIR):$(EVAL_COMM_DIR)
+ 
+ .PHONY: clean
+ 
+ all: $(TARGET)
+ 
+ $(OUTPUT_DIR)/%.rel: %.c
+ 	$(CC) $(CFLAGS) $(INCLUDE) -D$(DEVICE) -c $?
+ 
+ $(OUTPUT_DIR)/%.rel: %.c
+ 	$(CC) $(CFLAGS) $(INCLUDE) -D$(DEVICE) -c $? -o $@
+ 
+ $(TARGET): $(PRJ_OBJECTS) $(SPL_OBJECTS) $(EVAL_OBJECTS) $(EVAL_COMM_OBJECTS)
+ 	$(CC) $(CFLAGS) -o $(TARGET) $^
+ 
+ clean: 
+ 	rm -fr $(OUTPUT_DIR)
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_clean.command ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_clean.command
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_clean.command	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_clean.command	2017-08-15 21:27:00.969513433 +0200
***************
*** 0 ****
--- 1,23 ----
+ #!/bin/bash 
+ 
+ # change to current working directory
+ cd `dirname $0`
+ 
+ # just for output
+ echo off
+ clear
+ 
+ # target device (doesn't matter here)
+ DEVICE=STM8L10x
+ 
+ # set make tool (if not in PATH, set complete path)
+ MAKE=make
+ 
+ # use Makefiles to delete outputs
+ #$MAKE -f Makefile DEVICE=$DEVICE clean 
+ 
+ # also delete output folders
+ rm -fr $DEVICE
+ 
+ echo on
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_compile_run.command ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_compile_run.command
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_compile_run.command	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_OSX_compile_run.command	2017-08-15 21:27:02.633508180 +0200
***************
*** 0 ****
--- 1,49 ----
+ #!/bin/bash 
+ 
+ # change to current working directory
+ cd `dirname $0`
+ 
+ # just for output
+ clear
+ 
+ # target device (doesn't matter here)
+ DEVICE=STM8L10x
+ 
+ # set make tool (if not in PATH, set complete path)
+ MAKE=make
+ 
+ # set serial upload tool and serial port (from https://github.com/gicking/STM8_serial_flasher)
+ BSL_LOADER=../../../../../STM8_serial_flasher/STM8_serial_flasher
+ BSL_PORT=/dev/tty.usbserial-A4009I0O
+ 
+ # set SWIM upload tool and device name (from https://github.com/vdudouyt/stm8flash)
+ SWIM_LOADER=../../../../../stm8flash/stm8flash
+ SWIM_DEVICE=stm8s207mb                            # seems to be unimportant
+ 
+ # target hexfile
+ TARGET=./$DEVICE/$DEVICE.hex
+ 
+ # make project; check for output folder (=device name)
+ echo "make application"
+ test -d $DEVICE || mkdir $DEVICE
+ $MAKE -f Makefile DEVICE=$DEVICE
+ if [ $? -ne 0 ]; then
+   echo " "
+   read -p "press key to close window..."
+   echo on
+   exit
+ fi
+ echo "done with application"
+ echo " "
+ 
+ # upload using STM8 serial bootloader
+ #$BSL_LOADER -p $BSL_PORT -w $TARGET -v
+ 
+ # upload using SWIM debug interface
+ $SWIM_LOADER -c stlink -w $TARGET -p $SWIM_DEVICE
+ 
+ echo " "
+ read -p "press key to close window..."
+ echo " "
+ 
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.asm ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.asm
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.asm	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.asm	2017-08-15 17:19:05.770615312 +0200
***************
*** 0 ****
--- 1,119 ----
+ ;--------------------------------------------------------
+ ; File Created by SDCC : free open source ANSI-C Compiler
+ ; Version 3.6.0 #9615 (Linux)
+ ;--------------------------------------------------------
+ 	.module main
+ 	.optsdcc -mstm8
+ 	
+ ;--------------------------------------------------------
+ ; Public variables in this module
+ ;--------------------------------------------------------
+ 	.globl _main
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area DATA
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area INITIALIZED
+ ;--------------------------------------------------------
+ ; Stack segment in internal ram 
+ ;--------------------------------------------------------
+ 	.area	SSEG
+ __start__stack:
+ 	.ds	1
+ 
+ ;--------------------------------------------------------
+ ; absolute external ram data
+ ;--------------------------------------------------------
+ 	.area DABS (ABS)
+ ;--------------------------------------------------------
+ ; interrupt vector 
+ ;--------------------------------------------------------
+ 	.area HOME
+ __interrupt_vect:
+ 	int s_GSINIT ;reset
+ 	int 0x0000 ;trap
+ 	int 0x0000 ;int0
+ 	int 0x0000 ;int1
+ 	int 0x0000 ;int2
+ 	int 0x0000 ;int3
+ 	int 0x0000 ;int4
+ 	int 0x0000 ;int5
+ 	int 0x0000 ;int6
+ 	int 0x0000 ;int7
+ 	int 0x0000 ;int8
+ 	int 0x0000 ;int9
+ 	int 0x0000 ;int10
+ 	int 0x0000 ;int11
+ 	int 0x0000 ;int12
+ 	int 0x0000 ;int13
+ 	int 0x0000 ;int14
+ 	int 0x0000 ;int15
+ 	int 0x0000 ;int16
+ 	int 0x0000 ;int17
+ 	int 0x0000 ;int18
+ 	int 0x0000 ;int19
+ 	int 0x0000 ;int20
+ 	int 0x0000 ;int21
+ 	int 0x0000 ;int22
+ 	int 0x0000 ;int23
+ 	int 0x0000 ;int24
+ 	int 0x0000 ;int25
+ 	int 0x0000 ;int26
+ 	int 0x0000 ;int27
+ 	int 0x0000 ;int28
+ 	int 0x0000 ;int29
+ ;--------------------------------------------------------
+ ; global & static initialisations
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area GSINIT
+ 	.area GSFINAL
+ 	.area GSINIT
+ __sdcc_gs_init_startup:
+ __sdcc_init_data:
+ ; stm8_genXINIT() start
+ 	ldw x, #l_DATA
+ 	jreq	00002$
+ 00001$:
+ 	clr (s_DATA - 1, x)
+ 	decw x
+ 	jrne	00001$
+ 00002$:
+ 	ldw	x, #l_INITIALIZER
+ 	jreq	00004$
+ 00003$:
+ 	ld	a, (s_INITIALIZER - 1, x)
+ 	ld	(s_INITIALIZED - 1, x), a
+ 	decw	x
+ 	jrne	00003$
+ 00004$:
+ ; stm8_genXINIT() end
+ 	.area GSFINAL
+ 	jp	__sdcc_program_startup
+ ;--------------------------------------------------------
+ ; Home
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area HOME
+ __sdcc_program_startup:
+ 	jp	_main
+ ;	return from main will return to caller
+ ;--------------------------------------------------------
+ ; code
+ ;--------------------------------------------------------
+ 	.area CODE
+ ;	../main.c: 42: void main(void)
+ ;	-----------------------------------------
+ ;	 function main
+ ;	-----------------------------------------
+ _main:
+ ;	../main.c: 45: while (1)
+ 00102$:
+ 	jra	00102$
+ 	ret
+ 	.area CODE
+ 	.area INITIALIZER
+ 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.lst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.lst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.lst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.lst	2017-08-15 17:19:05.818616352 +0200
***************
*** 0 ****
--- 1,119 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module main
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _main
+                                      12 ;--------------------------------------------------------
+                                      13 ; ram data
+                                      14 ;--------------------------------------------------------
+                                      15 	.area DATA
+                                      16 ;--------------------------------------------------------
+                                      17 ; ram data
+                                      18 ;--------------------------------------------------------
+                                      19 	.area INITIALIZED
+                                      20 ;--------------------------------------------------------
+                                      21 ; Stack segment in internal ram 
+                                      22 ;--------------------------------------------------------
+                                      23 	.area	SSEG
+       000000                         24 __start__stack:
+       000000                         25 	.ds	1
+                                      26 
+                                      27 ;--------------------------------------------------------
+                                      28 ; absolute external ram data
+                                      29 ;--------------------------------------------------------
+                                      30 	.area DABS (ABS)
+                                      31 ;--------------------------------------------------------
+                                      32 ; interrupt vector 
+                                      33 ;--------------------------------------------------------
+                                      34 	.area HOME
+       000000                         35 __interrupt_vect:
+       000000 82v00u00u00             36 	int s_GSINIT ;reset
+       000004 82 00 00 00             37 	int 0x0000 ;trap
+       000008 82 00 00 00             38 	int 0x0000 ;int0
+       00000C 82 00 00 00             39 	int 0x0000 ;int1
+       000010 82 00 00 00             40 	int 0x0000 ;int2
+       000014 82 00 00 00             41 	int 0x0000 ;int3
+       000018 82 00 00 00             42 	int 0x0000 ;int4
+       00001C 82 00 00 00             43 	int 0x0000 ;int5
+       000020 82 00 00 00             44 	int 0x0000 ;int6
+       000024 82 00 00 00             45 	int 0x0000 ;int7
+       000028 82 00 00 00             46 	int 0x0000 ;int8
+       00002C 82 00 00 00             47 	int 0x0000 ;int9
+       000030 82 00 00 00             48 	int 0x0000 ;int10
+       000034 82 00 00 00             49 	int 0x0000 ;int11
+       000038 82 00 00 00             50 	int 0x0000 ;int12
+       00003C 82 00 00 00             51 	int 0x0000 ;int13
+       000040 82 00 00 00             52 	int 0x0000 ;int14
+       000044 82 00 00 00             53 	int 0x0000 ;int15
+       000048 82 00 00 00             54 	int 0x0000 ;int16
+       00004C 82 00 00 00             55 	int 0x0000 ;int17
+       000050 82 00 00 00             56 	int 0x0000 ;int18
+       000054 82 00 00 00             57 	int 0x0000 ;int19
+       000058 82 00 00 00             58 	int 0x0000 ;int20
+       00005C 82 00 00 00             59 	int 0x0000 ;int21
+       000060 82 00 00 00             60 	int 0x0000 ;int22
+       000064 82 00 00 00             61 	int 0x0000 ;int23
+       000068 82 00 00 00             62 	int 0x0000 ;int24
+       00006C 82 00 00 00             63 	int 0x0000 ;int25
+       000070 82 00 00 00             64 	int 0x0000 ;int26
+       000074 82 00 00 00             65 	int 0x0000 ;int27
+       000078 82 00 00 00             66 	int 0x0000 ;int28
+       00007C 82 00 00 00             67 	int 0x0000 ;int29
+                                      68 ;--------------------------------------------------------
+                                      69 ; global & static initialisations
+                                      70 ;--------------------------------------------------------
+                                      71 	.area HOME
+                                      72 	.area GSINIT
+                                      73 	.area GSFINAL
+                                      74 	.area GSINIT
+       000000                         75 __sdcc_gs_init_startup:
+       000000                         76 __sdcc_init_data:
+                                      77 ; stm8_genXINIT() start
+       000000 AEr00r00         [ 2]   78 	ldw x, #l_DATA
+       000003 27 07            [ 1]   79 	jreq	00002$
+       000005                         80 00001$:
+       000005 72 4FuFFuFF      [ 1]   81 	clr (s_DATA - 1, x)
+       000009 5A               [ 2]   82 	decw x
+       00000A 26 F9            [ 1]   83 	jrne	00001$
+       00000C                         84 00002$:
+       00000C AEr00r00         [ 2]   85 	ldw	x, #l_INITIALIZER
+       00000F 27 09            [ 1]   86 	jreq	00004$
+       000011                         87 00003$:
+       000011 D6uFFuFF         [ 1]   88 	ld	a, (s_INITIALIZER - 1, x)
+       000014 D7uFFuFF         [ 1]   89 	ld	(s_INITIALIZED - 1, x), a
+       000017 5A               [ 2]   90 	decw	x
+       000018 26 F7            [ 1]   91 	jrne	00003$
+       00001A                         92 00004$:
+                                      93 ; stm8_genXINIT() end
+                                      94 	.area GSFINAL
+       000000 CCr00r80         [ 2]   95 	jp	__sdcc_program_startup
+                                      96 ;--------------------------------------------------------
+                                      97 ; Home
+                                      98 ;--------------------------------------------------------
+                                      99 	.area HOME
+                                     100 	.area HOME
+       000080                        101 __sdcc_program_startup:
+       000080 CCr00r00         [ 2]  102 	jp	_main
+                                     103 ;	return from main will return to caller
+                                     104 ;--------------------------------------------------------
+                                     105 ; code
+                                     106 ;--------------------------------------------------------
+                                     107 	.area CODE
+                                     108 ;	../main.c: 42: void main(void)
+                                     109 ;	-----------------------------------------
+                                     110 ;	 function main
+                                     111 ;	-----------------------------------------
+       000000                        112 _main:
+                                     113 ;	../main.c: 45: while (1)
+       000000                        114 00102$:
+       000000 20 FE            [ 2]  115 	jra	00102$
+       000002 81               [ 4]  116 	ret
+                                     117 	.area CODE
+                                     118 	.area INITIALIZER
+                                     119 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rel ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rel
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rel	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rel	2017-08-15 17:19:05.818616352 +0200
***************
*** 0 ****
--- 1,83 ----
+ XH3
+ H B areas 8 global symbols
+ M main
+ O -mstm8
+ S s_INITIALIZED Ref000000
+ S l_INITIALIZER Ref000000
+ S s_INITIALIZER Ref000000
+ S .__.ABS. Def000000
+ S s_GSINIT Ref000000
+ S l_DATA Ref000000
+ S s_DATA Ref000000
+ A _CODE size 0 flags 0 addr 0
+ A DATA size 0 flags 0 addr 0
+ A INITIALIZED size 0 flags 0 addr 0
+ A SSEG size 1 flags 0 addr 0
+ A DABS size 0 flags 8 addr 0
+ A HOME size 83 flags 0 addr 0
+ A GSINIT size 1A flags 0 addr 0
+ A GSFINAL size 3 flags 0 addr 0
+ A CODE size 3 flags 0 addr 0
+ S _main Def000000
+ A INITIALIZER size 0 flags 0 addr 0
+ A CABS size 0 flags 8 addr 0
+ T 00 00 00
+ R 00 00 00 03
+ T 00 00 00
+ R 00 00 00 03
+ T 00 00 00
+ R 00 00 00 05
+ T 00 00 00 82 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05 92 04 00 04
+ T 00 00 0D 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 19 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 25 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 31 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 3D 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 49 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 55 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 61 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 6D 00 00 00 82 00 00 00 82 00 00 00 82
+ R 00 00 00 05
+ T 00 00 79 00 00 00 82 00 00 00
+ R 00 00 00 05
+ T 00 00 00
+ R 00 00 00 06
+ T 00 00 00
+ R 00 00 00 06
+ T 00 00 00 AE 00 00 27 07
+ R 00 00 00 06 02 04 00 05
+ T 00 00 05
+ R 00 00 00 06
+ T 00 00 05 72 4F FF FF 5A 26 F9
+ R 00 00 00 06 12 05 00 06
+ T 00 00 0C
+ R 00 00 00 06
+ T 00 00 0C AE 00 00 27 09
+ R 00 00 00 06 02 04 00 01
+ T 00 00 11
+ R 00 00 00 06
+ T 00 00 11 D6 FF FF D7 FF FF 5A 26 F7
+ R 00 00 00 06 12 04 00 02 12 07 00 00
+ T 00 00 1A
+ R 00 00 00 06
+ T 00 00 00 CC 00 80
+ R 00 00 00 07 00 04 00 05
+ T 00 00 80
+ R 00 00 00 05
+ T 00 00 80 CC 00 00
+ R 00 00 00 05 00 04 00 08
+ T 00 00 00
+ R 00 00 00 08
+ T 00 00 00
+ R 00 00 00 08
+ T 00 00 00 20 FE 81
+ R 00 00 00 08
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.rst	2017-08-15 21:24:53.589917166 +0200
***************
*** 0 ****
--- 1,119 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module main
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _main
+                                      12 ;--------------------------------------------------------
+                                      13 ; ram data
+                                      14 ;--------------------------------------------------------
+                                      15 	.area DATA
+                                      16 ;--------------------------------------------------------
+                                      17 ; ram data
+                                      18 ;--------------------------------------------------------
+                                      19 	.area INITIALIZED
+                                      20 ;--------------------------------------------------------
+                                      21 ; Stack segment in internal ram 
+                                      22 ;--------------------------------------------------------
+                                      23 	.area	SSEG
+       000001                         24 __start__stack:
+       000001                         25 	.ds	1
+                                      26 
+                                      27 ;--------------------------------------------------------
+                                      28 ; absolute external ram data
+                                      29 ;--------------------------------------------------------
+                                      30 	.area DABS (ABS)
+                                      31 ;--------------------------------------------------------
+                                      32 ; interrupt vector 
+                                      33 ;--------------------------------------------------------
+                                      34 	.area HOME
+       008000                         35 __interrupt_vect:
+       008000 82 00 80 83             36 	int s_GSINIT ;reset
+       008004 82 00 00 00             37 	int 0x0000 ;trap
+       008008 82 00 00 00             38 	int 0x0000 ;int0
+       00800C 82 00 00 00             39 	int 0x0000 ;int1
+       008010 82 00 00 00             40 	int 0x0000 ;int2
+       008014 82 00 00 00             41 	int 0x0000 ;int3
+       008018 82 00 00 00             42 	int 0x0000 ;int4
+       00801C 82 00 00 00             43 	int 0x0000 ;int5
+       008020 82 00 00 00             44 	int 0x0000 ;int6
+       008024 82 00 00 00             45 	int 0x0000 ;int7
+       008028 82 00 00 00             46 	int 0x0000 ;int8
+       00802C 82 00 00 00             47 	int 0x0000 ;int9
+       008030 82 00 00 00             48 	int 0x0000 ;int10
+       008034 82 00 00 00             49 	int 0x0000 ;int11
+       008038 82 00 00 00             50 	int 0x0000 ;int12
+       00803C 82 00 00 00             51 	int 0x0000 ;int13
+       008040 82 00 00 00             52 	int 0x0000 ;int14
+       008044 82 00 00 00             53 	int 0x0000 ;int15
+       008048 82 00 00 00             54 	int 0x0000 ;int16
+       00804C 82 00 00 00             55 	int 0x0000 ;int17
+       008050 82 00 00 00             56 	int 0x0000 ;int18
+       008054 82 00 00 00             57 	int 0x0000 ;int19
+       008058 82 00 00 00             58 	int 0x0000 ;int20
+       00805C 82 00 00 00             59 	int 0x0000 ;int21
+       008060 82 00 00 00             60 	int 0x0000 ;int22
+       008064 82 00 00 00             61 	int 0x0000 ;int23
+       008068 82 00 00 00             62 	int 0x0000 ;int24
+       00806C 82 00 00 00             63 	int 0x0000 ;int25
+       008070 82 00 00 00             64 	int 0x0000 ;int26
+       008074 82 00 00 00             65 	int 0x0000 ;int27
+       008078 82 00 00 00             66 	int 0x0000 ;int28
+       00807C 82 00 00 00             67 	int 0x0000 ;int29
+                                      68 ;--------------------------------------------------------
+                                      69 ; global & static initialisations
+                                      70 ;--------------------------------------------------------
+                                      71 	.area HOME
+                                      72 	.area GSINIT
+                                      73 	.area GSFINAL
+                                      74 	.area GSINIT
+       008083                         75 __sdcc_gs_init_startup:
+       008083                         76 __sdcc_init_data:
+                                      77 ; stm8_genXINIT() start
+       008083 AE 00 00         [ 2]   78 	ldw x, #l_DATA
+       008086 27 07            [ 1]   79 	jreq	00002$
+       008088                         80 00001$:
+       008088 72 4F 00 00      [ 1]   81 	clr (s_DATA - 1, x)
+       00808C 5A               [ 2]   82 	decw x
+       00808D 26 F9            [ 1]   83 	jrne	00001$
+       00808F                         84 00002$:
+       00808F AE 00 00         [ 2]   85 	ldw	x, #l_INITIALIZER
+       008092 27 09            [ 1]   86 	jreq	00004$
+       008094                         87 00003$:
+       008094 D6 81 B2         [ 1]   88 	ld	a, (s_INITIALIZER - 1, x)
+       008097 D7 00 00         [ 1]   89 	ld	(s_INITIALIZED - 1, x), a
+       00809A 5A               [ 2]   90 	decw	x
+       00809B 26 F7            [ 1]   91 	jrne	00003$
+       00809D                         92 00004$:
+                                      93 ; stm8_genXINIT() end
+                                      94 	.area GSFINAL
+       00809D CC 80 80         [ 2]   95 	jp	__sdcc_program_startup
+                                      96 ;--------------------------------------------------------
+                                      97 ; Home
+                                      98 ;--------------------------------------------------------
+                                      99 	.area HOME
+                                     100 	.area HOME
+       008080                        101 __sdcc_program_startup:
+       008080 CC 80 A0         [ 2]  102 	jp	_main
+                                     103 ;	return from main will return to caller
+                                     104 ;--------------------------------------------------------
+                                     105 ; code
+                                     106 ;--------------------------------------------------------
+                                     107 	.area CODE
+                                     108 ;	../main.c: 42: void main(void)
+                                     109 ;	-----------------------------------------
+                                     110 ;	 function main
+                                     111 ;	-----------------------------------------
+       0080A0                        112 _main:
+                                     113 ;	../main.c: 45: while (1)
+       0080A0                        114 00102$:
+       0080A0 20 FE            [ 2]  115 	jra	00102$
+       0080A2 81               [ 4]  116 	ret
+                                     117 	.area CODE
+                                     118 	.area INITIALIZER
+                                     119 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.sym ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.sym
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.sym	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/main.sym	2017-08-15 17:19:05.818616352 +0200
***************
*** 0 ****
--- 1,40 ----
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 1.
+ Hexadecimal [24-Bits]
+ 
+ Symbol Table
+ 
+     .__.$$$.                                                    =  002710 L
+     .__.ABS.                                                    =  000000 G
+     .__.CPU.                                                    =  000000 L
+     .__.H$L.                                                    =  000001 L
+   5 __interrupt_vect                                               000000 R
+   6 __sdcc_gs_init_startup                                         000000 R
+   6 __sdcc_init_data                                               000000 R
+   5 __sdcc_program_startup                                         000080 R
+   3 __start__stack                                                 000000 R
+   8 _main                                                          000000 GR
+     l_DATA                                                         ****** GX
+     l_INITIALIZER                                                  ****** GX
+     s_DATA                                                         ****** GX
+     s_GSINIT                                                       ****** GX
+     s_INITIALIZED                                                  ****** GX
+     s_INITIALIZER                                                  ****** GX
+ 
+ 
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 2.
+ Hexadecimal [24-Bits]
+ 
+ Area Table
+ 
+    0 _CODE                                      size      0   flags    0
+    1 DATA                                       size      0   flags    0
+    2 INITIALIZED                                size      0   flags    0
+    3 SSEG                                       size      1   flags    0
+    4 DABS                                       size      0   flags    8
+    5 HOME                                       size     83   flags    0
+    6 GSINIT                                     size     1A   flags    0
+    7 GSFINAL                                    size      3   flags    0
+    8 CODE                                       size      3   flags    0
+    9 INITIALIZER                                size      0   flags    0
+    A CABS                                       size      0   flags    8
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.asm ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.asm
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.asm	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.asm	2017-08-15 21:24:53.565917243 +0200
***************
*** 0 ****
--- 1,317 ----
+ ;--------------------------------------------------------
+ ; File Created by SDCC : free open source ANSI-C Compiler
+ ; Version 3.6.0 #9615 (Linux)
+ ;--------------------------------------------------------
+ 	.module stm8l10x_gpio
+ 	.optsdcc -mstm8
+ 	
+ ;--------------------------------------------------------
+ ; Public variables in this module
+ ;--------------------------------------------------------
+ 	.globl _GPIO_DeInit
+ 	.globl _GPIO_Init
+ 	.globl _GPIO_Write
+ 	.globl _GPIO_WriteBit
+ 	.globl _GPIO_SetBits
+ 	.globl _GPIO_ResetBits
+ 	.globl _GPIO_ToggleBits
+ 	.globl _GPIO_ReadInputData
+ 	.globl _GPIO_ReadOutputData
+ 	.globl _GPIO_ReadInputDataBit
+ 	.globl _GPIO_ReadOutputDataBit
+ 	.globl _GPIO_ExternalPullUpConfig
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area DATA
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area INITIALIZED
+ ;--------------------------------------------------------
+ ; absolute external ram data
+ ;--------------------------------------------------------
+ 	.area DABS (ABS)
+ ;--------------------------------------------------------
+ ; global & static initialisations
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area GSINIT
+ 	.area GSFINAL
+ 	.area GSINIT
+ ;--------------------------------------------------------
+ ; Home
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area HOME
+ ;--------------------------------------------------------
+ ; code
+ ;--------------------------------------------------------
+ 	.area CODE
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 57: void GPIO_DeInit(GPIO_TypeDef* GPIOx)
+ ;	-----------------------------------------
+ ;	 function GPIO_DeInit
+ ;	-----------------------------------------
+ _GPIO_DeInit:
+ 	pushw	x
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 59: GPIOx->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
+ 	ldw	y, (0x05, sp)
+ 	ldw	(0x01, sp), y
+ 	ldw	x, (0x01, sp)
+ 	clr	(x)
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 60: GPIOx->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
+ 	ldw	x, (0x01, sp)
+ 	incw	x
+ 	incw	x
+ 	clr	(x)
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 61: GPIOx->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
+ 	ldw	x, (0x01, sp)
+ 	addw	x, #0x0003
+ 	clr	(x)
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 62: GPIOx->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
+ 	ldw	x, (0x01, sp)
+ 	addw	x, #0x0004
+ 	clr	(x)
+ 	popw	x
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 98: void GPIO_Init(GPIO_TypeDef* GPIOx,
+ ;	-----------------------------------------
+ ;	 function GPIO_Init
+ ;	-----------------------------------------
+ _GPIO_Init:
+ 	sub	sp, #3
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+ 	ldw	y, (0x06, sp)
+ 	ldw	(0x02, sp), y
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+ 	ld	a, (0x08, sp)
+ 	cpl	a
+ 	ld	(0x01, sp), a
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+ 	ldw	x, (0x02, sp)
+ 	incw	x
+ 	incw	x
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 113: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
+ 	tnz	(0x09, sp)
+ 	jrpl	00105$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 115: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
+ 	ld	a, (0x09, sp)
+ 	bcp	a, #0x10
+ 	jreq	00102$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+ 	ldw	y, (0x02, sp)
+ 	ld	a, (y)
+ 	or	a, (0x08, sp)
+ 	ldw	y, (0x02, sp)
+ 	ld	(y), a
+ 	jra	00103$
+ 00102$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+ 	ldw	y, (0x02, sp)
+ 	ld	a, (y)
+ 	and	a, (0x01, sp)
+ 	ldw	y, (0x02, sp)
+ 	ld	(y), a
+ 00103$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+ 	ld	a, (x)
+ 	or	a, (0x08, sp)
+ 	ld	(x), a
+ 	jra	00106$
+ 00105$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 127: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
+ 	ld	a, (x)
+ 	and	a, (0x01, sp)
+ 	ld	(x), a
+ 00106$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+ 	ldw	x, (0x02, sp)
+ 	addw	x, #0x0003
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 134: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
+ 	ld	a, (0x09, sp)
+ 	bcp	a, #0x40
+ 	jreq	00108$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+ 	ld	a, (x)
+ 	or	a, (0x08, sp)
+ 	ld	(x), a
+ 	jra	00109$
+ 00108$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 139: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+ 	ld	a, (x)
+ 	and	a, (0x01, sp)
+ 	ld	(x), a
+ 00109$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+ 	ldw	x, (0x02, sp)
+ 	addw	x, #0x0004
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 146: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
+ 	ld	a, (0x09, sp)
+ 	bcp	a, #0x20
+ 	jreq	00111$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+ 	ld	a, (x)
+ 	or	a, (0x08, sp)
+ 	ld	(x), a
+ 	jra	00113$
+ 00111$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 151: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
+ 	ld	a, (x)
+ 	and	a, (0x01, sp)
+ 	ld	(x), a
+ 00113$:
+ 	addw	sp, #3
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 163: void GPIO_Write(GPIO_TypeDef* GPIOx, uint8_t GPIO_PortVal)
+ ;	-----------------------------------------
+ ;	 function GPIO_Write
+ ;	-----------------------------------------
+ _GPIO_Write:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 165: GPIOx->ODR = GPIO_PortVal;
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (0x05, sp)
+ 	ld	(x), a
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 185: void GPIO_WriteBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, BitAction GPIO_BitVal)
+ ;	-----------------------------------------
+ ;	 function GPIO_WriteBit
+ ;	-----------------------------------------
+ _GPIO_WriteBit:
+ 	pushw	x
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+ 	ldw	x, (0x05, sp)
+ 	ld	a, #0x01
+ 	ld	(0x01, sp), a
+ 	ld	a, (0x07, sp)
+ 	jreq	00111$
+ 00110$:
+ 	sll	(0x01, sp)
+ 	dec	a
+ 	jrne	00110$
+ 00111$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 191: if (GPIO_BitVal != RESET)
+ 	tnz	(0x08, sp)
+ 	jreq	00102$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+ 	ld	a, (x)
+ 	or	a, (0x01, sp)
+ 	ld	(x), a
+ 	jra	00104$
+ 00102$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 198: ClrBit(GPIOx->ODR, GPIO_Pin);
+ 	ld	a, (x)
+ 	ld	(0x02, sp), a
+ 	ld	a, (0x01, sp)
+ 	cpl	a
+ 	and	a, (0x02, sp)
+ 	ld	(x), a
+ 00104$:
+ 	popw	x
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 218: void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+ ;	-----------------------------------------
+ ;	 function GPIO_SetBits
+ ;	-----------------------------------------
+ _GPIO_SetBits:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 220: GPIOx->ODR |= GPIO_Pin;
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (x)
+ 	or	a, (0x05, sp)
+ 	ld	(x), a
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 239: void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+ ;	-----------------------------------------
+ ;	 function GPIO_ResetBits
+ ;	-----------------------------------------
+ _GPIO_ResetBits:
+ 	push	a
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 241: GPIOx->ODR &= (uint8_t)(~GPIO_Pin);
+ 	ldw	x, (0x04, sp)
+ 	ld	a, (x)
+ 	ld	(0x01, sp), a
+ 	ld	a, (0x06, sp)
+ 	cpl	a
+ 	and	a, (0x01, sp)
+ 	ld	(x), a
+ 	pop	a
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 251: void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+ ;	-----------------------------------------
+ ;	 function GPIO_ToggleBits
+ ;	-----------------------------------------
+ _GPIO_ToggleBits:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 253: GPIOx->ODR ^= GPIO_Pin;
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (x)
+ 	xor	a, (0x05, sp)
+ 	ld	(x), a
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 262: uint8_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
+ ;	-----------------------------------------
+ ;	 function GPIO_ReadInputData
+ ;	-----------------------------------------
+ _GPIO_ReadInputData:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 264: return ((uint8_t)GPIOx->IDR);
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (0x1, x)
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 273: uint8_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
+ ;	-----------------------------------------
+ ;	 function GPIO_ReadOutputData
+ ;	-----------------------------------------
+ _GPIO_ReadOutputData:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 275: return ((uint8_t)GPIOx->ODR);
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (x)
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 294: BitStatus GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+ ;	-----------------------------------------
+ ;	 function GPIO_ReadInputDataBit
+ ;	-----------------------------------------
+ _GPIO_ReadInputDataBit:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 296: return ((BitStatus)(GPIOx->IDR & (uint8_t)GPIO_Pin));
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (0x1, x)
+ 	and	a, (0x05, sp)
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 315: BitStatus GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+ ;	-----------------------------------------
+ ;	 function GPIO_ReadOutputDataBit
+ ;	-----------------------------------------
+ _GPIO_ReadOutputDataBit:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 317: return ((BitStatus)(GPIOx->ODR & (uint8_t)GPIO_Pin));
+ 	ldw	x, (0x03, sp)
+ 	ld	a, (x)
+ 	and	a, (0x05, sp)
+ 	ret
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 337: void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin, FunctionalState NewState)
+ ;	-----------------------------------------
+ ;	 function GPIO_ExternalPullUpConfig
+ ;	-----------------------------------------
+ _GPIO_ExternalPullUpConfig:
+ 	push	a
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+ 	ldw	x, (0x04, sp)
+ 	addw	x, #0x0003
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 343: if (NewState != DISABLE) /* External Pull-Up Set*/
+ 	tnz	(0x07, sp)
+ 	jreq	00102$
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+ 	ld	a, (x)
+ 	or	a, (0x06, sp)
+ 	ld	(x), a
+ 	jra	00104$
+ 00102$:
+ ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 348: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+ 	ld	a, (x)
+ 	ld	(0x01, sp), a
+ 	ld	a, (0x06, sp)
+ 	cpl	a
+ 	and	a, (0x01, sp)
+ 	ld	(x), a
+ 00104$:
+ 	pop	a
+ 	ret
+ 	.area CODE
+ 	.area INITIALIZER
+ 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.lst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.lst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.lst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.lst	2017-08-15 21:24:53.569917230 +0200
***************
*** 0 ****
--- 1,317 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module stm8l10x_gpio
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _GPIO_DeInit
+                                      12 	.globl _GPIO_Init
+                                      13 	.globl _GPIO_Write
+                                      14 	.globl _GPIO_WriteBit
+                                      15 	.globl _GPIO_SetBits
+                                      16 	.globl _GPIO_ResetBits
+                                      17 	.globl _GPIO_ToggleBits
+                                      18 	.globl _GPIO_ReadInputData
+                                      19 	.globl _GPIO_ReadOutputData
+                                      20 	.globl _GPIO_ReadInputDataBit
+                                      21 	.globl _GPIO_ReadOutputDataBit
+                                      22 	.globl _GPIO_ExternalPullUpConfig
+                                      23 ;--------------------------------------------------------
+                                      24 ; ram data
+                                      25 ;--------------------------------------------------------
+                                      26 	.area DATA
+                                      27 ;--------------------------------------------------------
+                                      28 ; ram data
+                                      29 ;--------------------------------------------------------
+                                      30 	.area INITIALIZED
+                                      31 ;--------------------------------------------------------
+                                      32 ; absolute external ram data
+                                      33 ;--------------------------------------------------------
+                                      34 	.area DABS (ABS)
+                                      35 ;--------------------------------------------------------
+                                      36 ; global & static initialisations
+                                      37 ;--------------------------------------------------------
+                                      38 	.area HOME
+                                      39 	.area GSINIT
+                                      40 	.area GSFINAL
+                                      41 	.area GSINIT
+                                      42 ;--------------------------------------------------------
+                                      43 ; Home
+                                      44 ;--------------------------------------------------------
+                                      45 	.area HOME
+                                      46 	.area HOME
+                                      47 ;--------------------------------------------------------
+                                      48 ; code
+                                      49 ;--------------------------------------------------------
+                                      50 	.area CODE
+                                      51 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 57: void GPIO_DeInit(GPIO_TypeDef* GPIOx)
+                                      52 ;	-----------------------------------------
+                                      53 ;	 function GPIO_DeInit
+                                      54 ;	-----------------------------------------
+       000000                         55 _GPIO_DeInit:
+       000000 89               [ 2]   56 	pushw	x
+                                      57 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 59: GPIOx->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
+       000001 16 05            [ 2]   58 	ldw	y, (0x05, sp)
+       000003 17 01            [ 2]   59 	ldw	(0x01, sp), y
+       000005 1E 01            [ 2]   60 	ldw	x, (0x01, sp)
+       000007 7F               [ 1]   61 	clr	(x)
+                                      62 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 60: GPIOx->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
+       000008 1E 01            [ 2]   63 	ldw	x, (0x01, sp)
+       00000A 5C               [ 2]   64 	incw	x
+       00000B 5C               [ 2]   65 	incw	x
+       00000C 7F               [ 1]   66 	clr	(x)
+                                      67 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 61: GPIOx->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
+       00000D 1E 01            [ 2]   68 	ldw	x, (0x01, sp)
+       00000F 1C 00 03         [ 2]   69 	addw	x, #0x0003
+       000012 7F               [ 1]   70 	clr	(x)
+                                      71 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 62: GPIOx->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
+       000013 1E 01            [ 2]   72 	ldw	x, (0x01, sp)
+       000015 1C 00 04         [ 2]   73 	addw	x, #0x0004
+       000018 7F               [ 1]   74 	clr	(x)
+       000019 85               [ 2]   75 	popw	x
+       00001A 81               [ 4]   76 	ret
+                                      77 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 98: void GPIO_Init(GPIO_TypeDef* GPIOx,
+                                      78 ;	-----------------------------------------
+                                      79 ;	 function GPIO_Init
+                                      80 ;	-----------------------------------------
+       00001B                         81 _GPIO_Init:
+       00001B 52 03            [ 2]   82 	sub	sp, #3
+                                      83 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+       00001D 16 06            [ 2]   84 	ldw	y, (0x06, sp)
+       00001F 17 02            [ 2]   85 	ldw	(0x02, sp), y
+                                      86 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+       000021 7B 08            [ 1]   87 	ld	a, (0x08, sp)
+       000023 43               [ 1]   88 	cpl	a
+       000024 6B 01            [ 1]   89 	ld	(0x01, sp), a
+                                      90 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+       000026 1E 02            [ 2]   91 	ldw	x, (0x02, sp)
+       000028 5C               [ 2]   92 	incw	x
+       000029 5C               [ 2]   93 	incw	x
+                                      94 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 113: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
+       00002A 0D 09            [ 1]   95 	tnz	(0x09, sp)
+       00002C 2A 22            [ 1]   96 	jrpl	00105$
+                                      97 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 115: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
+       00002E 7B 09            [ 1]   98 	ld	a, (0x09, sp)
+       000030 A5 10            [ 1]   99 	bcp	a, #0x10
+       000032 27 0C            [ 1]  100 	jreq	00102$
+                                     101 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+       000034 16 02            [ 2]  102 	ldw	y, (0x02, sp)
+       000036 90 F6            [ 1]  103 	ld	a, (y)
+       000038 1A 08            [ 1]  104 	or	a, (0x08, sp)
+       00003A 16 02            [ 2]  105 	ldw	y, (0x02, sp)
+       00003C 90 F7            [ 1]  106 	ld	(y), a
+       00003E 20 0A            [ 2]  107 	jra	00103$
+       000040                        108 00102$:
+                                     109 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+       000040 16 02            [ 2]  110 	ldw	y, (0x02, sp)
+       000042 90 F6            [ 1]  111 	ld	a, (y)
+       000044 14 01            [ 1]  112 	and	a, (0x01, sp)
+       000046 16 02            [ 2]  113 	ldw	y, (0x02, sp)
+       000048 90 F7            [ 1]  114 	ld	(y), a
+       00004A                        115 00103$:
+                                     116 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+       00004A F6               [ 1]  117 	ld	a, (x)
+       00004B 1A 08            [ 1]  118 	or	a, (0x08, sp)
+       00004D F7               [ 1]  119 	ld	(x), a
+       00004E 20 04            [ 2]  120 	jra	00106$
+       000050                        121 00105$:
+                                     122 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 127: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
+       000050 F6               [ 1]  123 	ld	a, (x)
+       000051 14 01            [ 1]  124 	and	a, (0x01, sp)
+       000053 F7               [ 1]  125 	ld	(x), a
+       000054                        126 00106$:
+                                     127 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+       000054 1E 02            [ 2]  128 	ldw	x, (0x02, sp)
+       000056 1C 00 03         [ 2]  129 	addw	x, #0x0003
+                                     130 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 134: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
+       000059 7B 09            [ 1]  131 	ld	a, (0x09, sp)
+       00005B A5 40            [ 1]  132 	bcp	a, #0x40
+       00005D 27 06            [ 1]  133 	jreq	00108$
+                                     134 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+       00005F F6               [ 1]  135 	ld	a, (x)
+       000060 1A 08            [ 1]  136 	or	a, (0x08, sp)
+       000062 F7               [ 1]  137 	ld	(x), a
+       000063 20 04            [ 2]  138 	jra	00109$
+       000065                        139 00108$:
+                                     140 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 139: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+       000065 F6               [ 1]  141 	ld	a, (x)
+       000066 14 01            [ 1]  142 	and	a, (0x01, sp)
+       000068 F7               [ 1]  143 	ld	(x), a
+       000069                        144 00109$:
+                                     145 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+       000069 1E 02            [ 2]  146 	ldw	x, (0x02, sp)
+       00006B 1C 00 04         [ 2]  147 	addw	x, #0x0004
+                                     148 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 146: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
+       00006E 7B 09            [ 1]  149 	ld	a, (0x09, sp)
+       000070 A5 20            [ 1]  150 	bcp	a, #0x20
+       000072 27 06            [ 1]  151 	jreq	00111$
+                                     152 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+       000074 F6               [ 1]  153 	ld	a, (x)
+       000075 1A 08            [ 1]  154 	or	a, (0x08, sp)
+       000077 F7               [ 1]  155 	ld	(x), a
+       000078 20 04            [ 2]  156 	jra	00113$
+       00007A                        157 00111$:
+                                     158 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 151: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
+       00007A F6               [ 1]  159 	ld	a, (x)
+       00007B 14 01            [ 1]  160 	and	a, (0x01, sp)
+       00007D F7               [ 1]  161 	ld	(x), a
+       00007E                        162 00113$:
+       00007E 5B 03            [ 2]  163 	addw	sp, #3
+       000080 81               [ 4]  164 	ret
+                                     165 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 163: void GPIO_Write(GPIO_TypeDef* GPIOx, uint8_t GPIO_PortVal)
+                                     166 ;	-----------------------------------------
+                                     167 ;	 function GPIO_Write
+                                     168 ;	-----------------------------------------
+       000081                        169 _GPIO_Write:
+                                     170 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 165: GPIOx->ODR = GPIO_PortVal;
+       000081 1E 03            [ 2]  171 	ldw	x, (0x03, sp)
+       000083 7B 05            [ 1]  172 	ld	a, (0x05, sp)
+       000085 F7               [ 1]  173 	ld	(x), a
+       000086 81               [ 4]  174 	ret
+                                     175 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 185: void GPIO_WriteBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, BitAction GPIO_BitVal)
+                                     176 ;	-----------------------------------------
+                                     177 ;	 function GPIO_WriteBit
+                                     178 ;	-----------------------------------------
+       000087                        179 _GPIO_WriteBit:
+       000087 89               [ 2]  180 	pushw	x
+                                     181 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+       000088 1E 05            [ 2]  182 	ldw	x, (0x05, sp)
+       00008A A6 01            [ 1]  183 	ld	a, #0x01
+       00008C 6B 01            [ 1]  184 	ld	(0x01, sp), a
+       00008E 7B 07            [ 1]  185 	ld	a, (0x07, sp)
+       000090 27 05            [ 1]  186 	jreq	00111$
+       000092                        187 00110$:
+       000092 08 01            [ 1]  188 	sll	(0x01, sp)
+       000094 4A               [ 1]  189 	dec	a
+       000095 26 FB            [ 1]  190 	jrne	00110$
+       000097                        191 00111$:
+                                     192 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 191: if (GPIO_BitVal != RESET)
+       000097 0D 08            [ 1]  193 	tnz	(0x08, sp)
+       000099 27 06            [ 1]  194 	jreq	00102$
+                                     195 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+       00009B F6               [ 1]  196 	ld	a, (x)
+       00009C 1A 01            [ 1]  197 	or	a, (0x01, sp)
+       00009E F7               [ 1]  198 	ld	(x), a
+       00009F 20 09            [ 2]  199 	jra	00104$
+       0000A1                        200 00102$:
+                                     201 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 198: ClrBit(GPIOx->ODR, GPIO_Pin);
+       0000A1 F6               [ 1]  202 	ld	a, (x)
+       0000A2 6B 02            [ 1]  203 	ld	(0x02, sp), a
+       0000A4 7B 01            [ 1]  204 	ld	a, (0x01, sp)
+       0000A6 43               [ 1]  205 	cpl	a
+       0000A7 14 02            [ 1]  206 	and	a, (0x02, sp)
+       0000A9 F7               [ 1]  207 	ld	(x), a
+       0000AA                        208 00104$:
+       0000AA 85               [ 2]  209 	popw	x
+       0000AB 81               [ 4]  210 	ret
+                                     211 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 218: void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     212 ;	-----------------------------------------
+                                     213 ;	 function GPIO_SetBits
+                                     214 ;	-----------------------------------------
+       0000AC                        215 _GPIO_SetBits:
+                                     216 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 220: GPIOx->ODR |= GPIO_Pin;
+       0000AC 1E 03            [ 2]  217 	ldw	x, (0x03, sp)
+       0000AE F6               [ 1]  218 	ld	a, (x)
+       0000AF 1A 05            [ 1]  219 	or	a, (0x05, sp)
+       0000B1 F7               [ 1]  220 	ld	(x), a
+       0000B2 81               [ 4]  221 	ret
+                                     222 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 239: void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     223 ;	-----------------------------------------
+                                     224 ;	 function GPIO_ResetBits
+                                     225 ;	-----------------------------------------
+       0000B3                        226 _GPIO_ResetBits:
+       0000B3 88               [ 1]  227 	push	a
+                                     228 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 241: GPIOx->ODR &= (uint8_t)(~GPIO_Pin);
+       0000B4 1E 04            [ 2]  229 	ldw	x, (0x04, sp)
+       0000B6 F6               [ 1]  230 	ld	a, (x)
+       0000B7 6B 01            [ 1]  231 	ld	(0x01, sp), a
+       0000B9 7B 06            [ 1]  232 	ld	a, (0x06, sp)
+       0000BB 43               [ 1]  233 	cpl	a
+       0000BC 14 01            [ 1]  234 	and	a, (0x01, sp)
+       0000BE F7               [ 1]  235 	ld	(x), a
+       0000BF 84               [ 1]  236 	pop	a
+       0000C0 81               [ 4]  237 	ret
+                                     238 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 251: void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     239 ;	-----------------------------------------
+                                     240 ;	 function GPIO_ToggleBits
+                                     241 ;	-----------------------------------------
+       0000C1                        242 _GPIO_ToggleBits:
+                                     243 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 253: GPIOx->ODR ^= GPIO_Pin;
+       0000C1 1E 03            [ 2]  244 	ldw	x, (0x03, sp)
+       0000C3 F6               [ 1]  245 	ld	a, (x)
+       0000C4 18 05            [ 1]  246 	xor	a, (0x05, sp)
+       0000C6 F7               [ 1]  247 	ld	(x), a
+       0000C7 81               [ 4]  248 	ret
+                                     249 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 262: uint8_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
+                                     250 ;	-----------------------------------------
+                                     251 ;	 function GPIO_ReadInputData
+                                     252 ;	-----------------------------------------
+       0000C8                        253 _GPIO_ReadInputData:
+                                     254 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 264: return ((uint8_t)GPIOx->IDR);
+       0000C8 1E 03            [ 2]  255 	ldw	x, (0x03, sp)
+       0000CA E6 01            [ 1]  256 	ld	a, (0x1, x)
+       0000CC 81               [ 4]  257 	ret
+                                     258 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 273: uint8_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
+                                     259 ;	-----------------------------------------
+                                     260 ;	 function GPIO_ReadOutputData
+                                     261 ;	-----------------------------------------
+       0000CD                        262 _GPIO_ReadOutputData:
+                                     263 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 275: return ((uint8_t)GPIOx->ODR);
+       0000CD 1E 03            [ 2]  264 	ldw	x, (0x03, sp)
+       0000CF F6               [ 1]  265 	ld	a, (x)
+       0000D0 81               [ 4]  266 	ret
+                                     267 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 294: BitStatus GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+                                     268 ;	-----------------------------------------
+                                     269 ;	 function GPIO_ReadInputDataBit
+                                     270 ;	-----------------------------------------
+       0000D1                        271 _GPIO_ReadInputDataBit:
+                                     272 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 296: return ((BitStatus)(GPIOx->IDR & (uint8_t)GPIO_Pin));
+       0000D1 1E 03            [ 2]  273 	ldw	x, (0x03, sp)
+       0000D3 E6 01            [ 1]  274 	ld	a, (0x1, x)
+       0000D5 14 05            [ 1]  275 	and	a, (0x05, sp)
+       0000D7 81               [ 4]  276 	ret
+                                     277 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 315: BitStatus GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+                                     278 ;	-----------------------------------------
+                                     279 ;	 function GPIO_ReadOutputDataBit
+                                     280 ;	-----------------------------------------
+       0000D8                        281 _GPIO_ReadOutputDataBit:
+                                     282 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 317: return ((BitStatus)(GPIOx->ODR & (uint8_t)GPIO_Pin));
+       0000D8 1E 03            [ 2]  283 	ldw	x, (0x03, sp)
+       0000DA F6               [ 1]  284 	ld	a, (x)
+       0000DB 14 05            [ 1]  285 	and	a, (0x05, sp)
+       0000DD 81               [ 4]  286 	ret
+                                     287 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 337: void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin, FunctionalState NewState)
+                                     288 ;	-----------------------------------------
+                                     289 ;	 function GPIO_ExternalPullUpConfig
+                                     290 ;	-----------------------------------------
+       0000DE                        291 _GPIO_ExternalPullUpConfig:
+       0000DE 88               [ 1]  292 	push	a
+                                     293 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+       0000DF 1E 04            [ 2]  294 	ldw	x, (0x04, sp)
+       0000E1 1C 00 03         [ 2]  295 	addw	x, #0x0003
+                                     296 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 343: if (NewState != DISABLE) /* External Pull-Up Set*/
+       0000E4 0D 07            [ 1]  297 	tnz	(0x07, sp)
+       0000E6 27 06            [ 1]  298 	jreq	00102$
+                                     299 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+       0000E8 F6               [ 1]  300 	ld	a, (x)
+       0000E9 1A 06            [ 1]  301 	or	a, (0x06, sp)
+       0000EB F7               [ 1]  302 	ld	(x), a
+       0000EC 20 09            [ 2]  303 	jra	00104$
+       0000EE                        304 00102$:
+                                     305 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 348: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+       0000EE F6               [ 1]  306 	ld	a, (x)
+       0000EF 6B 01            [ 1]  307 	ld	(0x01, sp), a
+       0000F1 7B 06            [ 1]  308 	ld	a, (0x06, sp)
+       0000F3 43               [ 1]  309 	cpl	a
+       0000F4 14 01            [ 1]  310 	and	a, (0x01, sp)
+       0000F6 F7               [ 1]  311 	ld	(x), a
+       0000F7                        312 00104$:
+       0000F7 84               [ 1]  313 	pop	a
+       0000F8 81               [ 4]  314 	ret
+                                     315 	.area CODE
+                                     316 	.area INITIALIZER
+                                     317 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rel ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rel
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rel	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rel	2017-08-15 21:24:53.569917230 +0200
***************
*** 0 ****
--- 1,147 ----
+ XH3
+ H A areas D global symbols
+ M stm8l10x_gpio
+ O -mstm8
+ S .__.ABS. Def000000
+ A _CODE size 0 flags 0 addr 0
+ A DATA size 0 flags 0 addr 0
+ A INITIALIZED size 0 flags 0 addr 0
+ A DABS size 0 flags 8 addr 0
+ A HOME size 0 flags 0 addr 0
+ A GSINIT size 0 flags 0 addr 0
+ A GSFINAL size 0 flags 0 addr 0
+ A CODE size F9 flags 0 addr 0
+ S _GPIO_Init Def00001B
+ S _GPIO_ResetBits Def0000B3
+ S _GPIO_ReadInputDataBit Def0000D1
+ S _GPIO_ReadOutputDataBit Def0000D8
+ S _GPIO_WriteBit Def000087
+ S _GPIO_ToggleBits Def0000C1
+ S _GPIO_ExternalPullUpConfig Def0000DE
+ S _GPIO_DeInit Def000000
+ S _GPIO_SetBits Def0000AC
+ S _GPIO_ReadInputData Def0000C8
+ S _GPIO_ReadOutputData Def0000CD
+ S _GPIO_Write Def000081
+ A INITIALIZER size 0 flags 0 addr 0
+ A CABS size 0 flags 8 addr 0
+ T 00 00 00
+ R 00 00 00 07
+ T 00 00 00 89 16 05 17 01 1E 01 7F 1E 01 5C 5C 7F
+ R 00 00 00 07
+ T 00 00 0D 1E 01 1C 00 03 7F 1E 01 1C 00 04 7F 85
+ R 00 00 00 07
+ T 00 00 1A 81
+ R 00 00 00 07
+ T 00 00 1B
+ R 00 00 00 07
+ T 00 00 1B 52 03 16 06 17 02 7B 08 43 6B 01 1E 02
+ R 00 00 00 07
+ T 00 00 28 5C 5C 0D 09 2A 22 7B 09 A5 10 27 0C 16
+ R 00 00 00 07
+ T 00 00 35 02 90 F6 1A 08 16 02 90 F7 20 0A
+ R 00 00 00 07
+ T 00 00 40
+ R 00 00 00 07
+ T 00 00 40 16 02 90 F6 14 01 16 02 90 F7
+ R 00 00 00 07
+ T 00 00 4A
+ R 00 00 00 07
+ T 00 00 4A F6 1A 08 F7 20 04
+ R 00 00 00 07
+ T 00 00 50
+ R 00 00 00 07
+ T 00 00 50 F6 14 01 F7
+ R 00 00 00 07
+ T 00 00 54
+ R 00 00 00 07
+ T 00 00 54 1E 02 1C 00 03 7B 09 A5 40 27 06 F6 1A
+ R 00 00 00 07
+ T 00 00 61 08 F7 20 04
+ R 00 00 00 07
+ T 00 00 65
+ R 00 00 00 07
+ T 00 00 65 F6 14 01 F7
+ R 00 00 00 07
+ T 00 00 69
+ R 00 00 00 07
+ T 00 00 69 1E 02 1C 00 04 7B 09 A5 20 27 06 F6 1A
+ R 00 00 00 07
+ T 00 00 76 08 F7 20 04
+ R 00 00 00 07
+ T 00 00 7A
+ R 00 00 00 07
+ T 00 00 7A F6 14 01 F7
+ R 00 00 00 07
+ T 00 00 7E
+ R 00 00 00 07
+ T 00 00 7E 5B 03 81
+ R 00 00 00 07
+ T 00 00 81
+ R 00 00 00 07
+ T 00 00 81 1E 03 7B 05 F7 81
+ R 00 00 00 07
+ T 00 00 87
+ R 00 00 00 07
+ T 00 00 87 89 1E 05 A6 01 6B 01 7B 07 27 05
+ R 00 00 00 07
+ T 00 00 92
+ R 00 00 00 07
+ T 00 00 92 08 01 4A 26 FB
+ R 00 00 00 07
+ T 00 00 97
+ R 00 00 00 07
+ T 00 00 97 0D 08 27 06 F6 1A 01 F7 20 09
+ R 00 00 00 07
+ T 00 00 A1
+ R 00 00 00 07
+ T 00 00 A1 F6 6B 02 7B 01 43 14 02 F7
+ R 00 00 00 07
+ T 00 00 AA
+ R 00 00 00 07
+ T 00 00 AA 85 81
+ R 00 00 00 07
+ T 00 00 AC
+ R 00 00 00 07
+ T 00 00 AC 1E 03 F6 1A 05 F7 81
+ R 00 00 00 07
+ T 00 00 B3
+ R 00 00 00 07
+ T 00 00 B3 88 1E 04 F6 6B 01 7B 06 43 14 01 F7 84
+ R 00 00 00 07
+ T 00 00 C0 81
+ R 00 00 00 07
+ T 00 00 C1
+ R 00 00 00 07
+ T 00 00 C1 1E 03 F6 18 05 F7 81
+ R 00 00 00 07
+ T 00 00 C8
+ R 00 00 00 07
+ T 00 00 C8 1E 03 E6 01 81
+ R 00 00 00 07
+ T 00 00 CD
+ R 00 00 00 07
+ T 00 00 CD 1E 03 F6 81
+ R 00 00 00 07
+ T 00 00 D1
+ R 00 00 00 07
+ T 00 00 D1 1E 03 E6 01 14 05 81
+ R 00 00 00 07
+ T 00 00 D8
+ R 00 00 00 07
+ T 00 00 D8 1E 03 F6 14 05 81
+ R 00 00 00 07
+ T 00 00 DE
+ R 00 00 00 07
+ T 00 00 DE 88 1E 04 1C 00 03 0D 07 27 06 F6 1A 06
+ R 00 00 00 07
+ T 00 00 EB F7 20 09
+ R 00 00 00 07
+ T 00 00 EE
+ R 00 00 00 07
+ T 00 00 EE F6 6B 01 7B 06 43 14 01 F7
+ R 00 00 00 07
+ T 00 00 F7
+ R 00 00 00 07
+ T 00 00 F7 84 81
+ R 00 00 00 07
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.rst	2017-08-15 21:24:53.593917153 +0200
***************
*** 0 ****
--- 1,317 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module stm8l10x_gpio
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _GPIO_DeInit
+                                      12 	.globl _GPIO_Init
+                                      13 	.globl _GPIO_Write
+                                      14 	.globl _GPIO_WriteBit
+                                      15 	.globl _GPIO_SetBits
+                                      16 	.globl _GPIO_ResetBits
+                                      17 	.globl _GPIO_ToggleBits
+                                      18 	.globl _GPIO_ReadInputData
+                                      19 	.globl _GPIO_ReadOutputData
+                                      20 	.globl _GPIO_ReadInputDataBit
+                                      21 	.globl _GPIO_ReadOutputDataBit
+                                      22 	.globl _GPIO_ExternalPullUpConfig
+                                      23 ;--------------------------------------------------------
+                                      24 ; ram data
+                                      25 ;--------------------------------------------------------
+                                      26 	.area DATA
+                                      27 ;--------------------------------------------------------
+                                      28 ; ram data
+                                      29 ;--------------------------------------------------------
+                                      30 	.area INITIALIZED
+                                      31 ;--------------------------------------------------------
+                                      32 ; absolute external ram data
+                                      33 ;--------------------------------------------------------
+                                      34 	.area DABS (ABS)
+                                      35 ;--------------------------------------------------------
+                                      36 ; global & static initialisations
+                                      37 ;--------------------------------------------------------
+                                      38 	.area HOME
+                                      39 	.area GSINIT
+                                      40 	.area GSFINAL
+                                      41 	.area GSINIT
+                                      42 ;--------------------------------------------------------
+                                      43 ; Home
+                                      44 ;--------------------------------------------------------
+                                      45 	.area HOME
+                                      46 	.area HOME
+                                      47 ;--------------------------------------------------------
+                                      48 ; code
+                                      49 ;--------------------------------------------------------
+                                      50 	.area CODE
+                                      51 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 57: void GPIO_DeInit(GPIO_TypeDef* GPIOx)
+                                      52 ;	-----------------------------------------
+                                      53 ;	 function GPIO_DeInit
+                                      54 ;	-----------------------------------------
+       0080BA                         55 _GPIO_DeInit:
+       0080BA 89               [ 2]   56 	pushw	x
+                                      57 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 59: GPIOx->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
+       0080BB 16 05            [ 2]   58 	ldw	y, (0x05, sp)
+       0080BD 17 01            [ 2]   59 	ldw	(0x01, sp), y
+       0080BF 1E 01            [ 2]   60 	ldw	x, (0x01, sp)
+       0080C1 7F               [ 1]   61 	clr	(x)
+                                      62 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 60: GPIOx->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
+       0080C2 1E 01            [ 2]   63 	ldw	x, (0x01, sp)
+       0080C4 5C               [ 2]   64 	incw	x
+       0080C5 5C               [ 2]   65 	incw	x
+       0080C6 7F               [ 1]   66 	clr	(x)
+                                      67 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 61: GPIOx->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
+       0080C7 1E 01            [ 2]   68 	ldw	x, (0x01, sp)
+       0080C9 1C 00 03         [ 2]   69 	addw	x, #0x0003
+       0080CC 7F               [ 1]   70 	clr	(x)
+                                      71 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 62: GPIOx->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
+       0080CD 1E 01            [ 2]   72 	ldw	x, (0x01, sp)
+       0080CF 1C 00 04         [ 2]   73 	addw	x, #0x0004
+       0080D2 7F               [ 1]   74 	clr	(x)
+       0080D3 85               [ 2]   75 	popw	x
+       0080D4 81               [ 4]   76 	ret
+                                      77 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 98: void GPIO_Init(GPIO_TypeDef* GPIOx,
+                                      78 ;	-----------------------------------------
+                                      79 ;	 function GPIO_Init
+                                      80 ;	-----------------------------------------
+       0080D5                         81 _GPIO_Init:
+       0080D5 52 03            [ 2]   82 	sub	sp, #3
+                                      83 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+       0080D7 16 06            [ 2]   84 	ldw	y, (0x06, sp)
+       0080D9 17 02            [ 2]   85 	ldw	(0x02, sp), y
+                                      86 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+       0080DB 7B 08            [ 1]   87 	ld	a, (0x08, sp)
+       0080DD 43               [ 1]   88 	cpl	a
+       0080DE 6B 01            [ 1]   89 	ld	(0x01, sp), a
+                                      90 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+       0080E0 1E 02            [ 2]   91 	ldw	x, (0x02, sp)
+       0080E2 5C               [ 2]   92 	incw	x
+       0080E3 5C               [ 2]   93 	incw	x
+                                      94 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 113: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
+       0080E4 0D 09            [ 1]   95 	tnz	(0x09, sp)
+       0080E6 2A 22            [ 1]   96 	jrpl	00105$
+                                      97 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 115: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
+       0080E8 7B 09            [ 1]   98 	ld	a, (0x09, sp)
+       0080EA A5 10            [ 1]   99 	bcp	a, #0x10
+       0080EC 27 0C            [ 1]  100 	jreq	00102$
+                                     101 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 117: GPIOx->ODR |= GPIO_Pin;
+       0080EE 16 02            [ 2]  102 	ldw	y, (0x02, sp)
+       0080F0 90 F6            [ 1]  103 	ld	a, (y)
+       0080F2 1A 08            [ 1]  104 	or	a, (0x08, sp)
+       0080F4 16 02            [ 2]  105 	ldw	y, (0x02, sp)
+       0080F6 90 F7            [ 1]  106 	ld	(y), a
+       0080F8 20 0A            [ 2]  107 	jra	00103$
+       0080FA                        108 00102$:
+                                     109 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 120: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
+       0080FA 16 02            [ 2]  110 	ldw	y, (0x02, sp)
+       0080FC 90 F6            [ 1]  111 	ld	a, (y)
+       0080FE 14 01            [ 1]  112 	and	a, (0x01, sp)
+       008100 16 02            [ 2]  113 	ldw	y, (0x02, sp)
+       008102 90 F7            [ 1]  114 	ld	(y), a
+       008104                        115 00103$:
+                                     116 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 123: GPIOx->DDR |= GPIO_Pin;
+       008104 F6               [ 1]  117 	ld	a, (x)
+       008105 1A 08            [ 1]  118 	or	a, (0x08, sp)
+       008107 F7               [ 1]  119 	ld	(x), a
+       008108 20 04            [ 2]  120 	jra	00106$
+       00810A                        121 00105$:
+                                     122 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 127: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
+       00810A F6               [ 1]  123 	ld	a, (x)
+       00810B 14 01            [ 1]  124 	and	a, (0x01, sp)
+       00810D F7               [ 1]  125 	ld	(x), a
+       00810E                        126 00106$:
+                                     127 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+       00810E 1E 02            [ 2]  128 	ldw	x, (0x02, sp)
+       008110 1C 00 03         [ 2]  129 	addw	x, #0x0003
+                                     130 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 134: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
+       008113 7B 09            [ 1]  131 	ld	a, (0x09, sp)
+       008115 A5 40            [ 1]  132 	bcp	a, #0x40
+       008117 27 06            [ 1]  133 	jreq	00108$
+                                     134 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 136: GPIOx->CR1 |= GPIO_Pin;
+       008119 F6               [ 1]  135 	ld	a, (x)
+       00811A 1A 08            [ 1]  136 	or	a, (0x08, sp)
+       00811C F7               [ 1]  137 	ld	(x), a
+       00811D 20 04            [ 2]  138 	jra	00109$
+       00811F                        139 00108$:
+                                     140 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 139: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+       00811F F6               [ 1]  141 	ld	a, (x)
+       008120 14 01            [ 1]  142 	and	a, (0x01, sp)
+       008122 F7               [ 1]  143 	ld	(x), a
+       008123                        144 00109$:
+                                     145 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+       008123 1E 02            [ 2]  146 	ldw	x, (0x02, sp)
+       008125 1C 00 04         [ 2]  147 	addw	x, #0x0004
+                                     148 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 146: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
+       008128 7B 09            [ 1]  149 	ld	a, (0x09, sp)
+       00812A A5 20            [ 1]  150 	bcp	a, #0x20
+       00812C 27 06            [ 1]  151 	jreq	00111$
+                                     152 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 148: GPIOx->CR2 |= GPIO_Pin;
+       00812E F6               [ 1]  153 	ld	a, (x)
+       00812F 1A 08            [ 1]  154 	or	a, (0x08, sp)
+       008131 F7               [ 1]  155 	ld	(x), a
+       008132 20 04            [ 2]  156 	jra	00113$
+       008134                        157 00111$:
+                                     158 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 151: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
+       008134 F6               [ 1]  159 	ld	a, (x)
+       008135 14 01            [ 1]  160 	and	a, (0x01, sp)
+       008137 F7               [ 1]  161 	ld	(x), a
+       008138                        162 00113$:
+       008138 5B 03            [ 2]  163 	addw	sp, #3
+       00813A 81               [ 4]  164 	ret
+                                     165 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 163: void GPIO_Write(GPIO_TypeDef* GPIOx, uint8_t GPIO_PortVal)
+                                     166 ;	-----------------------------------------
+                                     167 ;	 function GPIO_Write
+                                     168 ;	-----------------------------------------
+       00813B                        169 _GPIO_Write:
+                                     170 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 165: GPIOx->ODR = GPIO_PortVal;
+       00813B 1E 03            [ 2]  171 	ldw	x, (0x03, sp)
+       00813D 7B 05            [ 1]  172 	ld	a, (0x05, sp)
+       00813F F7               [ 1]  173 	ld	(x), a
+       008140 81               [ 4]  174 	ret
+                                     175 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 185: void GPIO_WriteBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, BitAction GPIO_BitVal)
+                                     176 ;	-----------------------------------------
+                                     177 ;	 function GPIO_WriteBit
+                                     178 ;	-----------------------------------------
+       008141                        179 _GPIO_WriteBit:
+       008141 89               [ 2]  180 	pushw	x
+                                     181 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+       008142 1E 05            [ 2]  182 	ldw	x, (0x05, sp)
+       008144 A6 01            [ 1]  183 	ld	a, #0x01
+       008146 6B 01            [ 1]  184 	ld	(0x01, sp), a
+       008148 7B 07            [ 1]  185 	ld	a, (0x07, sp)
+       00814A 27 05            [ 1]  186 	jreq	00111$
+       00814C                        187 00110$:
+       00814C 08 01            [ 1]  188 	sll	(0x01, sp)
+       00814E 4A               [ 1]  189 	dec	a
+       00814F 26 FB            [ 1]  190 	jrne	00110$
+       008151                        191 00111$:
+                                     192 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 191: if (GPIO_BitVal != RESET)
+       008151 0D 08            [ 1]  193 	tnz	(0x08, sp)
+       008153 27 06            [ 1]  194 	jreq	00102$
+                                     195 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 193: SetBit(GPIOx->ODR, GPIO_Pin);
+       008155 F6               [ 1]  196 	ld	a, (x)
+       008156 1A 01            [ 1]  197 	or	a, (0x01, sp)
+       008158 F7               [ 1]  198 	ld	(x), a
+       008159 20 09            [ 2]  199 	jra	00104$
+       00815B                        200 00102$:
+                                     201 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 198: ClrBit(GPIOx->ODR, GPIO_Pin);
+       00815B F6               [ 1]  202 	ld	a, (x)
+       00815C 6B 02            [ 1]  203 	ld	(0x02, sp), a
+       00815E 7B 01            [ 1]  204 	ld	a, (0x01, sp)
+       008160 43               [ 1]  205 	cpl	a
+       008161 14 02            [ 1]  206 	and	a, (0x02, sp)
+       008163 F7               [ 1]  207 	ld	(x), a
+       008164                        208 00104$:
+       008164 85               [ 2]  209 	popw	x
+       008165 81               [ 4]  210 	ret
+                                     211 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 218: void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     212 ;	-----------------------------------------
+                                     213 ;	 function GPIO_SetBits
+                                     214 ;	-----------------------------------------
+       008166                        215 _GPIO_SetBits:
+                                     216 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 220: GPIOx->ODR |= GPIO_Pin;
+       008166 1E 03            [ 2]  217 	ldw	x, (0x03, sp)
+       008168 F6               [ 1]  218 	ld	a, (x)
+       008169 1A 05            [ 1]  219 	or	a, (0x05, sp)
+       00816B F7               [ 1]  220 	ld	(x), a
+       00816C 81               [ 4]  221 	ret
+                                     222 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 239: void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     223 ;	-----------------------------------------
+                                     224 ;	 function GPIO_ResetBits
+                                     225 ;	-----------------------------------------
+       00816D                        226 _GPIO_ResetBits:
+       00816D 88               [ 1]  227 	push	a
+                                     228 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 241: GPIOx->ODR &= (uint8_t)(~GPIO_Pin);
+       00816E 1E 04            [ 2]  229 	ldw	x, (0x04, sp)
+       008170 F6               [ 1]  230 	ld	a, (x)
+       008171 6B 01            [ 1]  231 	ld	(0x01, sp), a
+       008173 7B 06            [ 1]  232 	ld	a, (0x06, sp)
+       008175 43               [ 1]  233 	cpl	a
+       008176 14 01            [ 1]  234 	and	a, (0x01, sp)
+       008178 F7               [ 1]  235 	ld	(x), a
+       008179 84               [ 1]  236 	pop	a
+       00817A 81               [ 4]  237 	ret
+                                     238 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 251: void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin)
+                                     239 ;	-----------------------------------------
+                                     240 ;	 function GPIO_ToggleBits
+                                     241 ;	-----------------------------------------
+       00817B                        242 _GPIO_ToggleBits:
+                                     243 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 253: GPIOx->ODR ^= GPIO_Pin;
+       00817B 1E 03            [ 2]  244 	ldw	x, (0x03, sp)
+       00817D F6               [ 1]  245 	ld	a, (x)
+       00817E 18 05            [ 1]  246 	xor	a, (0x05, sp)
+       008180 F7               [ 1]  247 	ld	(x), a
+       008181 81               [ 4]  248 	ret
+                                     249 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 262: uint8_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
+                                     250 ;	-----------------------------------------
+                                     251 ;	 function GPIO_ReadInputData
+                                     252 ;	-----------------------------------------
+       008182                        253 _GPIO_ReadInputData:
+                                     254 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 264: return ((uint8_t)GPIOx->IDR);
+       008182 1E 03            [ 2]  255 	ldw	x, (0x03, sp)
+       008184 E6 01            [ 1]  256 	ld	a, (0x1, x)
+       008186 81               [ 4]  257 	ret
+                                     258 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 273: uint8_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
+                                     259 ;	-----------------------------------------
+                                     260 ;	 function GPIO_ReadOutputData
+                                     261 ;	-----------------------------------------
+       008187                        262 _GPIO_ReadOutputData:
+                                     263 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 275: return ((uint8_t)GPIOx->ODR);
+       008187 1E 03            [ 2]  264 	ldw	x, (0x03, sp)
+       008189 F6               [ 1]  265 	ld	a, (x)
+       00818A 81               [ 4]  266 	ret
+                                     267 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 294: BitStatus GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+                                     268 ;	-----------------------------------------
+                                     269 ;	 function GPIO_ReadInputDataBit
+                                     270 ;	-----------------------------------------
+       00818B                        271 _GPIO_ReadInputDataBit:
+                                     272 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 296: return ((BitStatus)(GPIOx->IDR & (uint8_t)GPIO_Pin));
+       00818B 1E 03            [ 2]  273 	ldw	x, (0x03, sp)
+       00818D E6 01            [ 1]  274 	ld	a, (0x1, x)
+       00818F 14 05            [ 1]  275 	and	a, (0x05, sp)
+       008191 81               [ 4]  276 	ret
+                                     277 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 315: BitStatus GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
+                                     278 ;	-----------------------------------------
+                                     279 ;	 function GPIO_ReadOutputDataBit
+                                     280 ;	-----------------------------------------
+       008192                        281 _GPIO_ReadOutputDataBit:
+                                     282 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 317: return ((BitStatus)(GPIOx->ODR & (uint8_t)GPIO_Pin));
+       008192 1E 03            [ 2]  283 	ldw	x, (0x03, sp)
+       008194 F6               [ 1]  284 	ld	a, (x)
+       008195 14 05            [ 1]  285 	and	a, (0x05, sp)
+       008197 81               [ 4]  286 	ret
+                                     287 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 337: void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, uint8_t GPIO_Pin, FunctionalState NewState)
+                                     288 ;	-----------------------------------------
+                                     289 ;	 function GPIO_ExternalPullUpConfig
+                                     290 ;	-----------------------------------------
+       008198                        291 _GPIO_ExternalPullUpConfig:
+       008198 88               [ 1]  292 	push	a
+                                     293 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+       008199 1E 04            [ 2]  294 	ldw	x, (0x04, sp)
+       00819B 1C 00 03         [ 2]  295 	addw	x, #0x0003
+                                     296 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 343: if (NewState != DISABLE) /* External Pull-Up Set*/
+       00819E 0D 07            [ 1]  297 	tnz	(0x07, sp)
+       0081A0 27 06            [ 1]  298 	jreq	00102$
+                                     299 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 345: GPIOx->CR1 |= GPIO_Pin;
+       0081A2 F6               [ 1]  300 	ld	a, (x)
+       0081A3 1A 06            [ 1]  301 	or	a, (0x06, sp)
+       0081A5 F7               [ 1]  302 	ld	(x), a
+       0081A6 20 09            [ 2]  303 	jra	00104$
+       0081A8                        304 00102$:
+                                     305 ;	../../../Libraries/STM8L10x_StdPeriph_Driver/src/stm8l10x_gpio.c: 348: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
+       0081A8 F6               [ 1]  306 	ld	a, (x)
+       0081A9 6B 01            [ 1]  307 	ld	(0x01, sp), a
+       0081AB 7B 06            [ 1]  308 	ld	a, (0x06, sp)
+       0081AD 43               [ 1]  309 	cpl	a
+       0081AE 14 01            [ 1]  310 	and	a, (0x01, sp)
+       0081B0 F7               [ 1]  311 	ld	(x), a
+       0081B1                        312 00104$:
+       0081B1 84               [ 1]  313 	pop	a
+       0081B2 81               [ 4]  314 	ret
+                                     315 	.area CODE
+                                     316 	.area INITIALIZER
+                                     317 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.sym ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.sym
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.sym	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_gpio.sym	2017-08-15 21:24:53.569917230 +0200
***************
*** 0 ****
--- 1,39 ----
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 1.
+ Hexadecimal [24-Bits]
+ 
+ Symbol Table
+ 
+     .__.$$$.                                                    =  002710 L
+     .__.ABS.                                                    =  000000 G
+     .__.CPU.                                                    =  000000 L
+     .__.H$L.                                                    =  000001 L
+   7 _GPIO_DeInit                                                   000000 GR
+   7 _GPIO_ExternalPullUpConfig                                     0000DE GR
+   7 _GPIO_Init                                                     00001B GR
+   7 _GPIO_ReadInputData                                            0000C8 GR
+   7 _GPIO_ReadInputDataBit                                         0000D1 GR
+   7 _GPIO_ReadOutputData                                           0000CD GR
+   7 _GPIO_ReadOutputDataBit                                        0000D8 GR
+   7 _GPIO_ResetBits                                                0000B3 GR
+   7 _GPIO_SetBits                                                  0000AC GR
+   7 _GPIO_ToggleBits                                               0000C1 GR
+   7 _GPIO_Write                                                    000081 GR
+   7 _GPIO_WriteBit                                                 000087 GR
+ 
+ 
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 2.
+ Hexadecimal [24-Bits]
+ 
+ Area Table
+ 
+    0 _CODE                                      size      0   flags    0
+    1 DATA                                       size      0   flags    0
+    2 INITIALIZED                                size      0   flags    0
+    3 DABS                                       size      0   flags    8
+    4 HOME                                       size      0   flags    0
+    5 GSINIT                                     size      0   flags    0
+    6 GSFINAL                                    size      0   flags    0
+    7 CODE                                       size     F9   flags    0
+    8 INITIALIZER                                size      0   flags    0
+    9 CABS                                       size      0   flags    8
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.hex ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.hex
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.hex	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.hex	2017-08-15 21:24:53.593917153 +0200
***************
*** 0 ****
--- 1,16 ----
+ :2080000082008083820000008200000082000000820000008200000082000000820000004D
+ :20802000820000008200000082000000820000008200000082000000820000008200000030
+ :20804000820000008200000082000000820000008200000082000000820000008200000010
+ :208060008200000082000000820000008200000082000000820000008200000082000000F0
+ :1D808300AE00002707724F00005A26F9AE00002709D681B2D700005A26F7CC8080C9
+ :03808000CC80A011
+ :2080A00020FE81808080808080808080808080808080808080808080808089160517011EC7
+ :2080C000017F1E015C5C7F1E011C00037F1E011C00047F85815203160617027B08436B018D
+ :2080E0001E025C5C0D092A227B09A510270C160290F61A08160290F7200A160290F614019E
+ :20810000160290F7F61A08F72004F61401F71E021C00037B09A5402706F61A08F72004F68D
+ :208120001401F71E021C00047B09A5202706F61A08F72004F61401F75B03811E037B05F7D1
+ :2081400081891E05A6016B017B07270508014A26FB0D082706F61A01F72009F66B027B016B
+ :20816000431402F785811E03F61A05F781881E04F66B017B06431401F784811E03F61805E6
+ :20818000F7811E03E601811E03F6811E03E6011405811E03F6140581881E041C00030D0716
+ :1381A0002706F61A06F72009F66B017B06431401F7848132
+ :00000001FF
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.asm ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.asm
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.asm	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.asm	2017-08-15 21:23:08.254256056 +0200
***************
*** 0 ****
--- 1,225 ----
+ ;--------------------------------------------------------
+ ; File Created by SDCC : free open source ANSI-C Compiler
+ ; Version 3.6.0 #9615 (Linux)
+ ;--------------------------------------------------------
+ 	.module stm8l10x_it
+ 	.optsdcc -mstm8
+ 	
+ ;--------------------------------------------------------
+ ; Public variables in this module
+ ;--------------------------------------------------------
+ 	.globl _I2C_IRQHandler
+ 	.globl _USART_RX_IRQHandler
+ 	.globl _USART_TX_IRQHandler
+ 	.globl _SPI_IRQHandler
+ 	.globl _TIM4_UPD_OVF_IRQHandler
+ 	.globl _TIM3_CAP_IRQHandler
+ 	.globl _TIM3_UPD_OVF_TRG_BRK_IRQHandler
+ 	.globl _TIM2_CAP_IRQHandler
+ 	.globl _TIM2_UPD_OVF_TRG_BRK_IRQHandler
+ 	.globl _COMP_IRQHandler
+ 	.globl _EXTI7_IRQHandler
+ 	.globl _EXTI6_IRQHandler
+ 	.globl _EXTI5_IRQHandler
+ 	.globl _EXTI4_IRQHandler
+ 	.globl _EXTI3_IRQHandler
+ 	.globl _EXTI2_IRQHandler
+ 	.globl _EXTI1_IRQHandler
+ 	.globl _EXTI0_IRQHandler
+ 	.globl _EXTID_IRQHandler
+ 	.globl _EXTIB_IRQHandler
+ 	.globl _AWU_IRQHandler
+ 	.globl _FLASH_IRQHandler
+ 	.globl _TRAP_IRQHandler
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area DATA
+ ;--------------------------------------------------------
+ ; ram data
+ ;--------------------------------------------------------
+ 	.area INITIALIZED
+ ;--------------------------------------------------------
+ ; absolute external ram data
+ ;--------------------------------------------------------
+ 	.area DABS (ABS)
+ ;--------------------------------------------------------
+ ; global & static initialisations
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area GSINIT
+ 	.area GSFINAL
+ 	.area GSINIT
+ ;--------------------------------------------------------
+ ; Home
+ ;--------------------------------------------------------
+ 	.area HOME
+ 	.area HOME
+ ;--------------------------------------------------------
+ ; code
+ ;--------------------------------------------------------
+ 	.area CODE
+ ;	../stm8l10x_it.c: 61: INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
+ ;	-----------------------------------------
+ ;	 function TRAP_IRQHandler
+ ;	-----------------------------------------
+ _TRAP_IRQHandler:
+ ;	../stm8l10x_it.c: 66: }
+ 	iret
+ ;	../stm8l10x_it.c: 73: INTERRUPT_HANDLER(FLASH_IRQHandler,1)
+ ;	-----------------------------------------
+ ;	 function FLASH_IRQHandler
+ ;	-----------------------------------------
+ _FLASH_IRQHandler:
+ ;	../stm8l10x_it.c: 78: }
+ 	iret
+ ;	../stm8l10x_it.c: 85: INTERRUPT_HANDLER(AWU_IRQHandler,4)
+ ;	-----------------------------------------
+ ;	 function AWU_IRQHandler
+ ;	-----------------------------------------
+ _AWU_IRQHandler:
+ ;	../stm8l10x_it.c: 90: }
+ 	iret
+ ;	../stm8l10x_it.c: 97: INTERRUPT_HANDLER(EXTIB_IRQHandler, 6)
+ ;	-----------------------------------------
+ ;	 function EXTIB_IRQHandler
+ ;	-----------------------------------------
+ _EXTIB_IRQHandler:
+ ;	../stm8l10x_it.c: 102: }
+ 	iret
+ ;	../stm8l10x_it.c: 109: INTERRUPT_HANDLER(EXTID_IRQHandler, 7)
+ ;	-----------------------------------------
+ ;	 function EXTID_IRQHandler
+ ;	-----------------------------------------
+ _EXTID_IRQHandler:
+ ;	../stm8l10x_it.c: 114: }
+ 	iret
+ ;	../stm8l10x_it.c: 121: INTERRUPT_HANDLER(EXTI0_IRQHandler, 8)
+ ;	-----------------------------------------
+ ;	 function EXTI0_IRQHandler
+ ;	-----------------------------------------
+ _EXTI0_IRQHandler:
+ ;	../stm8l10x_it.c: 126: }
+ 	iret
+ ;	../stm8l10x_it.c: 133: INTERRUPT_HANDLER(EXTI1_IRQHandler, 9)
+ ;	-----------------------------------------
+ ;	 function EXTI1_IRQHandler
+ ;	-----------------------------------------
+ _EXTI1_IRQHandler:
+ ;	../stm8l10x_it.c: 138: }
+ 	iret
+ ;	../stm8l10x_it.c: 145: INTERRUPT_HANDLER(EXTI2_IRQHandler, 10)
+ ;	-----------------------------------------
+ ;	 function EXTI2_IRQHandler
+ ;	-----------------------------------------
+ _EXTI2_IRQHandler:
+ ;	../stm8l10x_it.c: 150: }
+ 	iret
+ ;	../stm8l10x_it.c: 157: INTERRUPT_HANDLER(EXTI3_IRQHandler, 11)
+ ;	-----------------------------------------
+ ;	 function EXTI3_IRQHandler
+ ;	-----------------------------------------
+ _EXTI3_IRQHandler:
+ ;	../stm8l10x_it.c: 162: }
+ 	iret
+ ;	../stm8l10x_it.c: 169: INTERRUPT_HANDLER(EXTI4_IRQHandler, 12)
+ ;	-----------------------------------------
+ ;	 function EXTI4_IRQHandler
+ ;	-----------------------------------------
+ _EXTI4_IRQHandler:
+ ;	../stm8l10x_it.c: 174: }
+ 	iret
+ ;	../stm8l10x_it.c: 181: INTERRUPT_HANDLER(EXTI5_IRQHandler, 13)
+ ;	-----------------------------------------
+ ;	 function EXTI5_IRQHandler
+ ;	-----------------------------------------
+ _EXTI5_IRQHandler:
+ ;	../stm8l10x_it.c: 186: }
+ 	iret
+ ;	../stm8l10x_it.c: 193: INTERRUPT_HANDLER(EXTI6_IRQHandler, 14)
+ ;	-----------------------------------------
+ ;	 function EXTI6_IRQHandler
+ ;	-----------------------------------------
+ _EXTI6_IRQHandler:
+ ;	../stm8l10x_it.c: 199: }
+ 	iret
+ ;	../stm8l10x_it.c: 206: INTERRUPT_HANDLER(EXTI7_IRQHandler, 15)
+ ;	-----------------------------------------
+ ;	 function EXTI7_IRQHandler
+ ;	-----------------------------------------
+ _EXTI7_IRQHandler:
+ ;	../stm8l10x_it.c: 211: }
+ 	iret
+ ;	../stm8l10x_it.c: 218: INTERRUPT_HANDLER(COMP_IRQHandler, 18)
+ ;	-----------------------------------------
+ ;	 function COMP_IRQHandler
+ ;	-----------------------------------------
+ _COMP_IRQHandler:
+ ;	../stm8l10x_it.c: 223: }
+ 	iret
+ ;	../stm8l10x_it.c: 230: INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_IRQHandler, 19)
+ ;	-----------------------------------------
+ ;	 function TIM2_UPD_OVF_TRG_BRK_IRQHandler
+ ;	-----------------------------------------
+ _TIM2_UPD_OVF_TRG_BRK_IRQHandler:
+ ;	../stm8l10x_it.c: 235: }
+ 	iret
+ ;	../stm8l10x_it.c: 242: INTERRUPT_HANDLER(TIM2_CAP_IRQHandler, 20)
+ ;	-----------------------------------------
+ ;	 function TIM2_CAP_IRQHandler
+ ;	-----------------------------------------
+ _TIM2_CAP_IRQHandler:
+ ;	../stm8l10x_it.c: 247: }
+ 	iret
+ ;	../stm8l10x_it.c: 255: INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_IRQHandler, 21)
+ ;	-----------------------------------------
+ ;	 function TIM3_UPD_OVF_TRG_BRK_IRQHandler
+ ;	-----------------------------------------
+ _TIM3_UPD_OVF_TRG_BRK_IRQHandler:
+ ;	../stm8l10x_it.c: 260: }
+ 	iret
+ ;	../stm8l10x_it.c: 266: INTERRUPT_HANDLER(TIM3_CAP_IRQHandler, 22)
+ ;	-----------------------------------------
+ ;	 function TIM3_CAP_IRQHandler
+ ;	-----------------------------------------
+ _TIM3_CAP_IRQHandler:
+ ;	../stm8l10x_it.c: 271: }
+ 	iret
+ ;	../stm8l10x_it.c: 277: INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 25)
+ ;	-----------------------------------------
+ ;	 function TIM4_UPD_OVF_IRQHandler
+ ;	-----------------------------------------
+ _TIM4_UPD_OVF_IRQHandler:
+ ;	../stm8l10x_it.c: 282: }
+ 	iret
+ ;	../stm8l10x_it.c: 289: INTERRUPT_HANDLER(SPI_IRQHandler, 26)
+ ;	-----------------------------------------
+ ;	 function SPI_IRQHandler
+ ;	-----------------------------------------
+ _SPI_IRQHandler:
+ ;	../stm8l10x_it.c: 294: }
+ 	iret
+ ;	../stm8l10x_it.c: 300: INTERRUPT_HANDLER(USART_TX_IRQHandler, 27)
+ ;	-----------------------------------------
+ ;	 function USART_TX_IRQHandler
+ ;	-----------------------------------------
+ _USART_TX_IRQHandler:
+ ;	../stm8l10x_it.c: 305: }
+ 	iret
+ ;	../stm8l10x_it.c: 312: INTERRUPT_HANDLER(USART_RX_IRQHandler, 28)
+ ;	-----------------------------------------
+ ;	 function USART_RX_IRQHandler
+ ;	-----------------------------------------
+ _USART_RX_IRQHandler:
+ ;	../stm8l10x_it.c: 317: }
+ 	iret
+ ;	../stm8l10x_it.c: 325: INTERRUPT_HANDLER(I2C_IRQHandler, 29)
+ ;	-----------------------------------------
+ ;	 function I2C_IRQHandler
+ ;	-----------------------------------------
+ _I2C_IRQHandler:
+ ;	../stm8l10x_it.c: 330: }
+ 	iret
+ 	.area CODE
+ 	.area INITIALIZER
+ 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.lst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.lst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.lst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.lst	2017-08-15 21:23:08.258256043 +0200
***************
*** 0 ****
--- 1,225 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module stm8l10x_it
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _I2C_IRQHandler
+                                      12 	.globl _USART_RX_IRQHandler
+                                      13 	.globl _USART_TX_IRQHandler
+                                      14 	.globl _SPI_IRQHandler
+                                      15 	.globl _TIM4_UPD_OVF_IRQHandler
+                                      16 	.globl _TIM3_CAP_IRQHandler
+                                      17 	.globl _TIM3_UPD_OVF_TRG_BRK_IRQHandler
+                                      18 	.globl _TIM2_CAP_IRQHandler
+                                      19 	.globl _TIM2_UPD_OVF_TRG_BRK_IRQHandler
+                                      20 	.globl _COMP_IRQHandler
+                                      21 	.globl _EXTI7_IRQHandler
+                                      22 	.globl _EXTI6_IRQHandler
+                                      23 	.globl _EXTI5_IRQHandler
+                                      24 	.globl _EXTI4_IRQHandler
+                                      25 	.globl _EXTI3_IRQHandler
+                                      26 	.globl _EXTI2_IRQHandler
+                                      27 	.globl _EXTI1_IRQHandler
+                                      28 	.globl _EXTI0_IRQHandler
+                                      29 	.globl _EXTID_IRQHandler
+                                      30 	.globl _EXTIB_IRQHandler
+                                      31 	.globl _AWU_IRQHandler
+                                      32 	.globl _FLASH_IRQHandler
+                                      33 	.globl _TRAP_IRQHandler
+                                      34 ;--------------------------------------------------------
+                                      35 ; ram data
+                                      36 ;--------------------------------------------------------
+                                      37 	.area DATA
+                                      38 ;--------------------------------------------------------
+                                      39 ; ram data
+                                      40 ;--------------------------------------------------------
+                                      41 	.area INITIALIZED
+                                      42 ;--------------------------------------------------------
+                                      43 ; absolute external ram data
+                                      44 ;--------------------------------------------------------
+                                      45 	.area DABS (ABS)
+                                      46 ;--------------------------------------------------------
+                                      47 ; global & static initialisations
+                                      48 ;--------------------------------------------------------
+                                      49 	.area HOME
+                                      50 	.area GSINIT
+                                      51 	.area GSFINAL
+                                      52 	.area GSINIT
+                                      53 ;--------------------------------------------------------
+                                      54 ; Home
+                                      55 ;--------------------------------------------------------
+                                      56 	.area HOME
+                                      57 	.area HOME
+                                      58 ;--------------------------------------------------------
+                                      59 ; code
+                                      60 ;--------------------------------------------------------
+                                      61 	.area CODE
+                                      62 ;	../stm8l10x_it.c: 61: INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
+                                      63 ;	-----------------------------------------
+                                      64 ;	 function TRAP_IRQHandler
+                                      65 ;	-----------------------------------------
+       000000                         66 _TRAP_IRQHandler:
+                                      67 ;	../stm8l10x_it.c: 66: }
+       000000 80               [11]   68 	iret
+                                      69 ;	../stm8l10x_it.c: 73: INTERRUPT_HANDLER(FLASH_IRQHandler,1)
+                                      70 ;	-----------------------------------------
+                                      71 ;	 function FLASH_IRQHandler
+                                      72 ;	-----------------------------------------
+       000001                         73 _FLASH_IRQHandler:
+                                      74 ;	../stm8l10x_it.c: 78: }
+       000001 80               [11]   75 	iret
+                                      76 ;	../stm8l10x_it.c: 85: INTERRUPT_HANDLER(AWU_IRQHandler,4)
+                                      77 ;	-----------------------------------------
+                                      78 ;	 function AWU_IRQHandler
+                                      79 ;	-----------------------------------------
+       000002                         80 _AWU_IRQHandler:
+                                      81 ;	../stm8l10x_it.c: 90: }
+       000002 80               [11]   82 	iret
+                                      83 ;	../stm8l10x_it.c: 97: INTERRUPT_HANDLER(EXTIB_IRQHandler, 6)
+                                      84 ;	-----------------------------------------
+                                      85 ;	 function EXTIB_IRQHandler
+                                      86 ;	-----------------------------------------
+       000003                         87 _EXTIB_IRQHandler:
+                                      88 ;	../stm8l10x_it.c: 102: }
+       000003 80               [11]   89 	iret
+                                      90 ;	../stm8l10x_it.c: 109: INTERRUPT_HANDLER(EXTID_IRQHandler, 7)
+                                      91 ;	-----------------------------------------
+                                      92 ;	 function EXTID_IRQHandler
+                                      93 ;	-----------------------------------------
+       000004                         94 _EXTID_IRQHandler:
+                                      95 ;	../stm8l10x_it.c: 114: }
+       000004 80               [11]   96 	iret
+                                      97 ;	../stm8l10x_it.c: 121: INTERRUPT_HANDLER(EXTI0_IRQHandler, 8)
+                                      98 ;	-----------------------------------------
+                                      99 ;	 function EXTI0_IRQHandler
+                                     100 ;	-----------------------------------------
+       000005                        101 _EXTI0_IRQHandler:
+                                     102 ;	../stm8l10x_it.c: 126: }
+       000005 80               [11]  103 	iret
+                                     104 ;	../stm8l10x_it.c: 133: INTERRUPT_HANDLER(EXTI1_IRQHandler, 9)
+                                     105 ;	-----------------------------------------
+                                     106 ;	 function EXTI1_IRQHandler
+                                     107 ;	-----------------------------------------
+       000006                        108 _EXTI1_IRQHandler:
+                                     109 ;	../stm8l10x_it.c: 138: }
+       000006 80               [11]  110 	iret
+                                     111 ;	../stm8l10x_it.c: 145: INTERRUPT_HANDLER(EXTI2_IRQHandler, 10)
+                                     112 ;	-----------------------------------------
+                                     113 ;	 function EXTI2_IRQHandler
+                                     114 ;	-----------------------------------------
+       000007                        115 _EXTI2_IRQHandler:
+                                     116 ;	../stm8l10x_it.c: 150: }
+       000007 80               [11]  117 	iret
+                                     118 ;	../stm8l10x_it.c: 157: INTERRUPT_HANDLER(EXTI3_IRQHandler, 11)
+                                     119 ;	-----------------------------------------
+                                     120 ;	 function EXTI3_IRQHandler
+                                     121 ;	-----------------------------------------
+       000008                        122 _EXTI3_IRQHandler:
+                                     123 ;	../stm8l10x_it.c: 162: }
+       000008 80               [11]  124 	iret
+                                     125 ;	../stm8l10x_it.c: 169: INTERRUPT_HANDLER(EXTI4_IRQHandler, 12)
+                                     126 ;	-----------------------------------------
+                                     127 ;	 function EXTI4_IRQHandler
+                                     128 ;	-----------------------------------------
+       000009                        129 _EXTI4_IRQHandler:
+                                     130 ;	../stm8l10x_it.c: 174: }
+       000009 80               [11]  131 	iret
+                                     132 ;	../stm8l10x_it.c: 181: INTERRUPT_HANDLER(EXTI5_IRQHandler, 13)
+                                     133 ;	-----------------------------------------
+                                     134 ;	 function EXTI5_IRQHandler
+                                     135 ;	-----------------------------------------
+       00000A                        136 _EXTI5_IRQHandler:
+                                     137 ;	../stm8l10x_it.c: 186: }
+       00000A 80               [11]  138 	iret
+                                     139 ;	../stm8l10x_it.c: 193: INTERRUPT_HANDLER(EXTI6_IRQHandler, 14)
+                                     140 ;	-----------------------------------------
+                                     141 ;	 function EXTI6_IRQHandler
+                                     142 ;	-----------------------------------------
+       00000B                        143 _EXTI6_IRQHandler:
+                                     144 ;	../stm8l10x_it.c: 199: }
+       00000B 80               [11]  145 	iret
+                                     146 ;	../stm8l10x_it.c: 206: INTERRUPT_HANDLER(EXTI7_IRQHandler, 15)
+                                     147 ;	-----------------------------------------
+                                     148 ;	 function EXTI7_IRQHandler
+                                     149 ;	-----------------------------------------
+       00000C                        150 _EXTI7_IRQHandler:
+                                     151 ;	../stm8l10x_it.c: 211: }
+       00000C 80               [11]  152 	iret
+                                     153 ;	../stm8l10x_it.c: 218: INTERRUPT_HANDLER(COMP_IRQHandler, 18)
+                                     154 ;	-----------------------------------------
+                                     155 ;	 function COMP_IRQHandler
+                                     156 ;	-----------------------------------------
+       00000D                        157 _COMP_IRQHandler:
+                                     158 ;	../stm8l10x_it.c: 223: }
+       00000D 80               [11]  159 	iret
+                                     160 ;	../stm8l10x_it.c: 230: INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_IRQHandler, 19)
+                                     161 ;	-----------------------------------------
+                                     162 ;	 function TIM2_UPD_OVF_TRG_BRK_IRQHandler
+                                     163 ;	-----------------------------------------
+       00000E                        164 _TIM2_UPD_OVF_TRG_BRK_IRQHandler:
+                                     165 ;	../stm8l10x_it.c: 235: }
+       00000E 80               [11]  166 	iret
+                                     167 ;	../stm8l10x_it.c: 242: INTERRUPT_HANDLER(TIM2_CAP_IRQHandler, 20)
+                                     168 ;	-----------------------------------------
+                                     169 ;	 function TIM2_CAP_IRQHandler
+                                     170 ;	-----------------------------------------
+       00000F                        171 _TIM2_CAP_IRQHandler:
+                                     172 ;	../stm8l10x_it.c: 247: }
+       00000F 80               [11]  173 	iret
+                                     174 ;	../stm8l10x_it.c: 255: INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_IRQHandler, 21)
+                                     175 ;	-----------------------------------------
+                                     176 ;	 function TIM3_UPD_OVF_TRG_BRK_IRQHandler
+                                     177 ;	-----------------------------------------
+       000010                        178 _TIM3_UPD_OVF_TRG_BRK_IRQHandler:
+                                     179 ;	../stm8l10x_it.c: 260: }
+       000010 80               [11]  180 	iret
+                                     181 ;	../stm8l10x_it.c: 266: INTERRUPT_HANDLER(TIM3_CAP_IRQHandler, 22)
+                                     182 ;	-----------------------------------------
+                                     183 ;	 function TIM3_CAP_IRQHandler
+                                     184 ;	-----------------------------------------
+       000011                        185 _TIM3_CAP_IRQHandler:
+                                     186 ;	../stm8l10x_it.c: 271: }
+       000011 80               [11]  187 	iret
+                                     188 ;	../stm8l10x_it.c: 277: INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 25)
+                                     189 ;	-----------------------------------------
+                                     190 ;	 function TIM4_UPD_OVF_IRQHandler
+                                     191 ;	-----------------------------------------
+       000012                        192 _TIM4_UPD_OVF_IRQHandler:
+                                     193 ;	../stm8l10x_it.c: 282: }
+       000012 80               [11]  194 	iret
+                                     195 ;	../stm8l10x_it.c: 289: INTERRUPT_HANDLER(SPI_IRQHandler, 26)
+                                     196 ;	-----------------------------------------
+                                     197 ;	 function SPI_IRQHandler
+                                     198 ;	-----------------------------------------
+       000013                        199 _SPI_IRQHandler:
+                                     200 ;	../stm8l10x_it.c: 294: }
+       000013 80               [11]  201 	iret
+                                     202 ;	../stm8l10x_it.c: 300: INTERRUPT_HANDLER(USART_TX_IRQHandler, 27)
+                                     203 ;	-----------------------------------------
+                                     204 ;	 function USART_TX_IRQHandler
+                                     205 ;	-----------------------------------------
+       000014                        206 _USART_TX_IRQHandler:
+                                     207 ;	../stm8l10x_it.c: 305: }
+       000014 80               [11]  208 	iret
+                                     209 ;	../stm8l10x_it.c: 312: INTERRUPT_HANDLER(USART_RX_IRQHandler, 28)
+                                     210 ;	-----------------------------------------
+                                     211 ;	 function USART_RX_IRQHandler
+                                     212 ;	-----------------------------------------
+       000015                        213 _USART_RX_IRQHandler:
+                                     214 ;	../stm8l10x_it.c: 317: }
+       000015 80               [11]  215 	iret
+                                     216 ;	../stm8l10x_it.c: 325: INTERRUPT_HANDLER(I2C_IRQHandler, 29)
+                                     217 ;	-----------------------------------------
+                                     218 ;	 function I2C_IRQHandler
+                                     219 ;	-----------------------------------------
+       000016                        220 _I2C_IRQHandler:
+                                     221 ;	../stm8l10x_it.c: 330: }
+       000016 80               [11]  222 	iret
+                                     223 	.area CODE
+                                     224 	.area INITIALIZER
+                                     225 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rel ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rel
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rel	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rel	2017-08-15 21:23:08.258256043 +0200
***************
*** 0 ****
--- 1,130 ----
+ XH3
+ H A areas 18 global symbols
+ M stm8l10x_it
+ O -mstm8
+ S .__.ABS. Def000000
+ A _CODE size 0 flags 0 addr 0
+ A DATA size 0 flags 0 addr 0
+ A INITIALIZED size 0 flags 0 addr 0
+ A DABS size 0 flags 8 addr 0
+ A HOME size 0 flags 0 addr 0
+ A GSINIT size 0 flags 0 addr 0
+ A GSFINAL size 0 flags 0 addr 0
+ A CODE size 17 flags 0 addr 0
+ S _USART_RX_IRQHandler Def000015
+ S _USART_TX_IRQHandler Def000014
+ S _EXTI0_IRQHandler Def000005
+ S _EXTI1_IRQHandler Def000006
+ S _EXTI2_IRQHandler Def000007
+ S _SPI_IRQHandler Def000013
+ S _AWU_IRQHandler Def000002
+ S _EXTI3_IRQHandler Def000008
+ S _FLASH_IRQHandler Def000001
+ S _EXTI4_IRQHandler Def000009
+ S _EXTI5_IRQHandler Def00000A
+ S _COMP_IRQHandler Def00000D
+ S _EXTI6_IRQHandler Def00000B
+ S _TIM4_UPD_OVF_IRQHandler Def000012
+ S _EXTI7_IRQHandler Def00000C
+ S _TRAP_IRQHandler Def000000
+ S _TIM2_UPD_OVF_TRG_BRK_IRQHandler Def00000E
+ S _TIM3_UPD_OVF_TRG_BRK_IRQHandler Def000010
+ S _EXTIB_IRQHandler Def000003
+ S _EXTID_IRQHandler Def000004
+ S _I2C_IRQHandler Def000016
+ S _TIM2_CAP_IRQHandler Def00000F
+ S _TIM3_CAP_IRQHandler Def000011
+ A INITIALIZER size 0 flags 0 addr 0
+ A CABS size 0 flags 8 addr 0
+ T 00 00 00
+ R 00 00 00 07
+ T 00 00 00 80
+ R 00 00 00 07
+ T 00 00 01
+ R 00 00 00 07
+ T 00 00 01 80
+ R 00 00 00 07
+ T 00 00 02
+ R 00 00 00 07
+ T 00 00 02 80
+ R 00 00 00 07
+ T 00 00 03
+ R 00 00 00 07
+ T 00 00 03 80
+ R 00 00 00 07
+ T 00 00 04
+ R 00 00 00 07
+ T 00 00 04 80
+ R 00 00 00 07
+ T 00 00 05
+ R 00 00 00 07
+ T 00 00 05 80
+ R 00 00 00 07
+ T 00 00 06
+ R 00 00 00 07
+ T 00 00 06 80
+ R 00 00 00 07
+ T 00 00 07
+ R 00 00 00 07
+ T 00 00 07 80
+ R 00 00 00 07
+ T 00 00 08
+ R 00 00 00 07
+ T 00 00 08 80
+ R 00 00 00 07
+ T 00 00 09
+ R 00 00 00 07
+ T 00 00 09 80
+ R 00 00 00 07
+ T 00 00 0A
+ R 00 00 00 07
+ T 00 00 0A 80
+ R 00 00 00 07
+ T 00 00 0B
+ R 00 00 00 07
+ T 00 00 0B 80
+ R 00 00 00 07
+ T 00 00 0C
+ R 00 00 00 07
+ T 00 00 0C 80
+ R 00 00 00 07
+ T 00 00 0D
+ R 00 00 00 07
+ T 00 00 0D 80
+ R 00 00 00 07
+ T 00 00 0E
+ R 00 00 00 07
+ T 00 00 0E 80
+ R 00 00 00 07
+ T 00 00 0F
+ R 00 00 00 07
+ T 00 00 0F 80
+ R 00 00 00 07
+ T 00 00 10
+ R 00 00 00 07
+ T 00 00 10 80
+ R 00 00 00 07
+ T 00 00 11
+ R 00 00 00 07
+ T 00 00 11 80
+ R 00 00 00 07
+ T 00 00 12
+ R 00 00 00 07
+ T 00 00 12 80
+ R 00 00 00 07
+ T 00 00 13
+ R 00 00 00 07
+ T 00 00 13 80
+ R 00 00 00 07
+ T 00 00 14
+ R 00 00 00 07
+ T 00 00 14 80
+ R 00 00 00 07
+ T 00 00 15
+ R 00 00 00 07
+ T 00 00 15 80
+ R 00 00 00 07
+ T 00 00 16
+ R 00 00 00 07
+ T 00 00 16 80
+ R 00 00 00 07
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rst ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rst
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rst	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.rst	2017-08-15 21:24:53.589917166 +0200
***************
*** 0 ****
--- 1,225 ----
+                                       1 ;--------------------------------------------------------
+                                       2 ; File Created by SDCC : free open source ANSI-C Compiler
+                                       3 ; Version 3.6.0 #9615 (Linux)
+                                       4 ;--------------------------------------------------------
+                                       5 	.module stm8l10x_it
+                                       6 	.optsdcc -mstm8
+                                       7 	
+                                       8 ;--------------------------------------------------------
+                                       9 ; Public variables in this module
+                                      10 ;--------------------------------------------------------
+                                      11 	.globl _I2C_IRQHandler
+                                      12 	.globl _USART_RX_IRQHandler
+                                      13 	.globl _USART_TX_IRQHandler
+                                      14 	.globl _SPI_IRQHandler
+                                      15 	.globl _TIM4_UPD_OVF_IRQHandler
+                                      16 	.globl _TIM3_CAP_IRQHandler
+                                      17 	.globl _TIM3_UPD_OVF_TRG_BRK_IRQHandler
+                                      18 	.globl _TIM2_CAP_IRQHandler
+                                      19 	.globl _TIM2_UPD_OVF_TRG_BRK_IRQHandler
+                                      20 	.globl _COMP_IRQHandler
+                                      21 	.globl _EXTI7_IRQHandler
+                                      22 	.globl _EXTI6_IRQHandler
+                                      23 	.globl _EXTI5_IRQHandler
+                                      24 	.globl _EXTI4_IRQHandler
+                                      25 	.globl _EXTI3_IRQHandler
+                                      26 	.globl _EXTI2_IRQHandler
+                                      27 	.globl _EXTI1_IRQHandler
+                                      28 	.globl _EXTI0_IRQHandler
+                                      29 	.globl _EXTID_IRQHandler
+                                      30 	.globl _EXTIB_IRQHandler
+                                      31 	.globl _AWU_IRQHandler
+                                      32 	.globl _FLASH_IRQHandler
+                                      33 	.globl _TRAP_IRQHandler
+                                      34 ;--------------------------------------------------------
+                                      35 ; ram data
+                                      36 ;--------------------------------------------------------
+                                      37 	.area DATA
+                                      38 ;--------------------------------------------------------
+                                      39 ; ram data
+                                      40 ;--------------------------------------------------------
+                                      41 	.area INITIALIZED
+                                      42 ;--------------------------------------------------------
+                                      43 ; absolute external ram data
+                                      44 ;--------------------------------------------------------
+                                      45 	.area DABS (ABS)
+                                      46 ;--------------------------------------------------------
+                                      47 ; global & static initialisations
+                                      48 ;--------------------------------------------------------
+                                      49 	.area HOME
+                                      50 	.area GSINIT
+                                      51 	.area GSFINAL
+                                      52 	.area GSINIT
+                                      53 ;--------------------------------------------------------
+                                      54 ; Home
+                                      55 ;--------------------------------------------------------
+                                      56 	.area HOME
+                                      57 	.area HOME
+                                      58 ;--------------------------------------------------------
+                                      59 ; code
+                                      60 ;--------------------------------------------------------
+                                      61 	.area CODE
+                                      62 ;	../stm8l10x_it.c: 61: INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
+                                      63 ;	-----------------------------------------
+                                      64 ;	 function TRAP_IRQHandler
+                                      65 ;	-----------------------------------------
+       0080A3                         66 _TRAP_IRQHandler:
+                                      67 ;	../stm8l10x_it.c: 66: }
+       0080A3 80               [11]   68 	iret
+                                      69 ;	../stm8l10x_it.c: 73: INTERRUPT_HANDLER(FLASH_IRQHandler,1)
+                                      70 ;	-----------------------------------------
+                                      71 ;	 function FLASH_IRQHandler
+                                      72 ;	-----------------------------------------
+       0080A4                         73 _FLASH_IRQHandler:
+                                      74 ;	../stm8l10x_it.c: 78: }
+       0080A4 80               [11]   75 	iret
+                                      76 ;	../stm8l10x_it.c: 85: INTERRUPT_HANDLER(AWU_IRQHandler,4)
+                                      77 ;	-----------------------------------------
+                                      78 ;	 function AWU_IRQHandler
+                                      79 ;	-----------------------------------------
+       0080A5                         80 _AWU_IRQHandler:
+                                      81 ;	../stm8l10x_it.c: 90: }
+       0080A5 80               [11]   82 	iret
+                                      83 ;	../stm8l10x_it.c: 97: INTERRUPT_HANDLER(EXTIB_IRQHandler, 6)
+                                      84 ;	-----------------------------------------
+                                      85 ;	 function EXTIB_IRQHandler
+                                      86 ;	-----------------------------------------
+       0080A6                         87 _EXTIB_IRQHandler:
+                                      88 ;	../stm8l10x_it.c: 102: }
+       0080A6 80               [11]   89 	iret
+                                      90 ;	../stm8l10x_it.c: 109: INTERRUPT_HANDLER(EXTID_IRQHandler, 7)
+                                      91 ;	-----------------------------------------
+                                      92 ;	 function EXTID_IRQHandler
+                                      93 ;	-----------------------------------------
+       0080A7                         94 _EXTID_IRQHandler:
+                                      95 ;	../stm8l10x_it.c: 114: }
+       0080A7 80               [11]   96 	iret
+                                      97 ;	../stm8l10x_it.c: 121: INTERRUPT_HANDLER(EXTI0_IRQHandler, 8)
+                                      98 ;	-----------------------------------------
+                                      99 ;	 function EXTI0_IRQHandler
+                                     100 ;	-----------------------------------------
+       0080A8                        101 _EXTI0_IRQHandler:
+                                     102 ;	../stm8l10x_it.c: 126: }
+       0080A8 80               [11]  103 	iret
+                                     104 ;	../stm8l10x_it.c: 133: INTERRUPT_HANDLER(EXTI1_IRQHandler, 9)
+                                     105 ;	-----------------------------------------
+                                     106 ;	 function EXTI1_IRQHandler
+                                     107 ;	-----------------------------------------
+       0080A9                        108 _EXTI1_IRQHandler:
+                                     109 ;	../stm8l10x_it.c: 138: }
+       0080A9 80               [11]  110 	iret
+                                     111 ;	../stm8l10x_it.c: 145: INTERRUPT_HANDLER(EXTI2_IRQHandler, 10)
+                                     112 ;	-----------------------------------------
+                                     113 ;	 function EXTI2_IRQHandler
+                                     114 ;	-----------------------------------------
+       0080AA                        115 _EXTI2_IRQHandler:
+                                     116 ;	../stm8l10x_it.c: 150: }
+       0080AA 80               [11]  117 	iret
+                                     118 ;	../stm8l10x_it.c: 157: INTERRUPT_HANDLER(EXTI3_IRQHandler, 11)
+                                     119 ;	-----------------------------------------
+                                     120 ;	 function EXTI3_IRQHandler
+                                     121 ;	-----------------------------------------
+       0080AB                        122 _EXTI3_IRQHandler:
+                                     123 ;	../stm8l10x_it.c: 162: }
+       0080AB 80               [11]  124 	iret
+                                     125 ;	../stm8l10x_it.c: 169: INTERRUPT_HANDLER(EXTI4_IRQHandler, 12)
+                                     126 ;	-----------------------------------------
+                                     127 ;	 function EXTI4_IRQHandler
+                                     128 ;	-----------------------------------------
+       0080AC                        129 _EXTI4_IRQHandler:
+                                     130 ;	../stm8l10x_it.c: 174: }
+       0080AC 80               [11]  131 	iret
+                                     132 ;	../stm8l10x_it.c: 181: INTERRUPT_HANDLER(EXTI5_IRQHandler, 13)
+                                     133 ;	-----------------------------------------
+                                     134 ;	 function EXTI5_IRQHandler
+                                     135 ;	-----------------------------------------
+       0080AD                        136 _EXTI5_IRQHandler:
+                                     137 ;	../stm8l10x_it.c: 186: }
+       0080AD 80               [11]  138 	iret
+                                     139 ;	../stm8l10x_it.c: 193: INTERRUPT_HANDLER(EXTI6_IRQHandler, 14)
+                                     140 ;	-----------------------------------------
+                                     141 ;	 function EXTI6_IRQHandler
+                                     142 ;	-----------------------------------------
+       0080AE                        143 _EXTI6_IRQHandler:
+                                     144 ;	../stm8l10x_it.c: 199: }
+       0080AE 80               [11]  145 	iret
+                                     146 ;	../stm8l10x_it.c: 206: INTERRUPT_HANDLER(EXTI7_IRQHandler, 15)
+                                     147 ;	-----------------------------------------
+                                     148 ;	 function EXTI7_IRQHandler
+                                     149 ;	-----------------------------------------
+       0080AF                        150 _EXTI7_IRQHandler:
+                                     151 ;	../stm8l10x_it.c: 211: }
+       0080AF 80               [11]  152 	iret
+                                     153 ;	../stm8l10x_it.c: 218: INTERRUPT_HANDLER(COMP_IRQHandler, 18)
+                                     154 ;	-----------------------------------------
+                                     155 ;	 function COMP_IRQHandler
+                                     156 ;	-----------------------------------------
+       0080B0                        157 _COMP_IRQHandler:
+                                     158 ;	../stm8l10x_it.c: 223: }
+       0080B0 80               [11]  159 	iret
+                                     160 ;	../stm8l10x_it.c: 230: INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_IRQHandler, 19)
+                                     161 ;	-----------------------------------------
+                                     162 ;	 function TIM2_UPD_OVF_TRG_BRK_IRQHandler
+                                     163 ;	-----------------------------------------
+       0080B1                        164 _TIM2_UPD_OVF_TRG_BRK_IRQHandler:
+                                     165 ;	../stm8l10x_it.c: 235: }
+       0080B1 80               [11]  166 	iret
+                                     167 ;	../stm8l10x_it.c: 242: INTERRUPT_HANDLER(TIM2_CAP_IRQHandler, 20)
+                                     168 ;	-----------------------------------------
+                                     169 ;	 function TIM2_CAP_IRQHandler
+                                     170 ;	-----------------------------------------
+       0080B2                        171 _TIM2_CAP_IRQHandler:
+                                     172 ;	../stm8l10x_it.c: 247: }
+       0080B2 80               [11]  173 	iret
+                                     174 ;	../stm8l10x_it.c: 255: INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_IRQHandler, 21)
+                                     175 ;	-----------------------------------------
+                                     176 ;	 function TIM3_UPD_OVF_TRG_BRK_IRQHandler
+                                     177 ;	-----------------------------------------
+       0080B3                        178 _TIM3_UPD_OVF_TRG_BRK_IRQHandler:
+                                     179 ;	../stm8l10x_it.c: 260: }
+       0080B3 80               [11]  180 	iret
+                                     181 ;	../stm8l10x_it.c: 266: INTERRUPT_HANDLER(TIM3_CAP_IRQHandler, 22)
+                                     182 ;	-----------------------------------------
+                                     183 ;	 function TIM3_CAP_IRQHandler
+                                     184 ;	-----------------------------------------
+       0080B4                        185 _TIM3_CAP_IRQHandler:
+                                     186 ;	../stm8l10x_it.c: 271: }
+       0080B4 80               [11]  187 	iret
+                                     188 ;	../stm8l10x_it.c: 277: INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 25)
+                                     189 ;	-----------------------------------------
+                                     190 ;	 function TIM4_UPD_OVF_IRQHandler
+                                     191 ;	-----------------------------------------
+       0080B5                        192 _TIM4_UPD_OVF_IRQHandler:
+                                     193 ;	../stm8l10x_it.c: 282: }
+       0080B5 80               [11]  194 	iret
+                                     195 ;	../stm8l10x_it.c: 289: INTERRUPT_HANDLER(SPI_IRQHandler, 26)
+                                     196 ;	-----------------------------------------
+                                     197 ;	 function SPI_IRQHandler
+                                     198 ;	-----------------------------------------
+       0080B6                        199 _SPI_IRQHandler:
+                                     200 ;	../stm8l10x_it.c: 294: }
+       0080B6 80               [11]  201 	iret
+                                     202 ;	../stm8l10x_it.c: 300: INTERRUPT_HANDLER(USART_TX_IRQHandler, 27)
+                                     203 ;	-----------------------------------------
+                                     204 ;	 function USART_TX_IRQHandler
+                                     205 ;	-----------------------------------------
+       0080B7                        206 _USART_TX_IRQHandler:
+                                     207 ;	../stm8l10x_it.c: 305: }
+       0080B7 80               [11]  208 	iret
+                                     209 ;	../stm8l10x_it.c: 312: INTERRUPT_HANDLER(USART_RX_IRQHandler, 28)
+                                     210 ;	-----------------------------------------
+                                     211 ;	 function USART_RX_IRQHandler
+                                     212 ;	-----------------------------------------
+       0080B8                        213 _USART_RX_IRQHandler:
+                                     214 ;	../stm8l10x_it.c: 317: }
+       0080B8 80               [11]  215 	iret
+                                     216 ;	../stm8l10x_it.c: 325: INTERRUPT_HANDLER(I2C_IRQHandler, 29)
+                                     217 ;	-----------------------------------------
+                                     218 ;	 function I2C_IRQHandler
+                                     219 ;	-----------------------------------------
+       0080B9                        220 _I2C_IRQHandler:
+                                     221 ;	../stm8l10x_it.c: 330: }
+       0080B9 80               [11]  222 	iret
+                                     223 	.area CODE
+                                     224 	.area INITIALIZER
+                                     225 	.area CABS (ABS)
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.sym ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.sym
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.sym	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/stm8l10x_it.sym	2017-08-15 21:23:08.258256043 +0200
***************
*** 0 ****
--- 1,49 ----
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 1.
+ Hexadecimal [24-Bits]
+ 
+ Symbol Table
+ 
+     .__.$$$.                                                    =  002710 L
+     .__.ABS.                                                    =  000000 G
+     .__.CPU.                                                    =  000000 L
+     .__.H$L.                                                    =  000001 L
+   7 _AWU_IRQHandler                                                000002 GR
+   7 _COMP_IRQHandler                                               00000D GR
+   7 _EXTI0_IRQHandler                                              000005 GR
+   7 _EXTI1_IRQHandler                                              000006 GR
+   7 _EXTI2_IRQHandler                                              000007 GR
+   7 _EXTI3_IRQHandler                                              000008 GR
+   7 _EXTI4_IRQHandler                                              000009 GR
+   7 _EXTI5_IRQHandler                                              00000A GR
+   7 _EXTI6_IRQHandler                                              00000B GR
+   7 _EXTI7_IRQHandler                                              00000C GR
+   7 _EXTIB_IRQHandler                                              000003 GR
+   7 _EXTID_IRQHandler                                              000004 GR
+   7 _FLASH_IRQHandler                                              000001 GR
+   7 _I2C_IRQHandler                                                000016 GR
+   7 _SPI_IRQHandler                                                000013 GR
+   7 _TIM2_CAP_IRQHandler                                           00000F GR
+   7 _TIM2_UPD_OVF_TRG_BRK_IRQHandler                               00000E GR
+   7 _TIM3_CAP_IRQHandler                                           000011 GR
+   7 _TIM3_UPD_OVF_TRG_BRK_IRQHandler                               000010 GR
+   7 _TIM4_UPD_OVF_IRQHandler                                       000012 GR
+   7 _TRAP_IRQHandler                                               000000 GR
+   7 _USART_RX_IRQHandler                                           000015 GR
+   7 _USART_TX_IRQHandler                                           000014 GR
+ 
+ ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 2.
+ Hexadecimal [24-Bits]
+ 
+ Area Table
+ 
+    0 _CODE                                      size      0   flags    0
+    1 DATA                                       size      0   flags    0
+    2 INITIALIZED                                size      0   flags    0
+    3 DABS                                       size      0   flags    8
+    4 HOME                                       size      0   flags    0
+    5 GSINIT                                     size      0   flags    0
+    6 GSFINAL                                    size      0   flags    0
+    7 CODE                                       size     17   flags    0
+    8 INITIALIZER                                size      0   flags    0
+    9 CABS                                       size      0   flags    8
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.lk ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.lk
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.lk	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.lk	2017-08-15 21:24:53.569917230 +0200
***************
*** 0 ****
--- 1,14 ----
+ -muwx
+ -i ./STM8L10x/STM8L10x.hex
+ -Y
+ -b HOME = 0x8000
+ -b DATA = 0x0001
+ -k /usr/local/bin/../share/sdcc/lib/stm8
+ -k /usr/local/share/sdcc/lib/stm8
+ -l stm8
+ -l stm8
+ STM8L10x/main.rel
+ STM8L10x/stm8l10x_it.rel
+ STM8L10x/stm8l10x_gpio.rel
+ 
+ -e
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.map ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.map
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.map	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/STM8L10x/STM8L10x.map	2017-08-15 21:24:53.593917153 +0200
***************
*** 0 ****
--- 1,130 ----
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 1.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ .  .ABS.                            00000000    00000000 =           0. bytes (ABS,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+      00000000  .__.ABS.                           stm8l10x_gpio
+      00000000  l_CABS                          
+      00000000  l_DABS                          
+      00000000  l_DATA                          
+      00000000  l_INITIALIZED                   
+      00000000  l_INITIALIZER                   
+      00000000  l__CODE                         
+      00000000  s_CABS                          
+      00000000  s_DABS                          
+      00000000  s__CODE                         
+      00000001  l_SSEG                          
+      00000001  s_DATA                          
+      00000001  s_INITIALIZED                   
+      00000001  s_SSEG                          
+      00000003  l_GSFINAL                       
+      0000001A  l_GSINIT                        
+      00000083  l_HOME                          
+      00000113  l_CODE                          
+      00008000  s_HOME                          
+      00008083  s_GSINIT                        
+      0000809D  s_GSFINAL                       
+      000080A0  s_CODE                          
+      000081B3  s_INITIALIZER                   
+ 
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 2.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ SSEG                                00000001    00000001 =           1. bytes (REL,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 3.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ HOME                                00008000    00000083 =         131. bytes (REL,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 4.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ GSINIT                              00008083    0000001A =          26. bytes (REL,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 5.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ GSFINAL                             0000809D    00000003 =           3. bytes (REL,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 6.
+ Hexadecimal  [32-Bits]
+ 
+ Area                                    Addr        Size        Decimal Bytes (Attributes)
+ --------------------------------        ----        ----        ------- ----- ------------
+ CODE                                000080A0    00000113 =         275. bytes (REL,CON)
+ 
+       Value  Global                              Global Defined In Module
+       -----  --------------------------------   ------------------------
+      000080A0  _main                              main
+      000080A3  _TRAP_IRQHandler                   stm8l10x_it
+      000080A4  _FLASH_IRQHandler                  stm8l10x_it
+      000080A5  _AWU_IRQHandler                    stm8l10x_it
+      000080A6  _EXTIB_IRQHandler                  stm8l10x_it
+      000080A7  _EXTID_IRQHandler                  stm8l10x_it
+      000080A8  _EXTI0_IRQHandler                  stm8l10x_it
+      000080A9  _EXTI1_IRQHandler                  stm8l10x_it
+      000080AA  _EXTI2_IRQHandler                  stm8l10x_it
+      000080AB  _EXTI3_IRQHandler                  stm8l10x_it
+      000080AC  _EXTI4_IRQHandler                  stm8l10x_it
+      000080AD  _EXTI5_IRQHandler                  stm8l10x_it
+      000080AE  _EXTI6_IRQHandler                  stm8l10x_it
+      000080AF  _EXTI7_IRQHandler                  stm8l10x_it
+      000080B0  _COMP_IRQHandler                   stm8l10x_it
+      000080B1  _TIM2_UPD_OVF_TRG_BRK_IRQHandler   stm8l10x_it
+      000080B2  _TIM2_CAP_IRQHandler               stm8l10x_it
+      000080B3  _TIM3_UPD_OVF_TRG_BRK_IRQHandler   stm8l10x_it
+      000080B4  _TIM3_CAP_IRQHandler               stm8l10x_it
+      000080B5  _TIM4_UPD_OVF_IRQHandler           stm8l10x_it
+      000080B6  _SPI_IRQHandler                    stm8l10x_it
+      000080B7  _USART_TX_IRQHandler               stm8l10x_it
+      000080B8  _USART_RX_IRQHandler               stm8l10x_it
+      000080B9  _I2C_IRQHandler                    stm8l10x_it
+      000080BA  _GPIO_DeInit                       stm8l10x_gpio
+      000080D5  _GPIO_Init                         stm8l10x_gpio
+      0000813B  _GPIO_Write                        stm8l10x_gpio
+      00008141  _GPIO_WriteBit                     stm8l10x_gpio
+      00008166  _GPIO_SetBits                      stm8l10x_gpio
+      0000816D  _GPIO_ResetBits                    stm8l10x_gpio
+      0000817B  _GPIO_ToggleBits                   stm8l10x_gpio
+      00008182  _GPIO_ReadInputData                stm8l10x_gpio
+      00008187  _GPIO_ReadOutputData               stm8l10x_gpio
+      0000818B  _GPIO_ReadInputDataBit             stm8l10x_gpio
+      00008192  _GPIO_ReadOutputDataBit            stm8l10x_gpio
+      00008198  _GPIO_ExternalPullUpConfig         stm8l10x_gpio
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 7.
+ 
+ Files Linked                              [ module(s) ]
+ 
+ STM8L10x/main.rel                         [ main ]
+ STM8L10x/stm8l10x_it.rel                  [ stm8l10x_it ]
+ STM8L10x/stm8l10x_gpio.rel                [ stm8l10x_gpio ]
+ 
+ ASxxxx Linker V03.00 + NoICE + sdld,  page 8.
+ 
+ User Base Address Definitions
+ 
+ HOME = 0x8000
+ DATA = 0x0001
+ 
+ 
\ Kein Zeilenumbruch am Dateiende.
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_clean.sh ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_clean.sh
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_clean.sh	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_clean.sh	2017-08-15 21:26:46.089560392 +0200
***************
*** 0 ****
--- 1,23 ----
+ #!/bin/bash 
+ 
+ # change to current working directory
+ cd `dirname $0`
+ 
+ # just for output
+ echo off
+ clear
+ 
+ # target device (doesn't matter here)
+ DEVICE=STM8L10x
+ 
+ # set make tool (if not in PATH, set complete path)
+ MAKE=make
+ 
+ # use Makefiles to delete outputs
+ #$MAKE -f Makefile DEVICE=$DEVICE clean 
+ 
+ # also delete output folders
+ rm -fr $DEVICE
+ 
+ echo on
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_compile_run.sh ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_compile_run.sh
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_compile_run.sh	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_UX_compile_run.sh	2017-08-15 16:59:02.740896675 +0200
***************
*** 0 ****
--- 1,49 ----
+ #!/bin/bash 
+ 
+ # change to current working directory
+ cd `dirname $0`
+ 
+ # just for output
+ clear
+ 
+ # target device (doesn't matter here)
+ DEVICE=STM8L10x
+ 
+ # set make tool (if not in PATH, set complete path)
+ MAKE=make
+ 
+ # set serial upload tool and serial port (from https://github.com/gicking/STM8_serial_flasher)
+ BSL_LOADER=../../../../../STM8_serial_flasher/STM8_serial_flasher
+ BSL_PORT=/dev/ttyUSB0
+ 
+ # set SWIM upload tool and device name (from https://github.com/vdudouyt/stm8flash)
+ SWIM_LOADER=../../../../../stm8flash/stm8flash
+ SWIM_DEVICE=stm8s207mb                            # seems to be unimportant
+ 
+ # target hexfile
+ TARGET=./$DEVICE/$DEVICE.hex
+ 
+ # make project; check for output folder (=device name)
+ echo "make application"
+ test -d $DEVICE || mkdir $DEVICE
+ $MAKE -f Makefile DEVICE=$DEVICE
+ if [ $? -ne 0 ]; then
+   echo " "
+   read -p "press key to close window..."
+   echo on
+   exit
+ fi
+ echo "done with application"
+ echo " "
+ 
+ # upload using STM8 serial bootloader
+ #$BSL_LOADER -p $BSL_PORT -w $TARGET -v
+ 
+ # upload using SWIM debug interface
+ $SWIM_LOADER -c stlink -w $TARGET -p $SWIM_DEVICE
+ 
+ echo " "
+ read -p "press key to close window..."
+ echo " "
+ 
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_clean.bat ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_clean.bat
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_clean.bat	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_clean.bat	2017-08-15 21:27:31.969415500 +0200
***************
*** 0 ****
--- 1,18 ----
+ REM just for output
+ echo off
+ cls
+ 
+ REM target device (doesn't matter here)
+ set DEVICE=STM8L10x
+ 
+ REM set make tool (if not in PATH, set complete path)
+ set MAKE=mingw32-make
+ 
+ REM use makefile to delete sdcc output
+ REM %MAKE% -f Makefile DEVICE=%DEVICE% clean
+ 
+ REM also delete output folders
+ rd /S /Q  %DEVICE%
+ 
+ echo on
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_compile_run.bat ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_compile_run.bat
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_compile_run.bat	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_compile_run.bat	2017-08-15 21:27:39.105392940 +0200
***************
*** 0 ****
--- 1,50 ----
+ REM just for output
+ echo off
+ cls
+ 
+ REM target device (doesn't matter here)
+ set DEVICE=STM8L10x
+ 
+ REM set make tool (if not in PATH, set complete path)
+ set MAKE=mingw32-make
+ 
+ REM set serial upload tool and serial port (from https://github.com/gicking/STM8_serial_flasher)
+ set BSL_LOADER="..\..\..\..\..\STM8_serial_flasher\STM8_serial_flasher.exe"
+ set BSL_PORT=7
+ 
+ REM set SWIM upload tool and device name (from https://github.com/vdudouyt/stm8flash)
+ REM set SWIM_LOADER=..\..\..\..\..\stm8flash\stm8flash.exe"
+ REM set SWIM_DEVICE=stm8s207mb
+ 
+ REM set SWIM upload tool and device name (STVP from ST homepage)
+ set SWIM_LOADER="C:\Programme\STMicroelectronics\st_toolset\stvp\STVP_CmdLine.exe"
+ set SWIM_DEVICE=STM8S105x6
+ REM set SWIM_DEVICE=STM8S207MB
+ 
+ REM name of target hexfile
+ set TARGET=.\%DEVICE%\%DEVICE%.hex
+ 
+ REM compile and link
+ echo make application
+ if not exist %DEVICE% mkdir %DEVICE%
+ %MAKE% -f Makefile DEVICE=%DEVICE%
+ IF ERRORLEVEL 1 GOTO END
+ echo done with application
+ echo.
+ 
+ REM GOTO END
+ 
+ REM upload using STM8 serial bootloader
+ REM %BSL_LOADER% -p %BSL_PORT% -w %TARGET% -v
+ 
+ REM upload using SWIM debug interface (stm8flash)
+ REM %SWIM_LOADER% -c stlink -w %TARGET% -p %SWIM_DEVICE%
+ 
+ REM upload using SWIM debug interface (STVP)
+ %SWIM_LOADER% -BoardName=ST-LINK -Port=USB -ProgMode=SWIM -Device=%DEVICE_STVP% -readData -readOption -no_progData -no_progOption -no_loop -no_log -FileProg=%TARGET%
+ 
+ REM clean up
+ :END
+ PAUSE
+ echo on
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_upload.bat ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_upload.bat
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_upload.bat	1970-01-01 01:00:00.000000000 +0100
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/SDCC/_WIN_upload.bat	2017-07-15 21:15:07.000000000 +0200
***************
*** 0 ****
--- 1,29 ----
+ REM just for output
+ echo off
+ cls
+ 
+ REM set path to STM8 flasher tool (own or by STM)
+ REM set LOADER=C:\Users\ick2bue\Documents\STM8_serial_flasher\STM8_serial_flasher.exe
+ set LOADER=..\..\..\..\STM8_serial_flasher/STM8_serial_flasher.exe
+ 
+ REM set COM port for flash loader
+ set PORT=7
+ 
+ REM name of target hexfile
+ set TARGET=Debug\stm8af52ax.s19
+ 
+ REM ask user to put STM8 to bootloader mode
+ echo.
+ echo.
+ echo reset STM8 and press return
+ echo.
+ PAUSE 
+ 
+ REM upload using STM8 bootloader (use own flash tool or STMFlashLoader by STM)
+ %LOADER% -p COM%PORT% -f %TARGET% -v -Q 
+ 
+ REM clean up
+ :END
+ PAUSE
+ echo on
+ 
diff -rcN ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h
*** ./STM8L10x_StdPeriph_Lib/Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h	2014-10-21 14:13:30.000000000 +0200
--- ./STM8L10x_StdPeriph_Lib_sdcc/Project/STM8L10x_StdPeriph_Templates/stm8l10x_it.h	2017-08-16 16:22:44.917464221 +0200
***************
*** 41,48 ****
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! #ifndef _RAISONANCE_
!  INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
--- 41,49 ----
   INTERRUPT void NonHandledInterrupt(void);
  #endif /* _COSMIC_ */
  
! // SDCC patch: requires separate handling for SDCC (see below)
! #if !defined(_RAISONANCE_) && !defined(_SDCC_)
!  //INTERRUPT void NonHandledInterrupt(void);
   INTERRUPT void TRAP_IRQHandler(void); /* TRAP */
   INTERRUPT void FLASH_IRQHandler(void); /* FLASH EOP/PG_DIS */
   INTERRUPT void AWU_IRQHandler(void); /* AWU */
***************
*** 66,72 ****
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! #endif /* _COSMIC_ */
  
  #endif /* __STM8L10x_IT_H */
  
--- 67,102 ----
   INTERRUPT void USART_TX_IRQHandler(void); /* USART TX */
   INTERRUPT void USART_RX_IRQHandler(void); /* USART RX */
   INTERRUPT void I2C_IRQHandler(void); /* I2C */
! 
! 
! // SDCC patch: __interrupt keyword required after function name --> requires new block
! #elif defined (_SDCC_)
! 
!  void TRAP_IRQHandler(void) __trap;               /* TRAP */
!  void FLASH_IRQHandler(void) INTERRUPT(1);        /* FLASH EOP/PG_DIS */
!  void AWU_IRQHandler(void)   INTERRUPT(4);        /* AWU */
!  void EXTIB_IRQHandler(void) INTERRUPT(6);        /* EXTI PORTB */
!  void EXTID_IRQHandler(void) INTERRUPT(7);        /* EXTI PORTD */
!  void EXTI0_IRQHandler(void) INTERRUPT(8);        /* EXTI PIN0 */
!  void EXTI1_IRQHandler(void) INTERRUPT(9);        /* EXTI PIN1 */
!  void EXTI2_IRQHandler(void) INTERRUPT(10);       /* EXTI PIN2 */
!  void EXTI3_IRQHandler(void) INTERRUPT(11);       /* EXTI PIN3 */
!  void EXTI4_IRQHandler(void) INTERRUPT(12);       /* EXTI PIN4 */
!  void EXTI5_IRQHandler(void) INTERRUPT(13);       /* EXTI PIN5 */
!  void EXTI6_IRQHandler(void) INTERRUPT(14);       /* EXTI PIN6 */
!  void EXTI7_IRQHandler(void) INTERRUPT(15);       /* EXTI PIN7 */
!  void COMP_IRQHandler(void)  INTERRUPT(18);       /* COMP */
!  void TIM2_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(19); /* TIM2 UPD/OVF/TRG/BRK */
!  void TIM2_CAP_IRQHandler(void) INTERRUPT(20);    /* TIM2 CAP*/
!  void TIM3_UPD_OVF_TRG_BRK_IRQHandler(void) INTERRUPT(21); /* TIM3 UPD/OVF/TRG/BRK */
!  void TIM3_CAP_IRQHandler(void) INTERRUPT(22);    /* TIM3 CAP*/
!  void TIM4_UPD_OVF_IRQHandler(void) INTERRUPT(25); /* TIM4 UPD/OVF */
!  void SPI_IRQHandler(void)   INTERRUPT(26);       /* SPI */
!  void USART_TX_IRQHandler(void) INTERRUPT(27);    /* USART TX */
!  void USART_RX_IRQHandler(void) INTERRUPT(28);    /* USART RX */
!  void I2C_IRQHandler(void)   INTERRUPT(29);       /* I2C */
! 
! #endif /* !(_RAISONANCE_) && !(_SDCC_) */
  
  #endif /* __STM8L10x_IT_H */
  
